initSidebarItems({"struct":[["AtomicBitSet","This is similar to a [`BitSet`] but allows setting of value without unique ownership of the structure"],["BitIter","An `Iterator` over a [`BitSetLike`] structure."],["BitParIter","A `ParallelIterator` over a [`BitSetLike`] structure."],["BitProducer","Allows splitting and internally iterating through `BitSet`."],["BitSet","A `BitSet` is a simple set designed to track which indices are placed into it."],["BitSetAll","`BitSetAll` is a bitset with all bits set. Essentially the same as `BitSetNot(BitSet::new())` but without any allocation."],["BitSetAnd","`BitSetAnd` takes two [`BitSetLike`] items, and merges the masks returning a new virtual set, which represents an intersection of the two original sets."],["BitSetNot","`BitSetNot` takes a [`BitSetLike`] item, and produced an inverted virtual set. Note: the implementation is sub-optimal because layers 1-3 are not active."],["BitSetOr","`BitSetOr` takes two [`BitSetLike`] items, and merges the masks returning a new virtual set, which represents an merged of the two original sets."],["BitSetXor","`BitSetXor` takes two [`BitSetLike`] items, and merges the masks returning a new virtual set, which represents an merged of the two original sets."],["DrainBitIter","A draining `Iterator` over a [`DrainableBitSet`] structure."]],"trait":[["BitSetLike","A generic interface for [`BitSetLike`]-like types."],["DrainableBitSet","A extension to the [`BitSetLike`] trait which allows draining it."]]});