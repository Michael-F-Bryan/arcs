var searchIndex={};
searchIndex["aabb_quadtree"] = {"doc":"A simple spacial partitioning data structure that allows…","i":[[3,"ItemId","aabb_quadtree","An ID unique to a single QuadTree. This is the object that…",null,null],[3,"QuadTree","","The main QuadTree structure. Mainly supports inserting,…",null,null],[6,"QueryResult","","Used to determine if a query should keep going or not",null,null],[8,"Spatial","","An object that has a bounding box.",null,null],[10,"aabb","","Returns the boudning box for the object.",0,[[["self"]],[["f32"],["typedrect",["f32"]]]]],[11,"new","","Constructs a new QuadTree with customizable options.",1,[[["f32"],["typedrect",["f32"]],["usize"],["bool"]],["quadtree"]]],[11,"default","","Constructs a new QuadTree with customizable options.",1,[[["f32"],["usize"],["typedrect",["f32"]]],["quadtree"]]],[11,"insert_with_box","","Inserts an element with the provided bounding box.",1,[[["f32"],["self"],["t"],["typedrect",["f32"]]],[["option",["itemid"]],["itemid"]]]],[11,"first","","Returns an ItemId for the first element that was inserted…",1,[[["self"]],[["option",["itemid"]],["itemid"]]]],[11,"insert","","Inserts an element into the tree.",1,[[["self"],["t"]],[["option",["itemid"]],["itemid"]]]],[11,"get","","Retrieves an element by looking it up from the ItemId.",1,[[["self"],["itemid"]],[["option"],["t"]]]],[11,"query","","Returns an iterator of (element, bounding-box, id) for…",1,[[["f32"],["self"],["typedrect",["f32"]]],["smallvec"]]],[11,"custom_query","","Executes 'on_find' for every element found in the…",1,[[["f32"],["f"],["self"],["typedrect",["f32"]]],["queryresult"]]],[11,"remove","","Attempts to remove the item with id `item_id` from the…",1,[[["self"],["itemid"]],["option"]]],[11,"iter","","Returns an iterator over all the items in the tree.",1,[[["self"]],[["iter",["itemid"]],["itemid"]]]],[11,"inspect","","Calls `f` repeatedly for every node in the tree with these…",1,[[["fnmut"],["self"]]]],[11,"len","","Returns the number of elements in the tree",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the tree is empty.",1,[[["self"]],["bool"]]],[11,"bounding_box","","Returns the enclosing bounding-box for the entire tree.",1,[[["self"]],[["f32"],["typedrect",["f32"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["itemid"]]],[11,"clone","","",1,[[["self"]],["quadtree"]]],[11,"cmp","","",2,[[["self"],["itemid"]],["ordering"]]],[11,"eq","","",2,[[["self"],["itemid"]],["bool"]]],[11,"ne","","",2,[[["self"],["itemid"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["itemid"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",2,[[["self"],["itemid"]],["bool"]]],[11,"le","","",2,[[["self"],["itemid"]],["bool"]]],[11,"gt","","",2,[[["self"],["itemid"]],["bool"]]],[11,"ge","","",2,[[["self"],["itemid"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",2,[[["self"],["__h"]]]]],"p":[[8,"Spatial"],[3,"QuadTree"],[3,"ItemId"]]};
searchIndex["ahash"] = {"doc":"aHash","i":[[3,"AHasher","ahash","A `Hasher` for hashing an arbitrary stream of bytes.",null,null],[3,"ABuildHasher","","Provides a [Hasher] factory. This is typically used (e.g.…",null,null],[11,"new_with_keys","","Creates a new hasher keyed to the provided key.",0,[[["u64"]],["ahasher"]]],[11,"new","","",1,[[],["abuildhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"write_u8","","",0,[[["self"],["u8"]]]],[11,"write_u16","","",0,[[["u16"],["self"]]]],[11,"write_u32","","",0,[[["self"],["u32"]]]],[11,"write_u64","","",0,[[["self"],["u64"]]]],[11,"write_u128","","",0,[[["self"],["u128"]]]],[11,"write_usize","","",0,[[["self"],["usize"]]]],[11,"write","","",0,[[["self"]]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"build_hasher","","Constructs a new [AHasher] with keys based on compile time…",1,[[["self"]],["ahasher"]]],[11,"clone","","",0,[[["self"]],["ahasher"]]],[11,"clone","","",1,[[["self"]],["abuildhasher"]]],[11,"default","","Constructs a new [AHasher] with compile time generated…",0,[[],["ahasher"]]],[11,"default","","",1,[[],["self"]]]],"p":[[3,"AHasher"],[3,"ABuildHasher"]]};
searchIndex["anyhow"] = {"doc":"This library provides [`anyhow::Error`][Error], a trait…","i":[[3,"Error","anyhow","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[11,"new","","",0,[[["stderror"]],["self"]]],[11,"new","","Create a new error object from any error type.",1,[[["e"]],["self"]]],[11,"msg","","Create a new error object from a printable error message.",1,[[["m"]],["self"]]],[11,"context","","Wrap the error value with additional context.",1,[[["c"]],["self"]]],[11,"backtrace","","Get the backtrace for this Error.",1,[[["self"]],["backtrace"]]],[11,"chain","","An iterator of the chain of source errors contained by…",1,[[["self"]],["chain"]]],[11,"root_cause","","The lowest level cause of this error — this error's…",1,[[["self"]],["stderror"]]],[11,"is","","Returns true if `E` is the type held by this error object.",1,[[["self"]],["bool"]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result"]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[["self"]],[["e"],["option"]]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[["self"]],[["option"],["e"]]]],[6,"Result","","`Result<T, Error>`",null,null],[8,"Context","","Provides the `context` method for `Result`.",null,null],[10,"context","","Wrap the error value with additional context.",2,[[["c"]],[["result",["error"]],["error"]]]],[10,"with_context","","Wrap the error value with additional context that is…",2,[[["f"]],[["result",["error"]],["error"]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not satisfied.",null,null],[14,"anyhow","","Construct an ad-hoc error from a string.",null,null],[11,"from","","",1,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"as_ref","","",1,[[["self"]],["stderror"]]],[11,"as_ref","","",1,[[["self"]],["stderror"]]],[11,"from","","",1,[[["e"]],["self"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"clone","","",0,[[["self"]],["chain"]]],[11,"default","","",0,[[],["self"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Chain"],[3,"Error"],[8,"Context"]]};
searchIndex["approx"] = {"doc":"A crate that provides facilities for testing the…","i":[[3,"AbsDiff","approx","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",0,null],[3,"Relative","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",1,null],[12,"max_relative","","The relative tolerance for testing values that are…",1,null],[3,"Ulps","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",2,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,null],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",3,null],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,[[]]],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,[[["rhs"],["self"]],["bool"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,[[]]],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",0,[[],["absdiff"]]],[11,"eq","","Peform the equality comparison",0,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",0,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,[[],["relative"]]],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,[[],["relative"]]],[11,"eq","","Peform the equality comparison",1,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",1,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,[[],["ulps"]]],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[["u32"]],["ulps"]]],[11,"eq","","Peform the equality comparison",2,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",2,[[["b"],["a"]],["bool"]]],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",null,null],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",null,null],[14,"relative_eq","","Approximate equality using both the absolute difference…",null,null],[14,"relative_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"ulps_eq","","Approximate equality using both the absolute difference…",null,null],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",null,null],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",null,null],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",null,null],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",null,null],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",null,null],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["absdiff"]]],[11,"default","","",1,[[],["relative"]]],[11,"default","","",2,[[],["ulps"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"]]};
searchIndex["arcs"] = {"doc":"A Rust CAD System - A library for building 2D Computer…","i":[[4,"CanvasSpace","arcs","The coordinate system used for graphical objects rendered…",null,null],[4,"DrawingSpace","","The cartesian coordinate system used by everything in a…",null,null],[4,"Orientation","","How something may be oriented.",null,null],[13,"Clockwise","","",0,null],[13,"Anticlockwise","","",0,null],[13,"Collinear","","",0,null],[5,"centre_of_three_points","","Find the centre of an arc which passes through 3 [`Point`]s.",null,[[["point2d",["f64"]],["f64"]],[["option",["point2d"]],["point2d",["f64"]]]]],[0,"algorithms","","Common algorithms.",null,null],[3,"ApproximatedArc","arcs::algorithms","An iterator over the points in an arc approximation.",null,null],[4,"Closest","","An enum containing the different possible solutions for…",null,null],[13,"Infinite","","There are infinitely solutions.",1,null],[13,"One","","There is a single closest [`Point`].",1,null],[13,"Many","","There are multiple closest [`Point`]s.",1,null],[5,"simplify","","Decimate a curve composed of line segments to a \"simpler\"…",null,[[["length",["f64"]],["f64"]],[["point2d",["f64"]],["vec",["point2d"]]]]],[11,"is_infinite","","Are there infinitely many closest points?",1,[[["self"]],["bool"]]],[11,"points","","Get a slice of all the closest [`Point`]s.",1,[[["self"]]]],[8,"AffineTransformable","","Something which can be transformed using an arbitrary…",null,null],[10,"transform","","Apply a transform matrix in-place.",2,[[["self"],["f64"],["transform2d",["f64"]]]]],[11,"transformed","","A convenience method for getting a transformed copy of…",2,[[["f64"],["self"],["transform2d",["f64"]]],["self"]]],[8,"Approximate","","Approximate a shape with a bunch of [`Point`]s.",null,null],[16,"Iter","","An iterator over the approximated vertices.",3,null],[10,"approximate","","Approximate the shape, ensuring the resulting path is…",3,[[["f64"],["self"]]]],[8,"Bounded","","Calculate an axis-aligned bounding box around the item.",null,null],[10,"bounding_box","","Calculate the approximate location this object is located…",4,[[["self"]],["boundingbox"]]],[8,"ClosestPoint","","Find the location on an object which is closest to a…",null,null],[10,"closest_point","","Calculate the closest point to `target`.",5,[[["self"],["point"]],["closest"]]],[8,"Length","","Something which has a finite length.",null,null],[10,"length","","Calculate the length.",6,[[["self"]],["f64"]]],[8,"Scale","","Something who's dimensions can be scaled uniformly.",null,null],[10,"scale","","Scale the object in-place.",7,[[["self"],["f64"]]]],[11,"scaled","","Convenience method for getting a scaled copy of this object.",7,[[["f64"],["self"]],["self"]]],[8,"ScaleNonUniform","","Something who's dimensions can be scaled independently…",null,null],[10,"scale_non_uniform","","Scale the object in-place.",8,[[["self"],["f64"]]]],[11,"scaled_non_uniform","","Convenience method for getting a scaled copy of this object.",8,[[["f64"],["self"]],["self"]]],[8,"Translate","","Something which can be moved around \"rigidly\" in Drawing…",null,null],[10,"translate","","Translate this object in-place.",9,[[["vector"],["self"]]]],[11,"translated","","A convenience method for getting a translated copy of this…",9,[[["vector"],["self"]],["self"]]],[0,"components","arcs","Common components used by the `arcs` CAD library.",null,null],[3,"BoundingBox","arcs::components","An axis-aligned bounding box.",null,null],[3,"DrawingObject","","Something which can be drawn on the screen.",null,null],[12,"geometry","","",10,null],[12,"layer","","The [`Layer`] this [`DrawingObject`] is attached to.",10,null],[3,"Layer","","A logical grouping of data, assembled as though each…",null,null],[12,"z_level","","The z-coordinate. Lower z-levels will be drawn above…",11,null],[12,"visible","","Should entities on this layer be displayed?",11,null],[3,"Name","","A name that can be looked up later in the [`NameTable`].",null,null],[3,"NameTable","","A global [`Resource`] for looking up an [`Entity`] using…",null,null],[3,"Selected","","An empty [`Component`] used to mark an [`Entity`] as…",null,null],[3,"Space","","A global [`Resource`] for looking up which [`Entity`]s…",null,null],[3,"SpatialEntity","","A intermediate struct that maps an [`Entity`] to its…",null,null],[12,"bounds","","",12,null],[12,"entity","","",12,null],[3,"LineStyle","","",null,null],[12,"stroke","","",13,null],[12,"width","","",13,null],[3,"PointStyle","","",null,null],[12,"colour","","",14,null],[12,"radius","","",14,null],[3,"WindowStyle","","",null,null],[12,"background_colour","","",15,null],[3,"Viewport","","",null,null],[12,"centre","","The location (in drawing units) this viewport is centred on.",16,null],[12,"pixels_per_drawing_unit","","The number of pixels each drawing unit should take up on…",16,null],[4,"Dimension","","A dimension on the canvas.",null,null],[13,"Pixels","","The dimension should always be the same size in pixels,…",17,null],[13,"DrawingUnits","","A \"real\" dimension defined in Drawing Space, which should…",17,null],[4,"Geometry","","The geometry of a [`DrawingObject`].",null,null],[13,"Line","","",18,null],[13,"Arc","","",18,null],[13,"Point","","",18,null],[5,"register","","Register all [`specs::Component`]s.",null,[[["world"]]]],[11,"new","","Create a new [`BoundingBox`] around two points.",19,[[["point"]],["self"]]],[11,"new_unchecked","","Create a new [`BoundingBox`] without ensuring the…",19,[[["point"]],["self"]]],[11,"from_centre_and_size","","",19,[[["size2d",["f64","drawingspace"]],["drawingspace"],["f64"],["point"]],["self"]]],[11,"from_centre_and_dimensions","","",19,[[["length"],["point"]],["self"]]],[11,"width","","",19,[[],["length"]]],[11,"height","","",19,[[],["length"]]],[11,"area","","",19,[[],["f64"]]],[11,"diagonal","","",19,[[],["vector"]]],[11,"merge","","Merge two [`BoundingBox`]es.",19,[[["boundingbox"]],["boundingbox"]]],[11,"around","","",19,[[["i"]],[["option",["boundingbox"]],["boundingbox"]]]],[11,"bottom_left","","",19,[[],["point"]]],[11,"bottom_right","","",19,[[],["point"]]],[11,"top_right","","",19,[[],["point"]]],[11,"top_left","","",19,[[],["point"]]],[11,"min_x","","",19,[[],["f64"]]],[11,"min_y","","",19,[[],["f64"]]],[11,"max_x","","",19,[[],["f64"]]],[11,"max_y","","",19,[[],["f64"]]],[11,"fully_contains","","",19,[[["boundingbox"]],["bool"]]],[11,"intersects_with","","",19,[[["boundingbox"],["self"]],["bool"]]],[11,"in_pixels","","",17,[[["drawingspace"],["canvasspace"],["scale",["f64","drawingspace","canvasspace"]],["f64"]],["f64"]]],[11,"create","","",11,[[["layer"],["entitybuilder"],["name"]],["entity"]]],[11,"new","","",20,[[["into",["string"]],["string"]],["self"]]],[11,"as_str","","",20,[[["self"]],["str"]]],[11,"get","","",21,[[["str"],["self"]],[["entity"],["option",["entity"]]]]],[11,"iter","","",21,[[["self"]]]],[11,"clear","","",21,[[["self"]]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"is_empty","","",21,[[["self"]],["bool"]]],[11,"remove_by_id","","",21,[[["self"],["index"]]]],[11,"new","","",12,[[["boundingbox"],["entity"]],["spatialentity"]]],[18,"WORLD_RADIUS","","",22,null],[11,"modify","","Modifies the spatial position of the given…",22,[[["self"],["spatialentity"]]]],[11,"remove","","Removes the given [`Entity`] from this [`Space`]",22,[[["self"],["entity"]]]],[11,"remove_by_id","","Removes an [`Entity`] from this [`Space`] given its…",22,[[["self"],["index"]]]],[11,"iter","","Returns an iterator over all [`SpatialEntity`] in this…",22,[[["self"]]]],[11,"len","","",22,[[["self"]],["usize"]]],[11,"is_empty","","",22,[[["self"]],["bool"]]],[11,"query_point","","Performs a spatial query in an radius around a given…",22,[[["point"],["f64"],["self"]]]],[11,"query_region","","Performs a spatial query for a given [`BoundingBox`]…",22,[[["boundingbox"],["self"]]]],[11,"clear","","Clears the [`Space`] of all [`SpatialEntity`]",22,[[["self"]]]],[11,"resize","","Resizes the inner quadtree to the given bigger size",22,[[["self"]]]],[0,"primitives","arcs","Basic geometric types which are generic over their…",null,null],[3,"Arc","arcs::primitives","A circle segment.",null,null],[3,"Line","","A line connecting [`Line::start`] to [`Line::end`].",null,null],[12,"start","","",23,null],[12,"end","","",23,null],[11,"from_centre_radius","","",24,[[["point2d",["f64"]],["f64"],["angle"]],["self"]]],[11,"from_three_points","","",24,[[["point2d",["f64"]],["f64"]],["option"]]],[11,"centre","","",24,[[],[["point2d",["f64"]],["f64"]]]],[11,"radius","","",24,[[],["f64"]]],[11,"start_angle","","",24,[[],["angle"]]],[11,"sweep_angle","","",24,[[],["angle"]]],[11,"end_angle","","",24,[[],["angle"]]],[11,"is_anticlockwise","","",24,[[],["bool"]]],[11,"is_clockwise","","",24,[[],["bool"]]],[11,"start","","",24,[[],[["point2d",["f64"]],["f64"]]]],[11,"end","","",24,[[],[["point2d",["f64"]],["f64"]]]],[11,"point_at","","",24,[[["angle"]],[["point2d",["f64"]],["f64"]]]],[11,"contains_angle","","",24,[[["angle"]],["bool"]]],[11,"is_minor_arc","","",24,[[["self"]],["bool"]]],[11,"is_major_arc","","",24,[[["self"]],["bool"]]],[11,"new","","",23,[[["point2d",["f64"]],["f64"]],["self"]]],[11,"displacement","","",23,[[["self"]],[["f64"],["vector2d",["f64"]]]]],[11,"direction","","",23,[[["self"]],[["f64"],["vector2d",["f64"]]]]],[11,"length","","",23,[[],["f64"]]],[11,"perpendicular_distance_to","","",23,[[["point2d",["f64"]],["f64"]],[["f64"],["length",["f64"]]]]],[0,"systems","arcs","Background tasks and useful [`specs::System`]s.",null,null],[3,"SyncBounds","arcs::systems","Lets us keep track of a [`DrawingObject`]'s rough location…",null,null],[3,"NameTableBookkeeping","","A [`System`] which makes sure the global [`NameTable`] is…",null,null],[3,"SpatialRelation","","A [`System`] which keeps track of the spatial relation of…",null,null],[5,"register_background_tasks","","Register any necessary background tasks with a…",null,[[["world"],["dispatcherbuilder"]],["dispatcherbuilder"]]],[18,"NAME","","",25,null],[11,"new","","",25,[[["world"]],["syncbounds"]]],[18,"NAME","","",26,null],[11,"new","","",26,[[["world"]],["self"]]],[18,"NAME","","",27,null],[11,"new","","",27,[[["world"]],["self"]]],[11,"of","arcs","Find the orientation of 3 [`Point`]s.",0,[[["point2d",["f64"]],["f64"]],["orientation"]]],[0,"window","","Rendering and window management for the `arcs` CAD library.",null,null],[3,"Window","arcs::window","A wrapper around the \"window\" object.",null,null],[12,"0","","",28,null],[5,"to_canvas_coordinates","","",null,[[["drawingspace"],["size2d",["f64","canvasspace"]],["canvasspace"],["f64"],["point2d",["f64","drawingspace"]],["viewport"]],[["point2d",["f64","canvasspace"]],["f64"],["canvasspace"]]]],[5,"to_drawing_coordinates","","",null,[[["point2d",["f64","canvasspace"]],["size2d",["f64","canvasspace"]],["canvasspace"],["f64"],["viewport"]],[["f64"],["point2d",["f64","drawingspace"]],["drawingspace"]]]],[5,"transform_to_canvas_space","","",null,[[["size2d",["f64","canvasspace"]],["canvasspace"],["f64"],["viewport"]],[["drawingspace"],["transform2d",["f64","drawingspace","canvasspace"]],["canvasspace"],["f64"]]]],[5,"transform_to_drawing_space","","",null,[[["size2d",["f64","canvasspace"]],["canvasspace"],["f64"],["viewport"]],[["drawingspace"],["canvasspace"],["transform2d",["f64","canvasspace","drawingspace"]],["f64"]]]],[11,"create","","Creates a new [`Window`] entity populated with all default…",28,[[["world"]],["self"]]],[11,"render_system","","Get a [`System`] which will render using a particular…",28,[[["size2d",["f64","canvasspace"]],["canvasspace"],["f64"],["self"],["r"]]]],[11,"viewport","","Get a reference to the [`Window`]'s [`Viewport`] component.",28,[[["self"],["readstorage"]],["viewport"]]],[11,"viewport_mut","","Get a mutable reference to the [`Window`]'s [`Viewport`]…",28,[[["writestorage"],["self"]],["viewport"]]],[11,"default_point_style","","Get a reference to the [`Window`]'s [`PointStyle`]…",28,[[["readstorage"],["self"]],["pointstyle"]]],[11,"default_point_style_mut","","Get a mutable reference to the [`Window`]'s [`PointStyle`]…",28,[[["self"],["writestorage"]],["pointstyle"]]],[11,"default_line_style","","Get a reference to the [`Window`]'s [`LineStyle`] component.",28,[[["self"],["readstorage"]],["linestyle"]]],[11,"default_line_style_mut","","Get a mutable reference to the [`Window`]'s [`LineStyle`]…",28,[[["self"],["writestorage"]],["linestyle"]]],[11,"style","","Get a reference to the [`Window`]'s [`WindowStyle`]…",28,[[["self"],["readstorage"]],["windowstyle"]]],[11,"style_mut","","Get a mutable reference to the [`Window`]'s…",28,[[["writestorage"],["self"]],["windowstyle"]]],[6,"Arc","arcs","An [`primitives::Arc`] in [`DrawingSpace`].",null,null],[6,"Line","","A [`primitives::Line`] in [`DrawingSpace`].",null,null],[6,"Angle","","A strongly-typed angle, useful for dealing with the pesky…",null,null],[6,"Length","","A length in [`DrawingSpace`].",null,null],[6,"Point","","A location in [`DrawingSpace`].",null,null],[6,"Transform","","A transform matrix which for translating something within…",null,null],[6,"Vector","","A 2D vector for working in [`DrawingSpace`].",null,null],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"round_from","","",29,[[["t"]],["t"]]],[11,"round_into","","",29,[[],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"round_from","","",30,[[["t"]],["t"]]],[11,"round_into","","",30,[[],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"round_from","","",0,[[["t"]],["t"]]],[11,"round_into","","",0,[[],["u"]]],[11,"from","arcs::algorithms","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"par_bridge","","",31,[[],["iterbridge"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"round_from","","",31,[[["t"]],["t"]]],[11,"round_into","","",31,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"round_from","","",1,[[["t"]],["t"]]],[11,"round_into","","",1,[[],["u"]]],[11,"from","arcs::components","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"round_from","","",19,[[["t"]],["t"]]],[11,"round_into","","",19,[[],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"round_from","","",10,[[["t"]],["t"]]],[11,"round_into","","",10,[[],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"try_default","","",11,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"round_from","","",11,[[["t"]],["t"]]],[11,"round_into","","",11,[[],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"round_from","","",20,[[["t"]],["t"]]],[11,"round_into","","",20,[[],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"try_default","","",21,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"round_from","","",21,[[["t"]],["t"]]],[11,"round_into","","",21,[[],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"try_default","","",32,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"round_from","","",32,[[["t"]],["t"]]],[11,"round_into","","",32,[[],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"try_default","","",22,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"round_from","","",22,[[["t"]],["t"]]],[11,"round_into","","",22,[[],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"round_from","","",12,[[["t"]],["t"]]],[11,"round_into","","",12,[[],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"try_default","","",13,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"round_from","","",13,[[["t"]],["t"]]],[11,"round_into","","",13,[[],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"try_default","","",14,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"round_from","","",14,[[["t"]],["t"]]],[11,"round_into","","",14,[[],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"try_default","","",15,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"round_from","","",15,[[["t"]],["t"]]],[11,"round_into","","",15,[[],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"round_from","","",16,[[["t"]],["t"]]],[11,"round_into","","",16,[[],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"try_default","","",17,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"round_from","","",17,[[["t"]],["t"]]],[11,"round_into","","",17,[[],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"round_from","","",18,[[["t"]],["t"]]],[11,"round_into","","",18,[[],["u"]]],[11,"from","arcs::primitives","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"round_from","","",24,[[["t"]],["t"]]],[11,"round_into","","",24,[[],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"try_default","","",23,[[],[["result",["string"]],["string"]]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"round_from","","",23,[[["t"]],["t"]]],[11,"round_into","","",23,[[],["u"]]],[11,"from","arcs::systems","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"run_now","","",25,[[["self"],["world"]]]],[11,"setup","","",25,[[["self"],["world"]]]],[11,"dispose","","",25,[[["box"],["world"]]]],[11,"setup","","",25,[[["self"],["world"]]]],[11,"run","","",25,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",25,[[["self"],["vec"]]]],[11,"writes","","",25,[[["self"],["vec"]]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"round_from","","",25,[[["t"]],["t"]]],[11,"round_into","","",25,[[],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"run_now","","",26,[[["self"],["world"]]]],[11,"setup","","",26,[[["self"],["world"]]]],[11,"dispose","","",26,[[["box"],["world"]]]],[11,"setup","","",26,[[["self"],["world"]]]],[11,"run","","",26,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",26,[[["self"],["vec"]]]],[11,"writes","","",26,[[["self"],["vec"]]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"round_from","","",26,[[["t"]],["t"]]],[11,"round_into","","",26,[[],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"run_now","","",27,[[["self"],["world"]]]],[11,"setup","","",27,[[["self"],["world"]]]],[11,"dispose","","",27,[[["box"],["world"]]]],[11,"setup","","",27,[[["self"],["world"]]]],[11,"run","","",27,[[["self"],["world"],["threadpool"]]]],[11,"reads","","",27,[[["self"],["vec"]]]],[11,"writes","","",27,[[["self"],["vec"]]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"round_from","","",27,[[["t"]],["t"]]],[11,"round_into","","",27,[[],["u"]]],[11,"from","arcs::window","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"round_from","","",28,[[["t"]],["t"]]],[11,"round_into","","",28,[[],["u"]]],[11,"transform","arcs","",33,[[["drawingspace"],["self"],["f64"],["transform2d",["f64","drawingspace","drawingspace"]]]]],[11,"transform","","",34,[[["drawingspace"],["self"],["f64"],["transform2d",["f64","drawingspace","drawingspace"]]]]],[11,"approximate","","",33,[[["f64"],["self"]]]],[11,"approximate","","",34,[[["f64"],["self"]]]],[11,"approximate","","",35,[[["f64"],["self"]]]],[11,"bounding_box","arcs::components","",19,[[["self"]],["boundingbox"]]],[11,"bounding_box","arcs","",33,[[["self"]],["boundingbox"]]],[11,"bounding_box","","",34,[[["self"]],["boundingbox"]]],[11,"bounding_box","arcs::components","",18,[[["self"]],["boundingbox"]]],[11,"bounding_box","arcs","",35,[[["self"]],["boundingbox"]]],[11,"closest_point","","",33,[[["self"],["point"]],["closest"]]],[11,"closest_point","","",34,[[["self"],["point"]],["closest"]]],[11,"closest_point","","",35,[[["self"],["point"]],["closest"]]],[11,"closest_point","arcs::components","",18,[[["self"],["point"]],["closest"]]],[11,"closest_point","","",10,[[["self"],["point"]],["closest"]]],[11,"length","arcs","Calculates the length of the line.",34,[[["self"]],["f64"]]],[11,"length","","Calculates the [`Vector`]'s magnitude.",36,[[["self"]],["f64"]]],[11,"length","","Calculates the length of an [`Arc`].",35,[[["self"]],["f64"]]],[11,"scale","","",35,[[["self"],["f64"]]]],[11,"scale","arcs::components","Zoom the viewport, where a positive `scale_factor` will…",16,[[["self"],["f64"]]]],[11,"scale_non_uniform","","",19,[[["self"],["f64"]]]],[11,"translate","arcs","",35,[[["vector"],["self"]]]],[11,"translate","arcs::components","",19,[[["vector"],["self"]]]],[11,"translate","","",16,[[["vector"],["self"]]]],[11,"translate","","",18,[[["vector"],["self"]]]],[11,"translate","","",10,[[["vector"],["self"]]]],[11,"as_ref","","",20,[[["self"]],["str"]]],[11,"from","","",20,[[["str"]],["self"]]],[11,"from","","",20,[[["string"]],["self"]]],[11,"next","arcs::algorithms","",31,[[["self"]],["option"]]],[11,"clone","","",31,[[["self"]],["approximatedarc"]]],[11,"clone","","",1,[[["self"]],["closest"]]],[11,"clone","arcs::components","",19,[[["self"]],["boundingbox"]]],[11,"clone","","",17,[[["self"]],["dimension"]]],[11,"clone","","",10,[[["self"]],["drawingobject"]]],[11,"clone","","",18,[[["self"]],["geometry"]]],[11,"clone","","",11,[[["self"]],["layer"]]],[11,"clone","","",20,[[["self"]],["name"]]],[11,"clone","","",21,[[["self"]],["nametable"]]],[11,"clone","","",32,[[["self"]],["selected"]]],[11,"clone","","",12,[[["self"]],["spatialentity"]]],[11,"clone","","",14,[[["self"]],["pointstyle"]]],[11,"clone","","",13,[[["self"]],["linestyle"]]],[11,"clone","","",15,[[["self"]],["windowstyle"]]],[11,"clone","","",16,[[["self"]],["viewport"]]],[11,"clone","arcs::primitives","",24,[[["self"]],["self"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"clone","arcs","",30,[[["self"]],["drawingspace"]]],[11,"clone","","",29,[[["self"]],["canvasspace"]]],[11,"clone","","",0,[[["self"]],["orientation"]]],[11,"clone","arcs::window","",28,[[["self"]],["window"]]],[11,"default","arcs::components","",17,[[],["dimension"]]],[11,"default","","",11,[[],["layer"]]],[11,"default","","",21,[[],["nametable"]]],[11,"default","","",32,[[],["selected"]]],[11,"default","","",22,[[],["self"]]],[11,"default","","",14,[[],["pointstyle"]]],[11,"default","","",13,[[],["linestyle"]]],[11,"default","","",15,[[],["windowstyle"]]],[11,"default","arcs::primitives","",23,[[],["line"]]],[11,"cmp","arcs","",30,[[["drawingspace"],["self"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["canvasspace"]],["ordering"]]],[11,"eq","arcs::algorithms","",1,[[["closest"],["self"]],["bool"]]],[11,"ne","","",1,[[["closest"],["self"]],["bool"]]],[11,"eq","arcs::components","",19,[[["boundingbox"],["self"]],["bool"]]],[11,"ne","","",19,[[["boundingbox"],["self"]],["bool"]]],[11,"eq","","",17,[[["dimension"],["self"]],["bool"]]],[11,"ne","","",17,[[["dimension"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["drawingobject"]],["bool"]]],[11,"ne","","",10,[[["self"],["drawingobject"]],["bool"]]],[11,"eq","","",18,[[["geometry"],["self"]],["bool"]]],[11,"ne","","",18,[[["geometry"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["layer"]],["bool"]]],[11,"ne","","",11,[[["self"],["layer"]],["bool"]]],[11,"eq","","",20,[[["name"],["self"]],["bool"]]],[11,"ne","","",20,[[["name"],["self"]],["bool"]]],[11,"eq","","",21,[[["nametable"],["self"]],["bool"]]],[11,"ne","","",21,[[["nametable"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["selected"]],["bool"]]],[11,"eq","","",16,[[["self"],["viewport"]],["bool"]]],[11,"ne","","",16,[[["self"],["viewport"]],["bool"]]],[11,"eq","arcs::primitives","",24,[[["self"],["arc"]],["bool"]]],[11,"ne","","",24,[[["self"],["arc"]],["bool"]]],[11,"eq","","",23,[[["line"],["self"]],["bool"]]],[11,"ne","","",23,[[["line"],["self"]],["bool"]]],[11,"eq","arcs","",30,[[["drawingspace"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["canvasspace"]],["bool"]]],[11,"eq","","",0,[[["self"],["orientation"]],["bool"]]],[11,"eq","arcs::window","",28,[[["window"],["self"]],["bool"]]],[11,"ne","","",28,[[["window"],["self"]],["bool"]]],[11,"partial_cmp","arcs","",30,[[["drawingspace"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",29,[[["self"],["canvasspace"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","arcs::algorithms","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","arcs::components","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","arcs::primitives","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","arcs::systems","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","arcs","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","arcs::window","",28,[[["formatter"],["self"]],["result"]]],[11,"hash","arcs::components","",11,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"from_iter","arcs::algorithms","",1,[[["intoiterator"]],["closest"]]],[11,"borrow","arcs::components","",20,[[["self"]],["string"]]],[11,"borrow","","",20,[[["self"]],["str"]]],[11,"aabb","","",19,[[["self"]],[["typedrect",["f32","f64"]],["f32"],["f64"]]]],[11,"aabb","","",12,[[["self"]],[["typedrect",["f32","f64"]],["f32"],["f64"]]]],[11,"run","arcs::systems","",25,[[["self"]]]],[11,"run","","",26,[[["self"]]]],[11,"setup","","",26,[[["self"],["world"]]]],[11,"run","","",27,[[["self"]]]],[11,"setup","","",27,[[["self"],["world"]]]],[11,"transformed","arcs::algorithms","A convenience method for getting a transformed copy of…",2,[[["f64"],["self"],["transform2d",["f64"]]],["self"]]],[11,"scaled","","Convenience method for getting a scaled copy of this object.",7,[[["f64"],["self"]],["self"]]],[11,"scaled_non_uniform","","Convenience method for getting a scaled copy of this object.",8,[[["f64"],["self"]],["self"]]],[11,"translated","","A convenience method for getting a translated copy of this…",9,[[["vector"],["self"]],["self"]]]],"p":[[4,"Orientation"],[4,"Closest"],[8,"AffineTransformable"],[8,"Approximate"],[8,"Bounded"],[8,"ClosestPoint"],[8,"Length"],[8,"Scale"],[8,"ScaleNonUniform"],[8,"Translate"],[3,"DrawingObject"],[3,"Layer"],[3,"SpatialEntity"],[3,"LineStyle"],[3,"PointStyle"],[3,"WindowStyle"],[3,"Viewport"],[4,"Dimension"],[4,"Geometry"],[3,"BoundingBox"],[3,"Name"],[3,"NameTable"],[3,"Space"],[3,"Line"],[3,"Arc"],[3,"SyncBounds"],[3,"NameTableBookkeeping"],[3,"SpatialRelation"],[3,"Window"],[4,"CanvasSpace"],[4,"DrawingSpace"],[3,"ApproximatedArc"],[3,"Selected"],[6,"Point"],[6,"Line"],[6,"Arc"],[6,"Vector"]]};
searchIndex["arrayvec"] = {"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],[["result",["capacityerror"]],["capacityerror",["str"]]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[["result",["utf8error"]],["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],[["result",["capacityerror"]],["capacityerror",["char"]]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["str"],["self"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],[["result",["capacityerror"]],["capacityerror",["str"]]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],[["option",["char"]],["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array’s element type",2,null],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range…",null,null],[11,"start","","Start index (inclusive)",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,[[["self"]]]],[11,"try_push","","Push `element` to the end of the vector.",4,[[["self"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",4,[[["self"]]]],[11,"insert","","Insert `element` at position `index`.",4,[[["self"],["usize"]]]],[11,"try_insert","","Insert `element` at position `index`.",4,[[["self"],["usize"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",4,[[["self"],["usize"]]]],[11,"swap_pop","","Remove the element at `index` and swap the last element…",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following…",4,[[["self"],["usize"]]]],[11,"pop_at","","Remove the element at `index` and shift down the following…",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified…",4,[[["self"],["rangeargument"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",4,[[],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed…",4,[[]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,[[["self"]]]],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",4,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[],["t"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"as_mut","","",4,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",4,[[["self"]]]],[11,"from","","",4,[[["a"]],["self"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"extend","","",4,[[["self"],["intoiterator"]]]],[11,"into_iter","","",4,[[],["intoiter"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",5,[[["self"]],["intoiter"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",4,[[["self"]],["bool"]]],[11,"eq","","",4,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"]],["bool"]]],[11,"le","","",0,[[["self"]],["bool"]]],[11,"gt","","",0,[[["self"]],["bool"]]],[11,"ge","","",0,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["str"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["str"],["self"]],["bool"]]],[11,"le","","",0,[[["str"],["self"]],["bool"]]],[11,"gt","","",0,[[["str"],["self"]],["bool"]]],[11,"ge","","",0,[[["str"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",4,[[["self"]],["bool"]]],[11,"le","","",4,[[["self"]],["bool"]]],[11,"ge","","",4,[[["self"]],["bool"]]],[11,"gt","","",4,[[["self"]],["bool"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",4,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",4,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"from_iter","","",4,[[["intoiterator"]],["self"]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["str"],["self"]],["result"]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",4,[[["self"]]]],[11,"borrow_mut","","",4,[[["self"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"write","","",4,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",4,[[["self"]],["result"]]],[11,"start","","Start index (inclusive)",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],[["option",["usize"]],["usize"]]]]],"p":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["atom"] = {"doc":"","i":[[3,"Atom","atom","An Atom wraps an AtomicPtr, it allows for safe mutation of…",null,null],[3,"AtomSetOnce","","This is a restricted version of the Atom. It allows for…",null,null],[8,"IntoRawPtr","","Convert from into a raw pointer",null,null],[10,"into_raw","","",0,[[]]],[8,"FromRawPtr","","Convert from a raw ptr into a pointer",null,null],[10,"from_raw","","",1,[[],["self"]]],[8,"GetNextMut","","This is a utility Trait that fetches the next ptr from an…",null,null],[16,"NextPtr","","",2,null],[10,"get_next","","",2,[[["self"]]]],[11,"empty","","Create a empty Atom",3,[[],["atom"]]],[11,"new","","Create a new Atomic from Pointer P",3,[[["p"]],["atom"]]],[11,"swap","","Swap a new value into the Atom, This will try multiple…",3,[[["self"],["p"]],["option"]]],[11,"take","","Take the value of the Atom replacing it with null pointer…",3,[[["self"]],["option"]]],[11,"set_if_none","","This will do a `CAS` setting the value only if it is NULL…",3,[[["self"],["p"]],["option"]]],[11,"replace_and_set_next","","Take the current content, write it into P then do a CAS to…",3,[[["self"],["p"]],["bool"]]],[11,"is_none","","Check to see if an atom is None",3,[[["self"]],["bool"]]],[11,"empty","","Create an empty `AtomSetOnce`",4,[[],["atomsetonce"]]],[11,"new","","Create a new `AtomSetOnce` from Pointer P",4,[[["p"]],["atomsetonce"]]],[11,"set_if_none","","This will do a `CAS` setting the value only if it is NULL…",4,[[["self"],["p"]],["option"]]],[11,"into_atom","","Convert an `AtomSetOnce` into an `Atom`",4,[[],["atom"]]],[11,"atom","","Allow access to the atom if exclusive access is granted",4,[[["self"]],["atom"]]],[11,"is_none","","Check to see if an atom is None",4,[[["self"]],["bool"]]],[11,"get","","If the Atom is set, get the value",4,[[["self"]],[["t"],["option"]]]],[11,"get_mut","","If the Atom is set, get the value",4,[[["self"]],[["option"],["t"]]]],[11,"dup","","Duplicate the inner pointer if it is set",4,[[["self"]],["option"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]]],"p":[[8,"IntoRawPtr"],[8,"FromRawPtr"],[8,"GetNextMut"],[3,"Atom"],[3,"AtomSetOnce"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["cgmath"] = {"doc":"A low-dimensional linear algebra library, targeted at…","i":[[3,"AbsDiff","cgmath","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",0,null],[3,"Relative","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",1,null],[12,"max_relative","","The relative tolerance for testing values that are…",1,null],[3,"Ulps","","The requisite parameters for testing for approximate…",null,null],[12,"epsilon","","The tolerance to use when testing values that are close…",2,null],[12,"max_ulps","","The ULPs to tolerate when testing values that are far-apart.",2,null],[14,"abs_diff_eq","","Approximate equality of using the absolute difference.",null,null],[14,"abs_diff_ne","","Approximate inequality of using the absolute difference.",null,null],[14,"relative_eq","","Approximate equality using both the absolute difference…",null,null],[14,"relative_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"ulps_eq","","Approximate equality using both the absolute difference…",null,null],[14,"ulps_ne","","Approximate inequality using both the absolute difference…",null,null],[14,"assert_abs_diff_eq","","An assertion that delegates to `abs_diff_eq!`, and panics…",null,null],[14,"assert_abs_diff_ne","","An assertion that delegates to `abs_diff_ne!`, and panics…",null,null],[14,"assert_relative_eq","","An assertion that delegates to `relative_eq!`, and panics…",null,null],[14,"assert_relative_ne","","An assertion that delegates to `relative_ne!`, and panics…",null,null],[14,"assert_ulps_eq","","An assertion that delegates to `ulps_eq!`, and panics with…",null,null],[14,"assert_ulps_ne","","An assertion that delegates to `ulps_ne!`, and panics with…",null,null],[8,"AbsDiffEq","","Equality that is defined using the absolute difference of…",null,null],[16,"Epsilon","","Used for specifying relative comparisons.",3,null],[10,"default_epsilon","","The default tolerance to use when testing values that are…",3,[[]]],[10,"abs_diff_eq","","A test for equality that uses the absolute difference to…",3,[[["rhs"],["self"]],["bool"]]],[11,"abs_diff_ne","","The inverse of `ApproxEq::abs_diff_eq`.",3,[[["rhs"],["self"]],["bool"]]],[8,"RelativeEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_relative","","The default relative tolerance for testing values that are…",4,[[]]],[10,"relative_eq","","A test for equality that uses a relative comparison if the…",4,[[["rhs"],["self"]],["bool"]]],[11,"relative_ne","","The inverse of `ApproxEq::relative_eq`.",4,[[["rhs"],["self"]],["bool"]]],[8,"UlpsEq","","Equality comparisons between two numbers using both the…",null,null],[10,"default_max_ulps","","The default ULPs to tolerate when testing values that are…",5,[[],["u32"]]],[10,"ulps_eq","","A test for equality that uses units in the last place…",5,[[["u32"],["rhs"],["self"]],["bool"]]],[11,"ulps_ne","","The inverse of `ApproxEq::ulps_eq`.",5,[[["u32"],["rhs"],["self"]],["bool"]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",6,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",6,[[],["self"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",7,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",7,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",7,[[["self"]],["bool"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",8,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",8,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",8,[[["self"]],["bool"]]],[3,"Matrix2","","A 2 x 2, column major matrix",null,null],[12,"x","","The first column of the matrix.",9,null],[12,"y","","The second column of the matrix.",9,null],[3,"Matrix3","","A 3 x 3, column major matrix",null,null],[12,"x","","The first column of the matrix.",10,null],[12,"y","","The second column of the matrix.",10,null],[12,"z","","The third column of the matrix.",10,null],[3,"Matrix4","","A 4 x 4, column major matrix",null,null],[12,"x","","The first column of the matrix.",11,null],[12,"y","","The second column of the matrix.",11,null],[12,"z","","The third column of the matrix.",11,null],[12,"w","","The fourth column of the matrix.",11,null],[3,"Quaternion","","A quaternion in scalar/vector form.",null,null],[12,"s","","The scalar part of the quaternion.",12,null],[12,"v","","The vector part of the quaternion.",12,null],[3,"Vector1","","A 1-dimensional vector.",null,null],[12,"x","","The x component of the vector.",13,null],[3,"Vector2","","A 2-dimensional vector.",null,null],[12,"x","","The x component of the vector.",14,null],[12,"y","","The y component of the vector.",14,null],[3,"Vector3","","A 3-dimensional vector.",null,null],[12,"x","","The x component of the vector.",15,null],[12,"y","","The y component of the vector.",15,null],[12,"z","","The z component of the vector.",15,null],[3,"Vector4","","A 4-dimensional vector.",null,null],[12,"x","","The x component of the vector.",16,null],[12,"y","","The y component of the vector.",16,null],[12,"z","","The z component of the vector.",16,null],[12,"w","","The w component of the vector.",16,null],[3,"Deg","","An angle, in degrees.",null,null],[12,"0","","",17,null],[3,"Rad","","An angle, in radians.",null,null],[12,"0","","",18,null],[3,"Euler","","A set of [Euler angles] representing a rotation in…",null,null],[12,"x","","The angle to apply around the x axis. Also known at the…",19,null],[12,"y","","The angle to apply around the y axis. Also known at the yaw.",19,null],[12,"z","","The angle to apply around the z axis. Also known at the…",19,null],[3,"Point1","","A point in 1-dimensional space.",null,null],[12,"x","","",20,null],[3,"Point2","","A point in 2-dimensional space.",null,null],[12,"x","","",21,null],[12,"y","","",21,null],[3,"Point3","","A point in 3-dimensional space.",null,null],[12,"x","","",22,null],[12,"y","","",22,null],[12,"z","","",22,null],[3,"Basis2","","A two-dimensional rotation matrix.",null,null],[3,"Basis3","","A three-dimensional rotation matrix.",null,null],[3,"Decomposed","","A generic transformation consisting of a rotation,…",null,null],[12,"scale","","",23,null],[12,"rot","","",23,null],[12,"disp","","",23,null],[3,"PerspectiveFov","","A perspective projection based on a vertical field-of-view…",null,null],[12,"fovy","","",24,null],[12,"aspect","","",24,null],[12,"near","","",24,null],[12,"far","","",24,null],[3,"Perspective","","A perspective projection with arbitrary…",null,null],[12,"left","","",25,null],[12,"right","","",25,null],[12,"bottom","","",25,null],[12,"top","","",25,null],[12,"near","","",25,null],[12,"far","","",25,null],[3,"Ortho","","An orthographic projection with arbitrary…",null,null],[12,"left","","",26,null],[12,"right","","",26,null],[12,"bottom","","",26,null],[12,"top","","",26,null],[12,"near","","",26,null],[12,"far","","",26,null],[5,"dot","","Dot product of two vectors.",null,[[["innerspace"]]]],[5,"vec1","","The short constructor.",null,[[["s"]],["vector1"]]],[5,"vec2","","The short constructor.",null,[[["s"]],["vector2"]]],[5,"vec3","","The short constructor.",null,[[["s"]],["vector3"]]],[5,"vec4","","The short constructor.",null,[[["s"]],["vector4"]]],[5,"perspective","","Create a perspective projection matrix.",null,[[["rad"],["into",["rad"]],["basefloat"]],[["matrix4"],["basefloat"]]]],[5,"frustum","","Create a perspective matrix from a view frustum.",null,[[["basefloat"]],[["matrix4"],["basefloat"]]]],[5,"ortho","","Create an orthographic projection matrix.",null,[[["basefloat"]],[["matrix4"],["basefloat"]]]],[0,"conv","","Constrained conversion functions for assisting in…",null,null],[5,"array2","cgmath::conv","Force a conversion into a 2-element array.",null,[[["into"]]]],[5,"array3","","Force a conversion into a 3-element array.",null,[[["into"]]]],[5,"array4","","Force a conversion into a 4-element array.",null,[[["into"]]]],[5,"array2x2","","Force a conversion into a 2x2-element array.",null,[[["into"]]]],[5,"array3x3","","Force a conversion into a 3x3-element array.",null,[[["into"]]]],[5,"array4x4","","Force a conversion into a 4x4-element array.",null,[[["into"]]]],[0,"prelude","cgmath","This module contains the most common traits used in…",null,null],[8,"Bounded","cgmath::prelude","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",6,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",6,[[],["self"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",7,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",7,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",7,[[["self"]],["bool"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",8,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",8,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",8,[[["self"]],["bool"]]],[8,"Array","","An array containing elements of type `Element`",null,null],[16,"Element","","",27,null],[10,"len","","Get the number of elements in the array type",27,[[],["usize"]]],[10,"from_value","","Construct a vector from a single value, replicating it.",27,[[],["self"]]],[11,"as_ptr","","Get the pointer to the first element of the array.",27,[[["self"]]]],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",27,[[["self"]]]],[11,"swap_elements","","Swap the elements at indices `i` and `j` in-place.",27,[[["self"],["usize"]]]],[10,"sum","","The sum of the elements of the array.",27,[[]]],[10,"product","","The product of the elements of the array.",27,[[]]],[10,"is_finite","","Whether all elements of the array are finite",27,[[["self"]],["bool"]]],[8,"ElementWise","","Element-wise arithmetic operations. These are supplied for…",null,null],[10,"add_element_wise","","",28,[[["rhs"]],["self"]]],[10,"sub_element_wise","","",28,[[["rhs"]],["self"]]],[10,"mul_element_wise","","",28,[[["rhs"]],["self"]]],[10,"div_element_wise","","",28,[[["rhs"]],["self"]]],[10,"rem_element_wise","","",28,[[["rhs"]],["self"]]],[10,"add_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"sub_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"mul_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"div_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"rem_assign_element_wise","","",28,[[["self"],["rhs"]]]],[8,"VectorSpace","","Vectors that can be added together and multiplied by…",null,null],[16,"Scalar","","The associated scalar.",29,null],[11,"lerp","","Returns the result of linearly interpolating the vector…",29,[[],["self"]]],[8,"MetricSpace","","A type with a distance function between values.",null,null],[16,"Metric","","The metric to be returned by the `distance` function.",30,null],[10,"distance2","","Returns the squared distance.",30,[[]]],[11,"distance","","The distance between two values.",30,[[]]],[8,"InnerSpace","","Vectors that also have a dot (or inner) product.",null,null],[10,"dot","","Vector dot (or inner) product.",31,[[]]],[11,"is_perpendicular","","Returns `true` if the vector is perpendicular (at right…",31,[[],["bool"]]],[11,"magnitude2","","Returns the squared magnitude.",31,[[]]],[11,"magnitude","","The distance from the tail to the tip of the vector.",31,[[]]],[11,"angle","","Returns the angle between two vectors in radians.",31,[[],["rad"]]],[11,"normalize","","Returns a vector with the same direction, but with a…",31,[[],["self"]]],[11,"normalize_to","","Returns a vector with the same direction and a given…",31,[[],["self"]]],[11,"project_on","","Returns the vector projection of the current inner space…",31,[[],["self"]]],[8,"EuclideanSpace","","Points in a Euclidean space with an associated space of…",null,null],[16,"Scalar","","The associated scalar over which the space is defined.",32,null],[16,"Diff","","The associated space of displacement vectors.",32,null],[10,"origin","","The point at the origin of the Euclidean space.",32,[[],["self"]]],[10,"from_vec","","Convert a displacement vector to a point.",32,[[],["self"]]],[10,"to_vec","","Convert a point to a displacement vector.",32,[[]]],[11,"midpoint","","Returns the middle point between two other points.",32,[[],["self"]]],[11,"centroid","","Returns the average position of all points in the slice.",32,[[],["self"]]],[10,"dot","","This is a weird one, but its useful for plane calculations.",32,[[]]],[8,"Matrix","","A column-major matrix of arbitrary dimensions.",null,null],[16,"Row","","The row vector of the matrix.",33,null],[16,"Column","","The column vector of the matrix.",33,null],[16,"Transpose","","The result of transposing the matrix",33,null],[11,"as_ptr","","Get the pointer to the first element of the array.",33,[[["self"]]]],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",33,[[["self"]]]],[11,"replace_col","","Replace a column in the array.",33,[[["self"],["usize"]]]],[10,"row","","Get a row from this matrix by-value.",33,[[["self"],["usize"]]]],[10,"swap_rows","","Swap two rows of this array.",33,[[["self"],["usize"]]]],[10,"swap_columns","","Swap two columns of this array.",33,[[["self"],["usize"]]]],[10,"swap_elements","","Swap the values at index `a` and `b`",33,[[["self"]]]],[10,"transpose","","Transpose this matrix, returning a new matrix.",33,[[["self"]]]],[8,"SquareMatrix","","A column-major major matrix where the rows and column…",null,null],[16,"ColumnRow","","The row/column vector of the matrix.",34,null],[10,"from_value","","Create a new diagonal matrix using the supplied value.",34,[[],["self"]]],[10,"from_diagonal","","Create a matrix from a non-uniform scale",34,[[],["self"]]],[11,"identity","","The [identity matrix]. Multiplying this matrix with…",34,[[],["self"]]],[10,"transpose_self","","Transpose this matrix in-place.",34,[[["self"]]]],[10,"determinant","","Take the determinant of this matrix.",34,[[["self"]]]],[10,"diagonal","","Return a vector containing the diagonal of this matrix.",34,[[["self"]]]],[11,"trace","","Return the trace of this matrix. That is, the sum of the…",34,[[["self"]]]],[10,"invert","","Invert this matrix, returning a new matrix.…",34,[[["self"]],["option"]]],[11,"is_invertible","","Test if this matrix is invertible.",34,[[["self"]],["bool"]]],[11,"is_identity","","Test if this matrix is the identity matrix. That is, it is…",34,[[["self"]],["bool"]]],[10,"is_diagonal","","Test if this is a diagonal matrix. That is, every element…",34,[[["self"]],["bool"]]],[10,"is_symmetric","","Test if this matrix is symmetric. That is, it is equal to…",34,[[["self"]],["bool"]]],[8,"Angle","","Angles and their associated trigonometric functions.",null,null],[16,"Unitless","","",35,null],[11,"normalize","","Return the angle, normalized to the range `[0, full_turn)`.",35,[[],["self"]]],[11,"normalize_signed","","Return the angle, normalized to the range `[-turn_div_2,…",35,[[],["self"]]],[11,"opposite","","Return the angle rotated by half a turn.",35,[[],["self"]]],[11,"bisect","","Returns the interior bisector of the two angles.",35,[[],["self"]]],[10,"full_turn","","A full rotation.",35,[[],["self"]]],[11,"turn_div_2","","Half of a full rotation.",35,[[],["self"]]],[11,"turn_div_3","","A third of a full rotation.",35,[[],["self"]]],[11,"turn_div_4","","A quarter of a full rotation.",35,[[],["self"]]],[11,"turn_div_6","","A sixth of a full rotation.",35,[[],["self"]]],[10,"sin","","Compute the sine of the angle, returning a unitless ratio.",35,[[]]],[10,"cos","","Compute the cosine of the angle, returning a unitless ratio.",35,[[]]],[10,"tan","","Compute the tangent of the angle, returning a unitless…",35,[[]]],[10,"sin_cos","","Compute the sine and cosine of the angle, returning the…",35,[[]]],[11,"csc","","Compute the cosecant of the angle.",35,[[]]],[11,"cot","","Compute the cotangent of the angle.",35,[[]]],[11,"sec","","Compute the secant of the angle.",35,[[]]],[10,"asin","","Compute the arcsine of the ratio, returning the resulting…",35,[[],["self"]]],[10,"acos","","Compute the arccosine of the ratio, returning the…",35,[[],["self"]]],[10,"atan","","Compute the arctangent of the ratio, returning the…",35,[[],["self"]]],[10,"atan2","","",35,[[],["self"]]],[8,"Rotation","","A trait for a generic rotation. A rotation is a…",null,null],[10,"look_at","","Create a rotation to a given direction with an 'up' vector.",36,[[],["self"]]],[10,"between_vectors","","Create a shortest rotation to transform vector 'a' into…",36,[[],["self"]]],[10,"rotate_vector","","Rotate a vector using this rotation.",36,[[["self"]]]],[11,"rotate_point","","Rotate a point using this rotation, by converting it to…",36,[[["self"],["p"]],["p"]]],[10,"invert","","Create a new rotation which \"un-does\" this rotation. That…",36,[[["self"]],["self"]]],[8,"Rotation2","","A two-dimensional rotation.",null,null],[10,"from_angle","","Create a rotation by a given angle. Thus is a redundant…",37,[[["rad"],["into",["rad"]]],["self"]]],[8,"Rotation3","","A three-dimensional rotation.",null,null],[10,"from_axis_angle","","Create a rotation using an angle around a given axis.",38,[[["vector3"],["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_x","","Create a rotation from an angle around the `x` axis (pitch).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_y","","Create a rotation from an angle around the `y` axis (yaw).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_z","","Create a rotation from an angle around the `z` axis (roll).",38,[[["rad"],["into",["rad"]]],["self"]]],[8,"Transform","","A trait representing an affine transformation that can be…",null,null],[10,"one","","Create an identity transformation. That is, a…",39,[[],["self"]]],[10,"look_at","","Create a transformation that rotates a vector to look at…",39,[[["p"]],["self"]]],[10,"transform_vector","","Transform a vector using this transform.",39,[[["self"]]]],[11,"inverse_transform_vector","","Inverse transform a vector using this transform",39,[[["self"]],["option"]]],[10,"transform_point","","Transform a point using this transform.",39,[[["self"],["p"]],["p"]]],[10,"concat","","Combine this transform with another, yielding a new…",39,[[["self"]],["self"]]],[10,"inverse_transform","","Create a transform that \"un-does\" this one.",39,[[["self"]],["option"]]],[11,"concat_self","","Combine this transform with another, in-place.",39,[[["self"],["self"]]]],[8,"Transform2","","",null,null],[8,"Transform3","","",null,null],[11,"set_one","","Sets `self` to the multiplicative identity element of…",7,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",7,[[["self"]],["bool"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",8,[[["self"]]]],[11,"as_ptr","","Get the pointer to the first element of the array.",27,[[["self"]]]],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",27,[[["self"]]]],[11,"swap_elements","","Swap the elements at indices `i` and `j` in-place.",27,[[["self"],["usize"]]]],[11,"lerp","","Returns the result of linearly interpolating the vector…",29,[[],["self"]]],[11,"distance","","The distance between two values.",30,[[]]],[11,"is_perpendicular","","Returns `true` if the vector is perpendicular (at right…",31,[[],["bool"]]],[11,"magnitude2","","Returns the squared magnitude.",31,[[]]],[11,"magnitude","","The distance from the tail to the tip of the vector.",31,[[]]],[11,"angle","","Returns the angle between two vectors in radians.",31,[[],["rad"]]],[11,"normalize","","Returns a vector with the same direction, but with a…",31,[[],["self"]]],[11,"normalize_to","","Returns a vector with the same direction and a given…",31,[[],["self"]]],[11,"project_on","","Returns the vector projection of the current inner space…",31,[[],["self"]]],[11,"midpoint","","Returns the middle point between two other points.",32,[[],["self"]]],[11,"centroid","","Returns the average position of all points in the slice.",32,[[],["self"]]],[11,"as_ptr","","Get the pointer to the first element of the array.",33,[[["self"]]]],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",33,[[["self"]]]],[11,"replace_col","","Replace a column in the array.",33,[[["self"],["usize"]]]],[11,"identity","","The [identity matrix]. Multiplying this matrix with…",34,[[],["self"]]],[11,"trace","","Return the trace of this matrix. That is, the sum of the…",34,[[["self"]]]],[11,"is_invertible","","Test if this matrix is invertible.",34,[[["self"]],["bool"]]],[11,"is_identity","","Test if this matrix is the identity matrix. That is, it is…",34,[[["self"]],["bool"]]],[11,"normalize","","Return the angle, normalized to the range `[0, full_turn)`.",35,[[],["self"]]],[11,"normalize_signed","","Return the angle, normalized to the range `[-turn_div_2,…",35,[[],["self"]]],[11,"opposite","","Return the angle rotated by half a turn.",35,[[],["self"]]],[11,"bisect","","Returns the interior bisector of the two angles.",35,[[],["self"]]],[11,"turn_div_2","","Half of a full rotation.",35,[[],["self"]]],[11,"turn_div_3","","A third of a full rotation.",35,[[],["self"]]],[11,"turn_div_4","","A quarter of a full rotation.",35,[[],["self"]]],[11,"turn_div_6","","A sixth of a full rotation.",35,[[],["self"]]],[11,"csc","","Compute the cosecant of the angle.",35,[[]]],[11,"cot","","Compute the cotangent of the angle.",35,[[]]],[11,"sec","","Compute the secant of the angle.",35,[[]]],[11,"new","cgmath","Create a new matrix, providing values for each index.",9,[[["s"]],["matrix2"]]],[11,"from_cols","","Create a new matrix, providing columns.",9,[[["vector2"]],["matrix2"]]],[11,"look_at","","Create a transformation matrix that will cause a vector to…",9,[[["vector2"]],["matrix2"]]],[11,"from_angle","","",9,[[["rad"],["into",["rad"]]],["matrix2"]]],[11,"is_finite","","Are all entries in the matrix finite.",9,[[["self"]],["bool"]]],[11,"new","","Create a new matrix, providing values for each index.",10,[[["s"]],["matrix3"]]],[11,"from_cols","","Create a new matrix, providing columns.",10,[[["vector3"]],["matrix3"]]],[11,"look_at","","Create a rotation matrix that will cause a vector to point…",10,[[["vector3"]],["matrix3"]]],[11,"from_angle_x","","Create a rotation matrix from a rotation around the `x`…",10,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,"from_angle_y","","Create a rotation matrix from a rotation around the `y`…",10,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,"from_angle_z","","Create a rotation matrix from a rotation around the `z`…",10,[[["rad"],["into",["rad"]]],["matrix3"]]],[11,"from_axis_angle","","Create a rotation matrix from an angle around an arbitrary…",10,[[["vector3"],["rad"],["into",["rad"]]],["matrix3"]]],[11,"is_finite","","Are all entries in the matrix finite.",10,[[["self"]],["bool"]]],[11,"new","","Create a new matrix, providing values for each index.",11,[[["s"]],["matrix4"]]],[11,"from_cols","","Create a new matrix, providing columns.",11,[[["vector4"]],["matrix4"]]],[11,"from_translation","","Create a homogeneous transformation matrix from a…",11,[[["vector3"]],["matrix4"]]],[11,"from_scale","","Create a homogeneous transformation matrix from a scale…",11,[[["s"]],["matrix4"]]],[11,"from_nonuniform_scale","","Create a homogeneous transformation matrix from a set of…",11,[[["s"]],["matrix4"]]],[11,"look_at_dir","","Create a homogeneous transformation matrix that will cause…",11,[[["vector3"],["point3"]],["matrix4"]]],[11,"look_at","","Create a homogeneous transformation matrix that will cause…",11,[[["vector3"],["point3"]],["matrix4"]]],[11,"from_angle_x","","Create a homogeneous transformation matrix from a rotation…",11,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,"from_angle_y","","Create a homogeneous transformation matrix from a rotation…",11,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,"from_angle_z","","Create a homogeneous transformation matrix from a rotation…",11,[[["rad"],["into",["rad"]]],["matrix4"]]],[11,"from_axis_angle","","Create a homogeneous transformation matrix from an angle…",11,[[["vector3"],["rad"],["into",["rad"]]],["matrix4"]]],[11,"is_finite","","Are all entries in the matrix finite.",11,[[["self"]],["bool"]]],[11,"cast","","Component-wise casting to another type",9,[[["self"]],[["option",["matrix2"]],["matrix2"]]]],[11,"cast","","Component-wise casting to another type",10,[[["self"]],[["matrix3"],["option",["matrix3"]]]]],[11,"cast","","Component-wise casting to another type",11,[[["self"]],[["option",["matrix4"]],["matrix4"]]]],[11,"new","","Construct a new quaternion from one scalar component and…",12,[[["s"]],["quaternion"]]],[11,"from_sv","","Construct a new quaternion from a scalar and a vector.",12,[[["vector3"],["s"]],["quaternion"]]],[11,"from_arc","","Construct a new quaternion as a closest arc between two…",12,[[["vector3"],["option",["vector3"]]],["quaternion"]]],[11,"conjugate","","The conjugate of the quaternion.",12,[[],["quaternion"]]],[11,"nlerp","","Do a normalized linear interpolation with `other`, by…",12,[[["quaternion"],["s"]],["quaternion"]]],[11,"slerp","","Spherical Linear Interpolation",12,[[["quaternion"],["s"]],["quaternion"]]],[11,"is_finite","","",12,[[["self"]],["bool"]]],[11,"cast","","Component-wise casting to another type.",12,[[["self"]],[["option",["quaternion"]],["quaternion"]]]],[11,"new","","Construct a new vector, using the provided values.",13,[[["s"]],["vector1"]]],[11,"map","","Perform the given operation on each field in the vector,…",13,[[["f"]],["vector1"]]],[11,"cast","","Component-wise casting to another type.",13,[[["self"]],[["option",["vector1"]],["vector1"]]]],[11,"new","","Construct a new vector, using the provided values.",14,[[["s"]],["vector2"]]],[11,"map","","Perform the given operation on each field in the vector,…",14,[[["f"]],["vector2"]]],[11,"cast","","Component-wise casting to another type.",14,[[["self"]],[["option",["vector2"]],["vector2"]]]],[11,"new","","Construct a new vector, using the provided values.",15,[[["s"]],["vector3"]]],[11,"map","","Perform the given operation on each field in the vector,…",15,[[["f"]],["vector3"]]],[11,"cast","","Component-wise casting to another type.",15,[[["self"]],[["option",["vector3"]],["vector3"]]]],[11,"new","","Construct a new vector, using the provided values.",16,[[["s"]],["vector4"]]],[11,"map","","Perform the given operation on each field in the vector,…",16,[[["f"]],["vector4"]]],[11,"cast","","Component-wise casting to another type.",16,[[["self"]],[["option",["vector4"]],["vector4"]]]],[11,"unit_x","","A unit vector in the `x` direction.",13,[[],["vector1"]]],[11,"unit_x","","A unit vector in the `x` direction.",14,[[],["vector2"]]],[11,"unit_y","","A unit vector in the `y` direction.",14,[[],["vector2"]]],[11,"perp_dot","","The perpendicular dot product of the vector and `other`.",14,[[["vector2"]],["s"]]],[11,"extend","","Create a `Vector3`, using the `x` and `y` values from this…",14,[[["s"]],["vector3"]]],[11,"unit_x","","A unit vector in the `x` direction.",15,[[],["vector3"]]],[11,"unit_y","","A unit vector in the `y` direction.",15,[[],["vector3"]]],[11,"unit_z","","A unit vector in the `z` direction.",15,[[],["vector3"]]],[11,"cross","","Returns the cross product of the vector and `other`.",15,[[["vector3"]],["vector3"]]],[11,"extend","","Create a `Vector4`, using the `x`, `y` and `z` values from…",15,[[["s"]],["vector4"]]],[11,"truncate","","Create a `Vector2`, dropping the `z` value.",15,[[],["vector2"]]],[11,"unit_x","","A unit vector in the `x` direction.",16,[[],["vector4"]]],[11,"unit_y","","A unit vector in the `y` direction.",16,[[],["vector4"]]],[11,"unit_z","","A unit vector in the `z` direction.",16,[[],["vector4"]]],[11,"unit_w","","A unit vector in the `w` direction.",16,[[],["vector4"]]],[11,"truncate","","Create a `Vector3`, dropping the `w` value.",16,[[],["vector3"]]],[11,"truncate_n","","Create a `Vector3`, dropping the nth element.",16,[[["isize"],["self"]],["vector3"]]],[11,"new","","Construct a set of euler angles.",19,[[["a"]],["euler"]]],[11,"from_homogeneous","","",22,[[["vector4"]],["point3"]]],[11,"to_homogeneous","","",22,[[],["vector4"]]],[11,"new","","Construct a new point, using the provided values.",20,[[["s"]],["point1"]]],[11,"map","","Perform the given operation on each field in the point,…",20,[[["f"]],["point1"]]],[11,"cast","","Component-wise casting to another type",20,[[["self"]],[["point1"],["option",["point1"]]]]],[11,"new","","Construct a new point, using the provided values.",21,[[["s"]],["point2"]]],[11,"map","","Perform the given operation on each field in the point,…",21,[[["f"]],["point2"]]],[11,"cast","","Component-wise casting to another type",21,[[["self"]],[["option",["point2"]],["point2"]]]],[11,"new","","Construct a new point, using the provided values.",22,[[["s"]],["point3"]]],[11,"map","","Perform the given operation on each field in the point,…",22,[[["f"]],["point3"]]],[11,"cast","","Component-wise casting to another type",22,[[["self"]],[["option",["point3"]],["point3"]]]],[11,"rotate_point","cgmath::prelude","Rotate a point using this rotation, by converting it to…",36,[[["self"],["p"]],["p"]]],[11,"from_angle_x","","Create a rotation from an angle around the `x` axis (pitch).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_y","","Create a rotation from an angle around the `y` axis (yaw).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_z","","Create a rotation from an angle around the `z` axis (roll).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_quaternion","cgmath","Create a new rotation matrix from a quaternion.",40,[[["quaternion"]],["basis3"]]],[11,"inverse_transform_vector","cgmath::prelude","Inverse transform a vector using this transform",39,[[["self"]],["option"]]],[11,"concat_self","","Combine this transform with another, in-place.",39,[[["self"],["self"]]]],[11,"to_perspective","cgmath","",24,[[["self"]],["perspective"]]],[8,"BaseNum","","Base numeric types with partial ordering",null,null],[8,"BaseFloat","","Base floating point types",null,null],[8,"Array","","An array containing elements of type `Element`",null,null],[16,"Element","","",27,null],[10,"len","","Get the number of elements in the array type",27,[[],["usize"]]],[10,"from_value","","Construct a vector from a single value, replicating it.",27,[[],["self"]]],[11,"as_ptr","cgmath::prelude","Get the pointer to the first element of the array.",27,[[["self"]]]],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",27,[[["self"]]]],[11,"swap_elements","","Swap the elements at indices `i` and `j` in-place.",27,[[["self"],["usize"]]]],[10,"sum","cgmath","The sum of the elements of the array.",27,[[]]],[10,"product","","The product of the elements of the array.",27,[[]]],[10,"is_finite","","Whether all elements of the array are finite",27,[[["self"]],["bool"]]],[8,"ElementWise","","Element-wise arithmetic operations. These are supplied for…",null,null],[10,"add_element_wise","","",28,[[["rhs"]],["self"]]],[10,"sub_element_wise","","",28,[[["rhs"]],["self"]]],[10,"mul_element_wise","","",28,[[["rhs"]],["self"]]],[10,"div_element_wise","","",28,[[["rhs"]],["self"]]],[10,"rem_element_wise","","",28,[[["rhs"]],["self"]]],[10,"add_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"sub_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"mul_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"div_assign_element_wise","","",28,[[["self"],["rhs"]]]],[10,"rem_assign_element_wise","","",28,[[["self"],["rhs"]]]],[8,"VectorSpace","","Vectors that can be added together and multiplied by…",null,null],[16,"Scalar","","The associated scalar.",29,null],[11,"lerp","cgmath::prelude","Returns the result of linearly interpolating the vector…",29,[[],["self"]]],[8,"MetricSpace","cgmath","A type with a distance function between values.",null,null],[16,"Metric","","The metric to be returned by the `distance` function.",30,null],[10,"distance2","","Returns the squared distance.",30,[[]]],[11,"distance","cgmath::prelude","The distance between two values.",30,[[]]],[8,"InnerSpace","cgmath","Vectors that also have a dot (or inner) product.",null,null],[10,"dot","","Vector dot (or inner) product.",31,[[]]],[11,"is_perpendicular","cgmath::prelude","Returns `true` if the vector is perpendicular (at right…",31,[[],["bool"]]],[11,"magnitude2","","Returns the squared magnitude.",31,[[]]],[11,"magnitude","","The distance from the tail to the tip of the vector.",31,[[]]],[11,"angle","","Returns the angle between two vectors in radians.",31,[[],["rad"]]],[11,"normalize","","Returns a vector with the same direction, but with a…",31,[[],["self"]]],[11,"normalize_to","","Returns a vector with the same direction and a given…",31,[[],["self"]]],[11,"project_on","","Returns the vector projection of the current inner space…",31,[[],["self"]]],[8,"EuclideanSpace","cgmath","Points in a Euclidean space with an associated space of…",null,null],[16,"Scalar","","The associated scalar over which the space is defined.",32,null],[16,"Diff","","The associated space of displacement vectors.",32,null],[10,"origin","","The point at the origin of the Euclidean space.",32,[[],["self"]]],[10,"from_vec","","Convert a displacement vector to a point.",32,[[],["self"]]],[10,"to_vec","","Convert a point to a displacement vector.",32,[[]]],[11,"midpoint","cgmath::prelude","Returns the middle point between two other points.",32,[[],["self"]]],[11,"centroid","","Returns the average position of all points in the slice.",32,[[],["self"]]],[10,"dot","cgmath","This is a weird one, but its useful for plane calculations.",32,[[]]],[8,"Matrix","","A column-major matrix of arbitrary dimensions.",null,null],[16,"Row","","The row vector of the matrix.",33,null],[16,"Column","","The column vector of the matrix.",33,null],[16,"Transpose","","The result of transposing the matrix",33,null],[11,"as_ptr","cgmath::prelude","Get the pointer to the first element of the array.",33,[[["self"]]]],[11,"as_mut_ptr","","Get a mutable pointer to the first element of the array.",33,[[["self"]]]],[11,"replace_col","","Replace a column in the array.",33,[[["self"],["usize"]]]],[10,"row","cgmath","Get a row from this matrix by-value.",33,[[["self"],["usize"]]]],[10,"swap_rows","","Swap two rows of this array.",33,[[["self"],["usize"]]]],[10,"swap_columns","","Swap two columns of this array.",33,[[["self"],["usize"]]]],[10,"swap_elements","","Swap the values at index `a` and `b`",33,[[["self"]]]],[10,"transpose","","Transpose this matrix, returning a new matrix.",33,[[["self"]]]],[8,"SquareMatrix","","A column-major major matrix where the rows and column…",null,null],[16,"ColumnRow","","The row/column vector of the matrix.",34,null],[10,"from_value","","Create a new diagonal matrix using the supplied value.",34,[[],["self"]]],[10,"from_diagonal","","Create a matrix from a non-uniform scale",34,[[],["self"]]],[11,"identity","cgmath::prelude","The [identity matrix]. Multiplying this matrix with…",34,[[],["self"]]],[10,"transpose_self","cgmath","Transpose this matrix in-place.",34,[[["self"]]]],[10,"determinant","","Take the determinant of this matrix.",34,[[["self"]]]],[10,"diagonal","","Return a vector containing the diagonal of this matrix.",34,[[["self"]]]],[11,"trace","cgmath::prelude","Return the trace of this matrix. That is, the sum of the…",34,[[["self"]]]],[10,"invert","cgmath","Invert this matrix, returning a new matrix.…",34,[[["self"]],["option"]]],[11,"is_invertible","cgmath::prelude","Test if this matrix is invertible.",34,[[["self"]],["bool"]]],[11,"is_identity","","Test if this matrix is the identity matrix. That is, it is…",34,[[["self"]],["bool"]]],[10,"is_diagonal","cgmath","Test if this is a diagonal matrix. That is, every element…",34,[[["self"]],["bool"]]],[10,"is_symmetric","","Test if this matrix is symmetric. That is, it is equal to…",34,[[["self"]],["bool"]]],[8,"Angle","","Angles and their associated trigonometric functions.",null,null],[16,"Unitless","","",35,null],[11,"normalize","cgmath::prelude","Return the angle, normalized to the range `[0, full_turn)`.",35,[[],["self"]]],[11,"normalize_signed","","Return the angle, normalized to the range `[-turn_div_2,…",35,[[],["self"]]],[11,"opposite","","Return the angle rotated by half a turn.",35,[[],["self"]]],[11,"bisect","","Returns the interior bisector of the two angles.",35,[[],["self"]]],[10,"full_turn","cgmath","A full rotation.",35,[[],["self"]]],[11,"turn_div_2","cgmath::prelude","Half of a full rotation.",35,[[],["self"]]],[11,"turn_div_3","","A third of a full rotation.",35,[[],["self"]]],[11,"turn_div_4","","A quarter of a full rotation.",35,[[],["self"]]],[11,"turn_div_6","","A sixth of a full rotation.",35,[[],["self"]]],[10,"sin","cgmath","Compute the sine of the angle, returning a unitless ratio.",35,[[]]],[10,"cos","","Compute the cosine of the angle, returning a unitless ratio.",35,[[]]],[10,"tan","","Compute the tangent of the angle, returning a unitless…",35,[[]]],[10,"sin_cos","","Compute the sine and cosine of the angle, returning the…",35,[[]]],[11,"csc","cgmath::prelude","Compute the cosecant of the angle.",35,[[]]],[11,"cot","","Compute the cotangent of the angle.",35,[[]]],[11,"sec","","Compute the secant of the angle.",35,[[]]],[10,"asin","cgmath","Compute the arcsine of the ratio, returning the resulting…",35,[[],["self"]]],[10,"acos","","Compute the arccosine of the ratio, returning the…",35,[[],["self"]]],[10,"atan","","Compute the arctangent of the ratio, returning the…",35,[[],["self"]]],[10,"atan2","","",35,[[],["self"]]],[8,"Rotation","","A trait for a generic rotation. A rotation is a…",null,null],[10,"look_at","","Create a rotation to a given direction with an 'up' vector.",36,[[],["self"]]],[10,"between_vectors","","Create a shortest rotation to transform vector 'a' into…",36,[[],["self"]]],[10,"rotate_vector","","Rotate a vector using this rotation.",36,[[["self"]]]],[11,"rotate_point","cgmath::prelude","Rotate a point using this rotation, by converting it to…",36,[[["self"],["p"]],["p"]]],[10,"invert","cgmath","Create a new rotation which \"un-does\" this rotation. That…",36,[[["self"]],["self"]]],[8,"Rotation2","","A two-dimensional rotation.",null,null],[10,"from_angle","","Create a rotation by a given angle. Thus is a redundant…",37,[[["rad"],["into",["rad"]]],["self"]]],[8,"Rotation3","","A three-dimensional rotation.",null,null],[10,"from_axis_angle","","Create a rotation using an angle around a given axis.",38,[[["vector3"],["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_x","cgmath::prelude","Create a rotation from an angle around the `x` axis (pitch).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_y","","Create a rotation from an angle around the `y` axis (yaw).",38,[[["rad"],["into",["rad"]]],["self"]]],[11,"from_angle_z","","Create a rotation from an angle around the `z` axis (roll).",38,[[["rad"],["into",["rad"]]],["self"]]],[8,"Transform","cgmath","A trait representing an affine transformation that can be…",null,null],[10,"one","","Create an identity transformation. That is, a…",39,[[],["self"]]],[10,"look_at","","Create a transformation that rotates a vector to look at…",39,[[["p"]],["self"]]],[10,"transform_vector","","Transform a vector using this transform.",39,[[["self"]]]],[11,"inverse_transform_vector","cgmath::prelude","Inverse transform a vector using this transform",39,[[["self"]],["option"]]],[10,"transform_point","cgmath","Transform a point using this transform.",39,[[["self"],["p"]],["p"]]],[10,"concat","","Combine this transform with another, yielding a new…",39,[[["self"]],["self"]]],[10,"inverse_transform","","Create a transform that \"un-does\" this one.",39,[[["self"]],["option"]]],[11,"concat_self","cgmath::prelude","Combine this transform with another, in-place.",39,[[["self"],["self"]]]],[8,"Transform2","cgmath","",null,null],[8,"Transform3","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"default","","",1,[[],["relative"]]],[11,"default","","",2,[[],["ulps"]]],[11,"default","","",0,[[],["absdiff"]]],[11,"len","","",13,[[],["usize"]]],[11,"from_value","","",13,[[["s"]],["vector1"]]],[11,"sum","","",13,[[],["s"]]],[11,"product","","",13,[[],["s"]]],[11,"is_finite","","",13,[[["self"]],["bool"]]],[11,"len","","",14,[[],["usize"]]],[11,"from_value","","",14,[[["s"]],["vector2"]]],[11,"sum","","",14,[[],["s"]]],[11,"product","","",14,[[],["s"]]],[11,"is_finite","","",14,[[["self"]],["bool"]]],[11,"len","","",15,[[],["usize"]]],[11,"from_value","","",15,[[["s"]],["vector3"]]],[11,"sum","","",15,[[],["s"]]],[11,"product","","",15,[[],["s"]]],[11,"is_finite","","",15,[[["self"]],["bool"]]],[11,"len","","",16,[[],["usize"]]],[11,"from_value","","",16,[[["s"]],["vector4"]]],[11,"sum","","",16,[[],["s"]]],[11,"product","","",16,[[],["s"]]],[11,"is_finite","","",16,[[["self"]],["bool"]]],[11,"len","","",20,[[],["usize"]]],[11,"from_value","","",20,[[["s"]],["point1"]]],[11,"sum","","",20,[[],["s"]]],[11,"product","","",20,[[],["s"]]],[11,"is_finite","","",20,[[["self"]],["bool"]]],[11,"len","","",21,[[],["usize"]]],[11,"from_value","","",21,[[["s"]],["point2"]]],[11,"sum","","",21,[[],["s"]]],[11,"product","","",21,[[],["s"]]],[11,"is_finite","","",21,[[["self"]],["bool"]]],[11,"len","","",22,[[],["usize"]]],[11,"from_value","","",22,[[["s"]],["point3"]]],[11,"sum","","",22,[[],["s"]]],[11,"product","","",22,[[],["s"]]],[11,"is_finite","","",22,[[["self"]],["bool"]]],[11,"add_element_wise","","",13,[[["vector1"]],["vector1"]]],[11,"sub_element_wise","","",13,[[["vector1"]],["vector1"]]],[11,"mul_element_wise","","",13,[[["vector1"]],["vector1"]]],[11,"div_element_wise","","",13,[[["vector1"]],["vector1"]]],[11,"rem_element_wise","","",13,[[["vector1"]],["vector1"]]],[11,"add_assign_element_wise","","",13,[[["self"],["vector1"]]]],[11,"sub_assign_element_wise","","",13,[[["self"],["vector1"]]]],[11,"mul_assign_element_wise","","",13,[[["self"],["vector1"]]]],[11,"div_assign_element_wise","","",13,[[["self"],["vector1"]]]],[11,"rem_assign_element_wise","","",13,[[["self"],["vector1"]]]],[11,"add_element_wise","","",13,[[["s"]],["vector1"]]],[11,"sub_element_wise","","",13,[[["s"]],["vector1"]]],[11,"mul_element_wise","","",13,[[["s"]],["vector1"]]],[11,"div_element_wise","","",13,[[["s"]],["vector1"]]],[11,"rem_element_wise","","",13,[[["s"]],["vector1"]]],[11,"add_assign_element_wise","","",13,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",13,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",13,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",13,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",13,[[["self"],["s"]]]],[11,"add_element_wise","","",14,[[["vector2"]],["vector2"]]],[11,"sub_element_wise","","",14,[[["vector2"]],["vector2"]]],[11,"mul_element_wise","","",14,[[["vector2"]],["vector2"]]],[11,"div_element_wise","","",14,[[["vector2"]],["vector2"]]],[11,"rem_element_wise","","",14,[[["vector2"]],["vector2"]]],[11,"add_assign_element_wise","","",14,[[["vector2"],["self"]]]],[11,"sub_assign_element_wise","","",14,[[["vector2"],["self"]]]],[11,"mul_assign_element_wise","","",14,[[["vector2"],["self"]]]],[11,"div_assign_element_wise","","",14,[[["vector2"],["self"]]]],[11,"rem_assign_element_wise","","",14,[[["vector2"],["self"]]]],[11,"add_element_wise","","",14,[[["s"]],["vector2"]]],[11,"sub_element_wise","","",14,[[["s"]],["vector2"]]],[11,"mul_element_wise","","",14,[[["s"]],["vector2"]]],[11,"div_element_wise","","",14,[[["s"]],["vector2"]]],[11,"rem_element_wise","","",14,[[["s"]],["vector2"]]],[11,"add_assign_element_wise","","",14,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",14,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",14,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",14,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",14,[[["self"],["s"]]]],[11,"add_element_wise","","",15,[[["vector3"]],["vector3"]]],[11,"sub_element_wise","","",15,[[["vector3"]],["vector3"]]],[11,"mul_element_wise","","",15,[[["vector3"]],["vector3"]]],[11,"div_element_wise","","",15,[[["vector3"]],["vector3"]]],[11,"rem_element_wise","","",15,[[["vector3"]],["vector3"]]],[11,"add_assign_element_wise","","",15,[[["vector3"],["self"]]]],[11,"sub_assign_element_wise","","",15,[[["vector3"],["self"]]]],[11,"mul_assign_element_wise","","",15,[[["vector3"],["self"]]]],[11,"div_assign_element_wise","","",15,[[["vector3"],["self"]]]],[11,"rem_assign_element_wise","","",15,[[["vector3"],["self"]]]],[11,"add_element_wise","","",15,[[["s"]],["vector3"]]],[11,"sub_element_wise","","",15,[[["s"]],["vector3"]]],[11,"mul_element_wise","","",15,[[["s"]],["vector3"]]],[11,"div_element_wise","","",15,[[["s"]],["vector3"]]],[11,"rem_element_wise","","",15,[[["s"]],["vector3"]]],[11,"add_assign_element_wise","","",15,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",15,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",15,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",15,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",15,[[["self"],["s"]]]],[11,"add_element_wise","","",16,[[["vector4"]],["vector4"]]],[11,"sub_element_wise","","",16,[[["vector4"]],["vector4"]]],[11,"mul_element_wise","","",16,[[["vector4"]],["vector4"]]],[11,"div_element_wise","","",16,[[["vector4"]],["vector4"]]],[11,"rem_element_wise","","",16,[[["vector4"]],["vector4"]]],[11,"add_assign_element_wise","","",16,[[["self"],["vector4"]]]],[11,"sub_assign_element_wise","","",16,[[["self"],["vector4"]]]],[11,"mul_assign_element_wise","","",16,[[["self"],["vector4"]]]],[11,"div_assign_element_wise","","",16,[[["self"],["vector4"]]]],[11,"rem_assign_element_wise","","",16,[[["self"],["vector4"]]]],[11,"add_element_wise","","",16,[[["s"]],["vector4"]]],[11,"sub_element_wise","","",16,[[["s"]],["vector4"]]],[11,"mul_element_wise","","",16,[[["s"]],["vector4"]]],[11,"div_element_wise","","",16,[[["s"]],["vector4"]]],[11,"rem_element_wise","","",16,[[["s"]],["vector4"]]],[11,"add_assign_element_wise","","",16,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",16,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",16,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",16,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",16,[[["self"],["s"]]]],[11,"add_element_wise","","",20,[[["point1"]],["point1"]]],[11,"sub_element_wise","","",20,[[["point1"]],["point1"]]],[11,"mul_element_wise","","",20,[[["point1"]],["point1"]]],[11,"div_element_wise","","",20,[[["point1"]],["point1"]]],[11,"rem_element_wise","","",20,[[["point1"]],["point1"]]],[11,"add_assign_element_wise","","",20,[[["self"],["point1"]]]],[11,"sub_assign_element_wise","","",20,[[["self"],["point1"]]]],[11,"mul_assign_element_wise","","",20,[[["self"],["point1"]]]],[11,"div_assign_element_wise","","",20,[[["self"],["point1"]]]],[11,"rem_assign_element_wise","","",20,[[["self"],["point1"]]]],[11,"add_element_wise","","",20,[[["s"]],["point1"]]],[11,"sub_element_wise","","",20,[[["s"]],["point1"]]],[11,"mul_element_wise","","",20,[[["s"]],["point1"]]],[11,"div_element_wise","","",20,[[["s"]],["point1"]]],[11,"rem_element_wise","","",20,[[["s"]],["point1"]]],[11,"add_assign_element_wise","","",20,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",20,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",20,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",20,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",20,[[["self"],["s"]]]],[11,"add_element_wise","","",21,[[["point2"]],["point2"]]],[11,"sub_element_wise","","",21,[[["point2"]],["point2"]]],[11,"mul_element_wise","","",21,[[["point2"]],["point2"]]],[11,"div_element_wise","","",21,[[["point2"]],["point2"]]],[11,"rem_element_wise","","",21,[[["point2"]],["point2"]]],[11,"add_assign_element_wise","","",21,[[["point2"],["self"]]]],[11,"sub_assign_element_wise","","",21,[[["point2"],["self"]]]],[11,"mul_assign_element_wise","","",21,[[["point2"],["self"]]]],[11,"div_assign_element_wise","","",21,[[["point2"],["self"]]]],[11,"rem_assign_element_wise","","",21,[[["point2"],["self"]]]],[11,"add_element_wise","","",21,[[["s"]],["point2"]]],[11,"sub_element_wise","","",21,[[["s"]],["point2"]]],[11,"mul_element_wise","","",21,[[["s"]],["point2"]]],[11,"div_element_wise","","",21,[[["s"]],["point2"]]],[11,"rem_element_wise","","",21,[[["s"]],["point2"]]],[11,"add_assign_element_wise","","",21,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",21,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",21,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",21,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",21,[[["self"],["s"]]]],[11,"add_element_wise","","",22,[[["point3"]],["point3"]]],[11,"sub_element_wise","","",22,[[["point3"]],["point3"]]],[11,"mul_element_wise","","",22,[[["point3"]],["point3"]]],[11,"div_element_wise","","",22,[[["point3"]],["point3"]]],[11,"rem_element_wise","","",22,[[["point3"]],["point3"]]],[11,"add_assign_element_wise","","",22,[[["self"],["point3"]]]],[11,"sub_assign_element_wise","","",22,[[["self"],["point3"]]]],[11,"mul_assign_element_wise","","",22,[[["self"],["point3"]]]],[11,"div_assign_element_wise","","",22,[[["self"],["point3"]]]],[11,"rem_assign_element_wise","","",22,[[["self"],["point3"]]]],[11,"add_element_wise","","",22,[[["s"]],["point3"]]],[11,"sub_element_wise","","",22,[[["s"]],["point3"]]],[11,"mul_element_wise","","",22,[[["s"]],["point3"]]],[11,"div_element_wise","","",22,[[["s"]],["point3"]]],[11,"rem_element_wise","","",22,[[["s"]],["point3"]]],[11,"add_assign_element_wise","","",22,[[["self"],["s"]]]],[11,"sub_assign_element_wise","","",22,[[["self"],["s"]]]],[11,"mul_assign_element_wise","","",22,[[["self"],["s"]]]],[11,"div_assign_element_wise","","",22,[[["self"],["s"]]]],[11,"rem_assign_element_wise","","",22,[[["self"],["s"]]]],[11,"distance2","","",12,[[],["s"]]],[11,"distance2","","",13,[[],["s"]]],[11,"distance2","","",14,[[],["s"]]],[11,"distance2","","",15,[[],["s"]]],[11,"distance2","","",16,[[],["s"]]],[11,"distance2","","",20,[[],["s"]]],[11,"distance2","","",21,[[],["s"]]],[11,"distance2","","",22,[[],["s"]]],[11,"dot","","",12,[[["quaternion"]],["s"]]],[11,"dot","","",13,[[["vector1"]],["s"]]],[11,"dot","","",14,[[["vector2"]],["s"]]],[11,"angle","","",14,[[["vector2"]],["rad"]]],[11,"dot","","",15,[[["vector3"]],["s"]]],[11,"angle","","",15,[[["vector3"]],["rad"]]],[11,"dot","","",16,[[["vector4"]],["s"]]],[11,"origin","","",20,[[],["point1"]]],[11,"from_vec","","",20,[[["vector1"]],["point1"]]],[11,"to_vec","","",20,[[],["vector1"]]],[11,"dot","","",20,[[["vector1"]],["s"]]],[11,"origin","","",21,[[],["point2"]]],[11,"from_vec","","",21,[[["vector2"]],["point2"]]],[11,"to_vec","","",21,[[],["vector2"]]],[11,"dot","","",21,[[["vector2"]],["s"]]],[11,"origin","","",22,[[],["point3"]]],[11,"from_vec","","",22,[[["vector3"]],["point3"]]],[11,"to_vec","","",22,[[],["vector3"]]],[11,"dot","","",22,[[["vector3"]],["s"]]],[11,"row","","",9,[[["self"],["usize"]],["vector2"]]],[11,"swap_rows","","",9,[[["self"],["usize"]]]],[11,"swap_columns","","",9,[[["self"],["usize"]]]],[11,"swap_elements","","",9,[[["self"]]]],[11,"transpose","","",9,[[["self"]],["matrix2"]]],[11,"row","","",10,[[["self"],["usize"]],["vector3"]]],[11,"swap_rows","","",10,[[["self"],["usize"]]]],[11,"swap_columns","","",10,[[["self"],["usize"]]]],[11,"swap_elements","","",10,[[["self"]]]],[11,"transpose","","",10,[[["self"]],["matrix3"]]],[11,"row","","",11,[[["self"],["usize"]],["vector4"]]],[11,"swap_rows","","",11,[[["self"],["usize"]]]],[11,"swap_columns","","",11,[[["self"],["usize"]]]],[11,"swap_elements","","",11,[[["self"]]]],[11,"transpose","","",11,[[["self"]],["matrix4"]]],[11,"from_value","","",9,[[["s"]],["matrix2"]]],[11,"from_diagonal","","",9,[[["vector2"]],["matrix2"]]],[11,"transpose_self","","",9,[[["self"]]]],[11,"determinant","","",9,[[["self"]],["s"]]],[11,"diagonal","","",9,[[["self"]],["vector2"]]],[11,"invert","","",9,[[["self"]],[["option",["matrix2"]],["matrix2"]]]],[11,"is_diagonal","","",9,[[["self"]],["bool"]]],[11,"is_symmetric","","",9,[[["self"]],["bool"]]],[11,"from_value","","",10,[[["s"]],["matrix3"]]],[11,"from_diagonal","","",10,[[["vector3"]],["matrix3"]]],[11,"transpose_self","","",10,[[["self"]]]],[11,"determinant","","",10,[[["self"]],["s"]]],[11,"diagonal","","",10,[[["self"]],["vector3"]]],[11,"invert","","",10,[[["self"]],[["option",["matrix3"]],["matrix3"]]]],[11,"is_diagonal","","",10,[[["self"]],["bool"]]],[11,"is_symmetric","","",10,[[["self"]],["bool"]]],[11,"from_value","","",11,[[["s"]],["matrix4"]]],[11,"from_diagonal","","",11,[[["vector4"]],["matrix4"]]],[11,"transpose_self","","",11,[[["self"]]]],[11,"determinant","","",11,[[["self"]],["s"]]],[11,"diagonal","","",11,[[["self"]],["vector4"]]],[11,"invert","","",11,[[["self"]],[["option",["matrix4"]],["matrix4"]]]],[11,"is_diagonal","","",11,[[["self"]],["bool"]]],[11,"is_symmetric","","",11,[[["self"]],["bool"]]],[11,"full_turn","","",18,[[],["rad"]]],[11,"sin","","",18,[[],["s"]]],[11,"cos","","",18,[[],["s"]]],[11,"tan","","",18,[[],["s"]]],[11,"sin_cos","","",18,[[]]],[11,"asin","","",18,[[["s"]],["rad"]]],[11,"acos","","",18,[[["s"]],["rad"]]],[11,"atan","","",18,[[["s"]],["rad"]]],[11,"atan2","","",18,[[["s"]],["rad"]]],[11,"full_turn","","",17,[[],["deg"]]],[11,"sin","","",17,[[],["s"]]],[11,"cos","","",17,[[],["s"]]],[11,"tan","","",17,[[],["s"]]],[11,"sin_cos","","",17,[[]]],[11,"asin","","",17,[[["s"]],["deg"]]],[11,"acos","","",17,[[["s"]],["deg"]]],[11,"atan","","",17,[[["s"]],["deg"]]],[11,"atan2","","",17,[[["s"]],["deg"]]],[11,"look_at","","",12,[[["vector3"]],["quaternion"]]],[11,"between_vectors","","",12,[[["vector3"]],["quaternion"]]],[11,"rotate_vector","","",12,[[["vector3"],["self"]],["vector3"]]],[11,"invert","","",12,[[["self"]],["quaternion"]]],[11,"look_at","","",41,[[["vector2"]],["basis2"]]],[11,"between_vectors","","",41,[[["vector2"]],["basis2"]]],[11,"rotate_vector","","",41,[[["vector2"],["self"]],["vector2"]]],[11,"invert","","",41,[[["self"]],["basis2"]]],[11,"look_at","","",40,[[["vector3"]],["basis3"]]],[11,"between_vectors","","",40,[[["vector3"]],["basis3"]]],[11,"rotate_vector","","",40,[[["vector3"],["self"]],["vector3"]]],[11,"invert","","",40,[[["self"]],["basis3"]]],[11,"from_angle","","",41,[[["rad"],["into",["rad"]]],["basis2"]]],[11,"from_axis_angle","","",12,[[["vector3"],["rad"],["into",["rad"]]],["quaternion"]]],[11,"from_axis_angle","","",40,[[["vector3"],["rad"],["into",["rad"]]],["basis3"]]],[11,"from_angle_x","","",40,[[["rad"],["into",["rad"]]],["basis3"]]],[11,"from_angle_y","","",40,[[["rad"],["into",["rad"]]],["basis3"]]],[11,"from_angle_z","","",40,[[["rad"],["into",["rad"]]],["basis3"]]],[11,"one","","",10,[[],["matrix3"]]],[11,"look_at","","",10,[[["point2"],["vector2"]],["matrix3"]]],[11,"transform_vector","","",10,[[["vector2"],["self"]],["vector2"]]],[11,"transform_point","","",10,[[["point2"],["self"]],["point2"]]],[11,"concat","","",10,[[["self"],["matrix3"]],["matrix3"]]],[11,"inverse_transform","","",10,[[["self"]],[["option",["matrix3"]],["matrix3"]]]],[11,"one","","",10,[[],["matrix3"]]],[11,"look_at","","",10,[[["vector3"],["point3"]],["matrix3"]]],[11,"transform_vector","","",10,[[["vector3"],["self"]],["vector3"]]],[11,"transform_point","","",10,[[["self"],["point3"]],["point3"]]],[11,"concat","","",10,[[["self"],["matrix3"]],["matrix3"]]],[11,"inverse_transform","","",10,[[["self"]],[["option",["matrix3"]],["matrix3"]]]],[11,"one","","",11,[[],["matrix4"]]],[11,"look_at","","",11,[[["vector3"],["point3"]],["matrix4"]]],[11,"transform_vector","","",11,[[["vector3"],["self"]],["vector3"]]],[11,"transform_point","","",11,[[["self"],["point3"]],["point3"]]],[11,"concat","","",11,[[["self"],["matrix4"]],["matrix4"]]],[11,"inverse_transform","","",11,[[["self"]],[["option",["matrix4"]],["matrix4"]]]],[11,"one","","",23,[[],["decomposed"]]],[11,"look_at","","",23,[[["p"]],["decomposed"]]],[11,"transform_vector","","",23,[[["self"]]]],[11,"inverse_transform_vector","","",23,[[["self"]],["option"]]],[11,"transform_point","","",23,[[["self"],["p"]],["p"]]],[11,"concat","","",23,[[["self"],["decomposed"]],["decomposed"]]],[11,"inverse_transform","","",23,[[["self"]],[["option",["decomposed"]],["decomposed"]]]],[11,"as_mut","","",9,[[["self"]]]],[11,"as_mut","","",9,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"as_mut","","",11,[[["self"]]]],[11,"as_mut","","",11,[[["self"]]]],[11,"as_mut","","",12,[[["self"]]]],[11,"as_mut","","",12,[[["self"]]]],[11,"as_mut","","",13,[[["self"]]]],[11,"as_mut","","",14,[[["self"]]]],[11,"as_mut","","",15,[[["self"]]]],[11,"as_mut","","",16,[[["self"]]]],[11,"as_mut","","",13,[[["self"]]]],[11,"as_mut","","",14,[[["self"]]]],[11,"as_mut","","",15,[[["self"]]]],[11,"as_mut","","",16,[[["self"]]]],[11,"as_mut","","",20,[[["self"]]]],[11,"as_mut","","",21,[[["self"]]]],[11,"as_mut","","",22,[[["self"]]]],[11,"as_mut","","",20,[[["self"]]]],[11,"as_mut","","",21,[[["self"]]]],[11,"as_mut","","",22,[[["self"]]]],[11,"as_ref","","",9,[[["self"]]]],[11,"as_ref","","",9,[[["self"]]]],[11,"as_ref","","",10,[[["self"]]]],[11,"as_ref","","",10,[[["self"]]]],[11,"as_ref","","",11,[[["self"]]]],[11,"as_ref","","",11,[[["self"]]]],[11,"as_ref","","",12,[[["self"]]]],[11,"as_ref","","",12,[[["self"]]]],[11,"as_ref","","",13,[[["self"]]]],[11,"as_ref","","",14,[[["self"]]]],[11,"as_ref","","",15,[[["self"]]]],[11,"as_ref","","",16,[[["self"]]]],[11,"as_ref","","",13,[[["self"]]]],[11,"as_ref","","",14,[[["self"]]]],[11,"as_ref","","",15,[[["self"]]]],[11,"as_ref","","",16,[[["self"]]]],[11,"as_ref","","",20,[[["self"]]]],[11,"as_ref","","",21,[[["self"]]]],[11,"as_ref","","",22,[[["self"]]]],[11,"as_ref","","",20,[[["self"]]]],[11,"as_ref","","",21,[[["self"]]]],[11,"as_ref","","",22,[[["self"]]]],[11,"as_ref","","",41,[[["self"]],["matrix2"]]],[11,"as_ref","","",40,[[["self"]],["matrix3"]]],[11,"from","","",10,[[["euler"]],["matrix3"]]],[11,"from","","",11,[[["euler"]],["matrix4"]]],[11,"from","","",9,[[],["matrix2"]]],[11,"from","","",10,[[],["matrix3"]]],[11,"from","","",11,[[],["matrix4"]]],[11,"from","","Clone the elements of a 2-dimensional matrix into the…",10,[[["matrix2"]],["matrix3"]]],[11,"from","","Clone the elements of a 2-dimensional matrix into the…",11,[[["matrix2"]],["matrix4"]]],[11,"from","","Clone the elements of a 3-dimensional matrix into the…",11,[[["matrix3"]],["matrix4"]]],[11,"from","","Convert the matrix to a quaternion",12,[[["matrix3"]],["quaternion"]]],[11,"from","","",12,[[["euler"]],["quaternion"]]],[11,"from","","Convert the quaternion to a 3 x 3 rotation matrix.",10,[[["quaternion"]],["matrix3"]]],[11,"from","","Convert the quaternion to a 4 x 4 rotation matrix.",11,[[["quaternion"]],["matrix4"]]],[11,"from","","",40,[[["quaternion"]],["basis3"]]],[11,"from","","",12,[[],["quaternion"]]],[11,"from","","",12,[[],["quaternion"]]],[11,"from","","",13,[[],["vector1"]]],[11,"from","","",14,[[],["vector2"]]],[11,"from","","",15,[[],["vector3"]]],[11,"from","","",16,[[],["vector4"]]],[11,"from","","",13,[[],["vector1"]]],[11,"from","","",14,[[],["vector2"]]],[11,"from","","",15,[[],["vector3"]]],[11,"from","","",16,[[],["vector4"]]],[11,"from","","",17,[[["rad"]],["deg"]]],[11,"from","","",18,[[["deg"]],["rad"]]],[11,"from","","",19,[[["quaternion"]],[["rad"],["euler",["rad"]]]]],[11,"from","","",20,[[],["point1"]]],[11,"from","","",21,[[],["point2"]]],[11,"from","","",22,[[],["point3"]]],[11,"from","","",20,[[],["point1"]]],[11,"from","","",21,[[],["point2"]]],[11,"from","","",22,[[],["point3"]]],[11,"from","","",9,[[["basis2"]],["matrix2"]]],[11,"from","","",10,[[["basis3"]],["matrix3"]]],[11,"from","","",12,[[["basis3"]],["quaternion"]]],[11,"from","","Create a three-dimensional rotation matrix from a set of…",40,[[["euler"]],["basis3"]]],[11,"from","","",10,[[["vector2"],["decomposed",["vector2"]]],["matrix3"]]],[11,"from","","",11,[[["vector3"],["decomposed",["vector3"]]],["matrix4"]]],[11,"from","","",11,[[["perspectivefov"]],["matrix4"]]],[11,"from","","",11,[[["perspective"]],["matrix4"]]],[11,"from","","",11,[[["ortho"]],["matrix4"]]],[11,"into","","",9,[[]]],[11,"into","","",10,[[]]],[11,"into","","",11,[[]]],[11,"into","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into","","",13,[[]]],[11,"into","","",14,[[]]],[11,"into","","",15,[[]]],[11,"into","","",16,[[]]],[11,"into","","",13,[[]]],[11,"into","","",14,[[]]],[11,"into","","",15,[[]]],[11,"into","","",16,[[]]],[11,"into","","",20,[[]]],[11,"into","","",21,[[]]],[11,"into","","",22,[[]]],[11,"into","","",20,[[]]],[11,"into","","",21,[[]]],[11,"into","","",22,[[]]],[11,"clone","","",9,[[["self"]],["matrix2"]]],[11,"clone","","",10,[[["self"]],["matrix3"]]],[11,"clone","","",11,[[["self"]],["matrix4"]]],[11,"clone","","",12,[[["self"]],["quaternion"]]],[11,"clone","","",13,[[["self"]],["vector1"]]],[11,"clone","","",14,[[["self"]],["vector2"]]],[11,"clone","","",15,[[["self"]],["vector3"]]],[11,"clone","","",16,[[["self"]],["vector4"]]],[11,"clone","","",18,[[["self"]],["rad"]]],[11,"clone","","",17,[[["self"]],["deg"]]],[11,"clone","","",19,[[["self"]],["euler"]]],[11,"clone","","",20,[[["self"]],["point1"]]],[11,"clone","","",21,[[["self"]],["point2"]]],[11,"clone","","",22,[[["self"]],["point3"]]],[11,"clone","","",41,[[["self"]],["basis2"]]],[11,"clone","","",40,[[["self"]],["basis3"]]],[11,"clone","","",23,[[["self"]],["decomposed"]]],[11,"clone","","",24,[[["self"]],["perspectivefov"]]],[11,"clone","","",25,[[["self"]],["perspective"]]],[11,"clone","","",26,[[["self"]],["ortho"]]],[11,"eq","","",9,[[["self"],["matrix2"]],["bool"]]],[11,"ne","","",9,[[["self"],["matrix2"]],["bool"]]],[11,"eq","","",10,[[["self"],["matrix3"]],["bool"]]],[11,"ne","","",10,[[["self"],["matrix3"]],["bool"]]],[11,"eq","","",11,[[["self"],["matrix4"]],["bool"]]],[11,"ne","","",11,[[["self"],["matrix4"]],["bool"]]],[11,"eq","","",12,[[["self"],["quaternion"]],["bool"]]],[11,"ne","","",12,[[["self"],["quaternion"]],["bool"]]],[11,"eq","","",13,[[["self"],["vector1"]],["bool"]]],[11,"ne","","",13,[[["self"],["vector1"]],["bool"]]],[11,"eq","","",14,[[["vector2"],["self"]],["bool"]]],[11,"ne","","",14,[[["vector2"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["vector3"]],["bool"]]],[11,"ne","","",15,[[["self"],["vector3"]],["bool"]]],[11,"eq","","",16,[[["self"],["vector4"]],["bool"]]],[11,"ne","","",16,[[["self"],["vector4"]],["bool"]]],[11,"eq","","",18,[[["rad"],["self"]],["bool"]]],[11,"ne","","",18,[[["rad"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["deg"]],["bool"]]],[11,"ne","","",17,[[["self"],["deg"]],["bool"]]],[11,"eq","","",19,[[["self"],["euler"]],["bool"]]],[11,"ne","","",19,[[["self"],["euler"]],["bool"]]],[11,"eq","","",20,[[["self"],["point1"]],["bool"]]],[11,"ne","","",20,[[["self"],["point1"]],["bool"]]],[11,"eq","","",21,[[["point2"],["self"]],["bool"]]],[11,"ne","","",21,[[["point2"],["self"]],["bool"]]],[11,"eq","","",22,[[["point3"],["self"]],["bool"]]],[11,"ne","","",22,[[["point3"],["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["basis2"]],["bool"]]],[11,"ne","","",41,[[["self"],["basis2"]],["bool"]]],[11,"eq","","",40,[[["self"],["basis3"]],["bool"]]],[11,"ne","","",40,[[["self"],["basis3"]],["bool"]]],[11,"eq","","",23,[[["self"],["decomposed"]],["bool"]]],[11,"ne","","",23,[[["self"],["decomposed"]],["bool"]]],[11,"eq","","",24,[[["perspectivefov"],["self"]],["bool"]]],[11,"ne","","",24,[[["perspectivefov"],["self"]],["bool"]]],[11,"eq","","",25,[[["perspective"],["self"]],["bool"]]],[11,"ne","","",25,[[["perspective"],["self"]],["bool"]]],[11,"eq","","",26,[[["ortho"],["self"]],["bool"]]],[11,"ne","","",26,[[["ortho"],["self"]],["bool"]]],[11,"partial_cmp","","",18,[[["rad"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",18,[[["rad"],["self"]],["bool"]]],[11,"le","","",18,[[["rad"],["self"]],["bool"]]],[11,"gt","","",18,[[["rad"],["self"]],["bool"]]],[11,"ge","","",18,[[["rad"],["self"]],["bool"]]],[11,"partial_cmp","","",17,[[["self"],["deg"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",17,[[["self"],["deg"]],["bool"]]],[11,"le","","",17,[[["self"],["deg"]],["bool"]]],[11,"gt","","",17,[[["self"],["deg"]],["bool"]]],[11,"ge","","",17,[[["self"],["deg"]],["bool"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"div","","",9,[[["s"]],["matrix2"]]],[11,"div","","",10,[[["s"]],["matrix3"]]],[11,"div","","",11,[[["s"]],["matrix4"]]],[11,"div","","",12,[[["s"]],["quaternion"]]],[11,"div","","",13,[[["s"]],["vector1"]]],[11,"div","","",14,[[["s"]],["vector2"]]],[11,"div","","",15,[[["s"]],["vector3"]]],[11,"div","","",16,[[["s"]],["vector4"]]],[11,"div","","",18,[[["rad"]],["s"]]],[11,"div","","",18,[[["rad"]],["s"]]],[11,"div","","",18,[[["s"]],["rad"]]],[11,"div","","",17,[[["deg"]],["s"]]],[11,"div","","",17,[[["deg"]],["s"]]],[11,"div","","",17,[[["s"]],["deg"]]],[11,"div","","",20,[[["s"]],["point1"]]],[11,"div","","",21,[[["s"]],["point2"]]],[11,"div","","",22,[[["s"]],["point3"]]],[11,"rem","","",9,[[["s"]],["matrix2"]]],[11,"rem","","",10,[[["s"]],["matrix3"]]],[11,"rem","","",11,[[["s"]],["matrix4"]]],[11,"rem","","",12,[[["s"]],["quaternion"]]],[11,"rem","","",13,[[["s"]],["vector1"]]],[11,"rem","","",14,[[["s"]],["vector2"]]],[11,"rem","","",15,[[["s"]],["vector3"]]],[11,"rem","","",16,[[["s"]],["vector4"]]],[11,"rem","","",18,[[["rad"]],["rad"]]],[11,"rem","","",18,[[["rad"]],["rad"]]],[11,"rem","","",17,[[["deg"]],["deg"]]],[11,"rem","","",17,[[["deg"]],["deg"]]],[11,"rem","","",20,[[["s"]],["point1"]]],[11,"rem","","",21,[[["s"]],["point2"]]],[11,"rem","","",22,[[["s"]],["point3"]]],[11,"sub","","",9,[[["matrix2"]],["matrix2"]]],[11,"sub","","",9,[[["matrix2"]],["matrix2"]]],[11,"sub","","",10,[[["matrix3"]],["matrix3"]]],[11,"sub","","",10,[[["matrix3"]],["matrix3"]]],[11,"sub","","",11,[[["matrix4"]],["matrix4"]]],[11,"sub","","",11,[[["matrix4"]],["matrix4"]]],[11,"sub","","",12,[[["quaternion"]],["quaternion"]]],[11,"sub","","",12,[[["quaternion"]],["quaternion"]]],[11,"sub","","",13,[[["vector1"]],["vector1"]]],[11,"sub","","",13,[[["vector1"]],["vector1"]]],[11,"sub","","",14,[[["vector2"]],["vector2"]]],[11,"sub","","",14,[[["vector2"]],["vector2"]]],[11,"sub","","",15,[[["vector3"]],["vector3"]]],[11,"sub","","",15,[[["vector3"]],["vector3"]]],[11,"sub","","",16,[[["vector4"]],["vector4"]]],[11,"sub","","",16,[[["vector4"]],["vector4"]]],[11,"sub","","",18,[[["rad"]],["rad"]]],[11,"sub","","",18,[[["rad"]],["rad"]]],[11,"sub","","",17,[[["deg"]],["deg"]]],[11,"sub","","",17,[[["deg"]],["deg"]]],[11,"sub","","",20,[[["vector1"]],["point1"]]],[11,"sub","","",20,[[["vector1"]],["point1"]]],[11,"sub","","",20,[[["point1"]],["vector1"]]],[11,"sub","","",20,[[["point1"]],["vector1"]]],[11,"sub","","",21,[[["vector2"]],["point2"]]],[11,"sub","","",21,[[["vector2"]],["point2"]]],[11,"sub","","",21,[[["point2"]],["vector2"]]],[11,"sub","","",21,[[["point2"]],["vector2"]]],[11,"sub","","",22,[[["vector3"]],["point3"]]],[11,"sub","","",22,[[["vector3"]],["point3"]]],[11,"sub","","",22,[[["point3"]],["vector3"]]],[11,"sub","","",22,[[["point3"]],["vector3"]]],[11,"add","","",9,[[["matrix2"]],["matrix2"]]],[11,"add","","",9,[[["matrix2"]],["matrix2"]]],[11,"add","","",10,[[["matrix3"]],["matrix3"]]],[11,"add","","",10,[[["matrix3"]],["matrix3"]]],[11,"add","","",11,[[["matrix4"]],["matrix4"]]],[11,"add","","",11,[[["matrix4"]],["matrix4"]]],[11,"add","","",12,[[["quaternion"]],["quaternion"]]],[11,"add","","",12,[[["quaternion"]],["quaternion"]]],[11,"add","","",13,[[["vector1"]],["vector1"]]],[11,"add","","",13,[[["vector1"]],["vector1"]]],[11,"add","","",14,[[["vector2"]],["vector2"]]],[11,"add","","",14,[[["vector2"]],["vector2"]]],[11,"add","","",15,[[["vector3"]],["vector3"]]],[11,"add","","",15,[[["vector3"]],["vector3"]]],[11,"add","","",16,[[["vector4"]],["vector4"]]],[11,"add","","",16,[[["vector4"]],["vector4"]]],[11,"add","","",18,[[["rad"]],["rad"]]],[11,"add","","",18,[[["rad"]],["rad"]]],[11,"add","","",17,[[["deg"]],["deg"]]],[11,"add","","",17,[[["deg"]],["deg"]]],[11,"add","","",20,[[["vector1"]],["point1"]]],[11,"add","","",20,[[["vector1"]],["point1"]]],[11,"add","","",21,[[["vector2"]],["point2"]]],[11,"add","","",21,[[["vector2"]],["point2"]]],[11,"add","","",22,[[["vector3"]],["point3"]]],[11,"add","","",22,[[["vector3"]],["point3"]]],[11,"mul","","",9,[[["s"]],["matrix2"]]],[11,"mul","","",10,[[["s"]],["matrix3"]]],[11,"mul","","",11,[[["s"]],["matrix4"]]],[11,"mul","","",9,[[["vector2"]],["vector2"]]],[11,"mul","","",9,[[["vector2"]],["vector2"]]],[11,"mul","","",10,[[["vector3"]],["vector3"]]],[11,"mul","","",10,[[["vector3"]],["vector3"]]],[11,"mul","","",11,[[["vector4"]],["vector4"]]],[11,"mul","","",11,[[["vector4"]],["vector4"]]],[11,"mul","","",9,[[["matrix2"]],["matrix2"]]],[11,"mul","","",9,[[["matrix2"]],["matrix2"]]],[11,"mul","","",10,[[["matrix3"]],["matrix3"]]],[11,"mul","","",10,[[["matrix3"]],["matrix3"]]],[11,"mul","","",11,[[["matrix4"]],["matrix4"]]],[11,"mul","","",11,[[["matrix4"]],["matrix4"]]],[11,"mul","","",12,[[["s"]],["quaternion"]]],[11,"mul","","",12,[[["vector3"]],["vector3"]]],[11,"mul","","",12,[[["vector3"]],["vector3"]]],[11,"mul","","",12,[[["quaternion"]],["quaternion"]]],[11,"mul","","",12,[[["quaternion"]],["quaternion"]]],[11,"mul","","",13,[[["s"]],["vector1"]]],[11,"mul","","",14,[[["s"]],["vector2"]]],[11,"mul","","",15,[[["s"]],["vector3"]]],[11,"mul","","",16,[[["s"]],["vector4"]]],[11,"mul","","",18,[[["s"]],["rad"]]],[11,"mul","","",17,[[["s"]],["deg"]]],[11,"mul","","",20,[[["s"]],["point1"]]],[11,"mul","","",21,[[["s"]],["point2"]]],[11,"mul","","",22,[[["s"]],["point3"]]],[11,"mul","","",41,[[["basis2"]],["basis2"]]],[11,"mul","","",41,[[["basis2"]],["basis2"]]],[11,"mul","","",40,[[["basis3"]],["basis3"]]],[11,"mul","","",40,[[["basis3"]],["basis3"]]],[11,"neg","","",9,[[],["matrix2"]]],[11,"neg","","",10,[[],["matrix3"]]],[11,"neg","","",11,[[],["matrix4"]]],[11,"neg","","",12,[[],["quaternion"]]],[11,"neg","","",13,[[],["vector1"]]],[11,"neg","","",14,[[],["vector2"]]],[11,"neg","","",15,[[],["vector3"]]],[11,"neg","","",16,[[],["vector4"]]],[11,"neg","","",18,[[],["rad"]]],[11,"neg","","",17,[[],["deg"]]],[11,"add_assign","","",9,[[["self"],["matrix2"]]]],[11,"add_assign","","",10,[[["self"],["matrix3"]]]],[11,"add_assign","","",11,[[["matrix4"],["self"]]]],[11,"add_assign","","",12,[[["self"],["quaternion"]]]],[11,"add_assign","","",13,[[["self"],["vector1"]]]],[11,"add_assign","","",14,[[["vector2"],["self"]]]],[11,"add_assign","","",15,[[["vector3"],["self"]]]],[11,"add_assign","","",16,[[["self"],["vector4"]]]],[11,"add_assign","","",18,[[["self"],["rad"]]]],[11,"add_assign","","",17,[[["deg"],["self"]]]],[11,"add_assign","","",20,[[["self"],["vector1"]]]],[11,"add_assign","","",21,[[["vector2"],["self"]]]],[11,"add_assign","","",22,[[["vector3"],["self"]]]],[11,"sub_assign","","",9,[[["self"],["matrix2"]]]],[11,"sub_assign","","",10,[[["self"],["matrix3"]]]],[11,"sub_assign","","",11,[[["matrix4"],["self"]]]],[11,"sub_assign","","",12,[[["self"],["quaternion"]]]],[11,"sub_assign","","",13,[[["self"],["vector1"]]]],[11,"sub_assign","","",14,[[["vector2"],["self"]]]],[11,"sub_assign","","",15,[[["vector3"],["self"]]]],[11,"sub_assign","","",16,[[["self"],["vector4"]]]],[11,"sub_assign","","",18,[[["self"],["rad"]]]],[11,"sub_assign","","",17,[[["deg"],["self"]]]],[11,"sub_assign","","",20,[[["self"],["vector1"]]]],[11,"sub_assign","","",21,[[["vector2"],["self"]]]],[11,"sub_assign","","",22,[[["vector3"],["self"]]]],[11,"mul_assign","","",9,[[["self"],["s"]]]],[11,"mul_assign","","",10,[[["self"],["s"]]]],[11,"mul_assign","","",11,[[["self"],["s"]]]],[11,"mul_assign","","",12,[[["self"],["s"]]]],[11,"mul_assign","","",13,[[["self"],["s"]]]],[11,"mul_assign","","",14,[[["self"],["s"]]]],[11,"mul_assign","","",15,[[["self"],["s"]]]],[11,"mul_assign","","",16,[[["self"],["s"]]]],[11,"mul_assign","","",18,[[["self"],["s"]]]],[11,"mul_assign","","",17,[[["self"],["s"]]]],[11,"mul_assign","","",20,[[["self"],["s"]]]],[11,"mul_assign","","",21,[[["self"],["s"]]]],[11,"mul_assign","","",22,[[["self"],["s"]]]],[11,"div_assign","","",9,[[["self"],["s"]]]],[11,"div_assign","","",10,[[["self"],["s"]]]],[11,"div_assign","","",11,[[["self"],["s"]]]],[11,"div_assign","","",12,[[["self"],["s"]]]],[11,"div_assign","","",13,[[["self"],["s"]]]],[11,"div_assign","","",14,[[["self"],["s"]]]],[11,"div_assign","","",15,[[["self"],["s"]]]],[11,"div_assign","","",16,[[["self"],["s"]]]],[11,"div_assign","","",18,[[["self"],["s"]]]],[11,"div_assign","","",17,[[["self"],["s"]]]],[11,"div_assign","","",20,[[["self"],["s"]]]],[11,"div_assign","","",21,[[["self"],["s"]]]],[11,"div_assign","","",22,[[["self"],["s"]]]],[11,"rem_assign","","",9,[[["self"],["s"]]]],[11,"rem_assign","","",10,[[["self"],["s"]]]],[11,"rem_assign","","",11,[[["self"],["s"]]]],[11,"rem_assign","","",12,[[["self"],["s"]]]],[11,"rem_assign","","",13,[[["self"],["s"]]]],[11,"rem_assign","","",14,[[["self"],["s"]]]],[11,"rem_assign","","",15,[[["self"],["s"]]]],[11,"rem_assign","","",16,[[["self"],["s"]]]],[11,"rem_assign","","",18,[[["self"],["rad"]]]],[11,"rem_assign","","",17,[[["deg"],["self"]]]],[11,"rem_assign","","",20,[[["self"],["s"]]]],[11,"rem_assign","","",21,[[["self"],["s"]]]],[11,"rem_assign","","",22,[[["self"],["s"]]]],[11,"index","","",9,[[["self"],["usize"]],["vector2"]]],[11,"index","","",10,[[["self"],["usize"]],["vector3"]]],[11,"index","","",11,[[["self"],["usize"]],["vector4"]]],[11,"index","","",12,[[["self"],["usize"]],["s"]]],[11,"index","","",12,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",12,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",12,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",12,[[["rangefull"],["self"]]]],[11,"index","","",13,[[["self"],["usize"]],["s"]]],[11,"index","","",13,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",13,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",13,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",13,[[["rangefull"],["self"]]]],[11,"index","","",14,[[["self"],["usize"]],["s"]]],[11,"index","","",14,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",14,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",14,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",14,[[["rangefull"],["self"]]]],[11,"index","","",15,[[["self"],["usize"]],["s"]]],[11,"index","","",15,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",15,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",15,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",15,[[["rangefull"],["self"]]]],[11,"index","","",16,[[["self"],["usize"]],["s"]]],[11,"index","","",16,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",16,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",16,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",16,[[["rangefull"],["self"]]]],[11,"index","","",20,[[["self"],["usize"]],["s"]]],[11,"index","","",20,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",20,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",20,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",20,[[["rangefull"],["self"]]]],[11,"index","","",21,[[["self"],["usize"]],["s"]]],[11,"index","","",21,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",21,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",21,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",21,[[["rangefull"],["self"]]]],[11,"index","","",22,[[["self"],["usize"]],["s"]]],[11,"index","","",22,[[["range",["usize"]],["self"],["usize"]]]],[11,"index","","",22,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",22,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",22,[[["rangefull"],["self"]]]],[11,"index_mut","","",9,[[["self"],["usize"]],["vector2"]]],[11,"index_mut","","",10,[[["self"],["usize"]],["vector3"]]],[11,"index_mut","","",11,[[["self"],["usize"]],["vector4"]]],[11,"index_mut","","",12,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",12,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",12,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",12,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",12,[[["self"],["rangefull"]]]],[11,"index_mut","","",13,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",13,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",13,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",13,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",13,[[["self"],["rangefull"]]]],[11,"index_mut","","",14,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",14,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",14,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",14,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",14,[[["self"],["rangefull"]]]],[11,"index_mut","","",15,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",15,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",15,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",15,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",15,[[["self"],["rangefull"]]]],[11,"index_mut","","",16,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",16,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",16,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["rangefull"]]]],[11,"index_mut","","",20,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",20,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",20,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",20,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",20,[[["self"],["rangefull"]]]],[11,"index_mut","","",21,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",21,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",21,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",21,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",21,[[["self"],["rangefull"]]]],[11,"index_mut","","",22,[[["self"],["usize"]],["s"]]],[11,"index_mut","","",22,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",22,[[["self"],["usize"],["rangeto",["usize"]]]]],[11,"index_mut","","",22,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",22,[[["self"],["rangefull"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"product","","",9,[[["iterator"]],["matrix2"]]],[11,"product","","",9,[[["iterator"]],["matrix2"]]],[11,"product","","",10,[[["iterator"]],["matrix3"]]],[11,"product","","",10,[[["iterator"]],["matrix3"]]],[11,"product","","",11,[[["iterator"]],["matrix4"]]],[11,"product","","",11,[[["iterator"]],["matrix4"]]],[11,"product","","",12,[[["iterator"]],["quaternion"]]],[11,"product","","",12,[[["iterator"]],["quaternion"]]],[11,"product","","",41,[[["iterator"]],["basis2"]]],[11,"product","","",41,[[["iterator"]],["basis2"]]],[11,"product","","",40,[[["iterator"]],["basis3"]]],[11,"product","","",40,[[["iterator"]],["basis3"]]],[11,"sum","","",9,[[["iterator"]],["matrix2"]]],[11,"sum","","",9,[[["iterator"]],["matrix2"]]],[11,"sum","","",10,[[["iterator"]],["matrix3"]]],[11,"sum","","",10,[[["iterator"]],["matrix3"]]],[11,"sum","","",11,[[["iterator"]],["matrix4"]]],[11,"sum","","",11,[[["iterator"]],["matrix4"]]],[11,"sum","","",12,[[["iterator"]],["quaternion"]]],[11,"sum","","",12,[[["iterator"]],["quaternion"]]],[11,"sum","","",13,[[["iterator"]],["vector1"]]],[11,"sum","","",13,[[["iterator"]],["vector1"]]],[11,"sum","","",14,[[["iterator"]],["vector2"]]],[11,"sum","","",14,[[["iterator"]],["vector2"]]],[11,"sum","","",15,[[["iterator"]],["vector3"]]],[11,"sum","","",15,[[["iterator"]],["vector3"]]],[11,"sum","","",16,[[["iterator"]],["vector4"]]],[11,"sum","","",16,[[["iterator"]],["vector4"]]],[11,"sum","","",18,[[["iterator"]],["rad"]]],[11,"sum","","",18,[[["iterator"]],["rad"]]],[11,"sum","","",17,[[["iterator"]],["deg"]]],[11,"sum","","",17,[[["iterator"]],["deg"]]],[11,"default_epsilon","","",9,[[]]],[11,"abs_diff_eq","","",9,[[["self"]],["bool"]]],[11,"default_epsilon","","",10,[[]]],[11,"abs_diff_eq","","",10,[[["self"]],["bool"]]],[11,"default_epsilon","","",11,[[]]],[11,"abs_diff_eq","","",11,[[["self"]],["bool"]]],[11,"default_epsilon","","",12,[[]]],[11,"abs_diff_eq","","",12,[[["self"]],["bool"]]],[11,"default_epsilon","","",13,[[]]],[11,"abs_diff_eq","","",13,[[["self"]],["bool"]]],[11,"default_epsilon","","",14,[[]]],[11,"abs_diff_eq","","",14,[[["self"]],["bool"]]],[11,"default_epsilon","","",15,[[]]],[11,"abs_diff_eq","","",15,[[["self"]],["bool"]]],[11,"default_epsilon","","",16,[[]]],[11,"abs_diff_eq","","",16,[[["self"]],["bool"]]],[11,"default_epsilon","","",18,[[]]],[11,"abs_diff_eq","","",18,[[["self"]],["bool"]]],[11,"default_epsilon","","",17,[[]]],[11,"abs_diff_eq","","",17,[[["self"]],["bool"]]],[11,"default_epsilon","","",19,[[]]],[11,"abs_diff_eq","","",19,[[["self"]],["bool"]]],[11,"default_epsilon","","",20,[[]]],[11,"abs_diff_eq","","",20,[[["self"]],["bool"]]],[11,"default_epsilon","","",21,[[]]],[11,"abs_diff_eq","","",21,[[["self"]],["bool"]]],[11,"default_epsilon","","",22,[[]]],[11,"abs_diff_eq","","",22,[[["self"]],["bool"]]],[11,"default_epsilon","","",41,[[]]],[11,"abs_diff_eq","","",41,[[["self"]],["bool"]]],[11,"default_epsilon","","",40,[[]]],[11,"abs_diff_eq","","",40,[[["self"]],["bool"]]],[11,"default_epsilon","","",23,[[],["e"]]],[11,"abs_diff_eq","","",23,[[["self"],["e"]],["bool"]]],[11,"default_max_relative","","",9,[[]]],[11,"relative_eq","","",9,[[["self"]],["bool"]]],[11,"default_max_relative","","",10,[[]]],[11,"relative_eq","","",10,[[["self"]],["bool"]]],[11,"default_max_relative","","",11,[[]]],[11,"relative_eq","","",11,[[["self"]],["bool"]]],[11,"default_max_relative","","",12,[[]]],[11,"relative_eq","","",12,[[["self"]],["bool"]]],[11,"default_max_relative","","",13,[[]]],[11,"relative_eq","","",13,[[["self"]],["bool"]]],[11,"default_max_relative","","",14,[[]]],[11,"relative_eq","","",14,[[["self"]],["bool"]]],[11,"default_max_relative","","",15,[[]]],[11,"relative_eq","","",15,[[["self"]],["bool"]]],[11,"default_max_relative","","",16,[[]]],[11,"relative_eq","","",16,[[["self"]],["bool"]]],[11,"default_max_relative","","",18,[[]]],[11,"relative_eq","","",18,[[["self"]],["bool"]]],[11,"default_max_relative","","",17,[[]]],[11,"relative_eq","","",17,[[["self"]],["bool"]]],[11,"default_max_relative","","",19,[[]]],[11,"relative_eq","","",19,[[["self"]],["bool"]]],[11,"default_max_relative","","",20,[[]]],[11,"relative_eq","","",20,[[["self"]],["bool"]]],[11,"default_max_relative","","",21,[[]]],[11,"relative_eq","","",21,[[["self"]],["bool"]]],[11,"default_max_relative","","",22,[[]]],[11,"relative_eq","","",22,[[["self"]],["bool"]]],[11,"default_max_relative","","",41,[[]]],[11,"relative_eq","","",41,[[["self"]],["bool"]]],[11,"default_max_relative","","",40,[[]]],[11,"relative_eq","","",40,[[["self"]],["bool"]]],[11,"default_max_relative","","",23,[[],["e"]]],[11,"relative_eq","","",23,[[["self"],["e"]],["bool"]]],[11,"default_max_ulps","","",9,[[],["u32"]]],[11,"ulps_eq","","",9,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",10,[[],["u32"]]],[11,"ulps_eq","","",10,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",11,[[],["u32"]]],[11,"ulps_eq","","",11,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",12,[[],["u32"]]],[11,"ulps_eq","","",12,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",13,[[],["u32"]]],[11,"ulps_eq","","",13,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",14,[[],["u32"]]],[11,"ulps_eq","","",14,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",15,[[],["u32"]]],[11,"ulps_eq","","",15,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",16,[[],["u32"]]],[11,"ulps_eq","","",16,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",18,[[],["u32"]]],[11,"ulps_eq","","",18,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",17,[[],["u32"]]],[11,"ulps_eq","","",17,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",19,[[],["u32"]]],[11,"ulps_eq","","",19,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",20,[[],["u32"]]],[11,"ulps_eq","","",20,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",21,[[],["u32"]]],[11,"ulps_eq","","",21,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",22,[[],["u32"]]],[11,"ulps_eq","","",22,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",41,[[],["u32"]]],[11,"ulps_eq","","",41,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",40,[[],["u32"]]],[11,"ulps_eq","","",40,[[["u32"],["self"]],["bool"]]],[11,"default_max_ulps","","",23,[[],["u32"]]],[11,"ulps_eq","","",23,[[["u32"],["self"],["e"]],["bool"]]],[11,"min_value","","",13,[[],["vector1"]]],[11,"max_value","","",13,[[],["vector1"]]],[11,"min_value","","",14,[[],["vector2"]]],[11,"max_value","","",14,[[],["vector2"]]],[11,"min_value","","",15,[[],["vector3"]]],[11,"max_value","","",15,[[],["vector3"]]],[11,"min_value","","",16,[[],["vector4"]]],[11,"max_value","","",16,[[],["vector4"]]],[11,"min_value","","",18,[[],["rad"]]],[11,"max_value","","",18,[[],["rad"]]],[11,"min_value","","",17,[[],["deg"]]],[11,"max_value","","",17,[[],["deg"]]],[11,"min_value","","",20,[[],["point1"]]],[11,"max_value","","",20,[[],["point1"]]],[11,"min_value","","",21,[[],["point2"]]],[11,"max_value","","",21,[[],["point2"]]],[11,"min_value","","",22,[[],["point3"]]],[11,"max_value","","",22,[[],["point3"]]],[11,"zero","","",9,[[],["matrix2"]]],[11,"is_zero","","",9,[[["self"]],["bool"]]],[11,"zero","","",10,[[],["matrix3"]]],[11,"is_zero","","",10,[[["self"]],["bool"]]],[11,"zero","","",11,[[],["matrix4"]]],[11,"is_zero","","",11,[[["self"]],["bool"]]],[11,"zero","","",12,[[],["quaternion"]]],[11,"is_zero","","",12,[[["self"]],["bool"]]],[11,"zero","","",13,[[],["vector1"]]],[11,"is_zero","","",13,[[["self"]],["bool"]]],[11,"zero","","",14,[[],["vector2"]]],[11,"is_zero","","",14,[[["self"]],["bool"]]],[11,"zero","","",15,[[],["vector3"]]],[11,"is_zero","","",15,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["vector4"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",18,[[],["rad"]]],[11,"is_zero","","",18,[[["self"]],["bool"]]],[11,"zero","","",17,[[],["deg"]]],[11,"is_zero","","",17,[[["self"]],["bool"]]],[11,"one","","",9,[[],["matrix2"]]],[11,"one","","",10,[[],["matrix3"]]],[11,"one","","",11,[[],["matrix4"]]],[11,"one","","",12,[[],["quaternion"]]],[11,"one","","",41,[[],["basis2"]]],[11,"one","","",40,[[],["basis3"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",0,[[],["absdiff"]]],[11,"eq","","Peform the equality comparison",0,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",0,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",1,[[],["relative"]]],[11,"max_relative","","Replace the maximum relative value with the one specified.",1,[[],["relative"]]],[11,"eq","","Peform the equality comparison",1,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",1,[[["b"],["a"]],["bool"]]],[11,"epsilon","","Replace the epsilon value with the one specified.",2,[[],["ulps"]]],[11,"max_ulps","","Replace the max ulps value with the one specified.",2,[[["u32"]],["ulps"]]],[11,"eq","","Peform the equality comparison",2,[[["b"],["a"]],["bool"]]],[11,"ne","","Peform the inequality comparison",2,[[["b"],["a"]],["bool"]]]],"p":[[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"AbsDiffEq"],[8,"RelativeEq"],[8,"UlpsEq"],[8,"Bounded"],[8,"One"],[8,"Zero"],[3,"Matrix2"],[3,"Matrix3"],[3,"Matrix4"],[3,"Quaternion"],[3,"Vector1"],[3,"Vector2"],[3,"Vector3"],[3,"Vector4"],[3,"Deg"],[3,"Rad"],[3,"Euler"],[3,"Point1"],[3,"Point2"],[3,"Point3"],[3,"Decomposed"],[3,"PerspectiveFov"],[3,"Perspective"],[3,"Ortho"],[8,"Array"],[8,"ElementWise"],[8,"VectorSpace"],[8,"MetricSpace"],[8,"InnerSpace"],[8,"EuclideanSpace"],[8,"Matrix"],[8,"SquareMatrix"],[8,"Angle"],[8,"Rotation"],[8,"Rotation2"],[8,"Rotation3"],[8,"Transform"],[3,"Basis3"],[3,"Basis2"]]};
searchIndex["const_random"] = {"doc":"","i":[[14,"const_random","const_random","Random constants Allows you to insert random constants…",null,null]],"p":[]};
searchIndex["const_random_macro"] = {"doc":"","i":[[24,"proc_macro_hack_const_random","const_random_macro","",null,null]],"p":[]};
searchIndex["crossbeam_deque"] = {"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Injector","","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker"],["self"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker"],["self"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"eq","","",0,[[["steal"],["self"]],["bool"]]],[11,"ne","","",0,[[["steal"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[],["bool"]]],[5,"pin","","Pins the current thread.",null,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["guard"],["self"],["ordering"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["self"],["pointer"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["guard"],["self"],["pointer"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["shared"],["compareandseterror"],["result",["shared","compareandseterror"]]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["shared"],["compareandseterror"],["result",["shared","compareandseterror"]]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["ordering"],["usize"],["guard"],["self"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["ordering"],["usize"],["guard"],["self"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["ordering"],["usize"],["guard"],["self"]],["shared"]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],[["option"],["t"]]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],[["collector"],["option",["collector"]]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"from","","",1,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_queue"] = {"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push","","Attempts to push an element into the queue.",1,[[["self"],["t"]],[["result",["pusherror"]],["pusherror"]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",1,[[["self"]],["usize"]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push","","Pushes an element into the queue.",2,[[["self"],["t"]]]],[11,"pop","","Pops an element from the queue.",2,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",2,[[["self"]],["usize"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",3,[[["self"]],["poperror"]]],[11,"clone","","",0,[[["self"]],["pusherror"]]],[11,"default","","",2,[[],["segqueue"]]],[11,"eq","","",3,[[["poperror"],["self"]],["bool"]]],[11,"eq","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"ne","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"] = {"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[["self"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the inner value.",2,[[],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],[["t"],["lockresult"]]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],[["shardedlockreadguard"],["trylockresult",["shardedlockreadguard"]]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],[["shardedlockreadguard"],["lockresult",["shardedlockreadguard"]]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[["trylockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],[["lockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["f"]],[["scopedjoinhandle"],["result",["scopedjoinhandle"]]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[],["t"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","crossbeam_utils::sync","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"from","crossbeam_utils","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","crossbeam_utils","",2,[[["self"],["__h"]]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["derivative"] = {"doc":"","i":[[24,"Derivative","derivative","",null,null]],"p":[]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["path"]]],[11,"as_mut","","",0,[[["self"]],["osstr"]]],[11,"as_mut","","",0,[[["self"]],["cstr"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"as_ref","","",0,[[["self"]],["osstr"]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"into","","",0,[[],["result"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"fill_buf","","",0,[[["self"]],["result"]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"read","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_to_end","","",0,[[["self"],["vec"]],[["result",["usize"]],["usize"]]]],[11,"write","","",0,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"flush","","",0,[[["self"]],["result"]]]],"p":[[4,"Either"]]};
searchIndex["euclid"] = {"doc":"A collection of strongly typed math tools for computer…","i":[[3,"TypedBox2D","euclid","An axis aligned rectangle represented by its minimum and…",null,null],[12,"min","","",0,null],[12,"max","","",0,null],[3,"Length","","A one-dimensional distance, with value represented by `T`…",null,null],[12,"0","","",1,null],[3,"TypedScale","","A scaling factor between two different units of measurement.",null,null],[12,"0","","",2,null],[3,"TypedTransform2D","","A 2d transform stored as a 3 by 2 matrix in row-major…",null,null],[12,"m11","","",3,null],[12,"m12","","",3,null],[12,"m21","","",3,null],[12,"m22","","",3,null],[12,"m31","","",3,null],[12,"m32","","",3,null],[3,"TypedTransform3D","","A 3d transform stored as a 4 by 4 matrix in row-major…",null,null],[12,"m11","","",4,null],[12,"m12","","",4,null],[12,"m13","","",4,null],[12,"m14","","",4,null],[12,"m21","","",4,null],[12,"m22","","",4,null],[12,"m23","","",4,null],[12,"m24","","",4,null],[12,"m31","","",4,null],[12,"m32","","",4,null],[12,"m33","","",4,null],[12,"m34","","",4,null],[12,"m41","","",4,null],[12,"m42","","",4,null],[12,"m43","","",4,null],[12,"m44","","",4,null],[3,"TypedPoint2D","","A 2d Point tagged with a unit.",null,null],[12,"x","","",5,null],[12,"y","","",5,null],[3,"TypedPoint3D","","A 3d Point tagged with a unit.",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"z","","",6,null],[3,"TypedVector2D","","A 2d Vector tagged with a unit.",null,null],[12,"x","","",7,null],[12,"y","","",7,null],[3,"TypedVector3D","","A 3d Vector tagged with a unit.",null,null],[12,"x","","",8,null],[12,"y","","",8,null],[12,"z","","",8,null],[3,"BoolVector2D","","",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[3,"BoolVector3D","","",null,null],[12,"x","","",10,null],[12,"y","","",10,null],[12,"z","","",10,null],[3,"HomogeneousVector","","Homogeneous vector in 3D space.",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"z","","",11,null],[12,"w","","",11,null],[3,"TypedRect","","A 2d Rectangle optionally tagged with a unit.",null,null],[12,"origin","","",12,null],[12,"size","","",12,null],[3,"TypedRigidTransform3D","","A rigid transformation. All lengths are preserved under…",null,null],[12,"rotation","","",13,null],[12,"translation","","",13,null],[3,"TypedBox3D","","An axis aligned 3D box represented by its minimum and…",null,null],[12,"min","","",14,null],[12,"max","","",14,null],[3,"TypedTranslation2D","","A 2d transformation from a space to another that can only…",null,null],[12,"x","","",15,null],[12,"y","","",15,null],[3,"TypedTranslation3D","","A 3d transformation from a space to another that can only…",null,null],[12,"x","","",16,null],[12,"y","","",16,null],[12,"z","","",16,null],[3,"Angle","","An angle in radians",null,null],[12,"radians","","",17,null],[3,"TypedRotation2D","","A transform that can represent rotations in 2d,…",null,null],[12,"angle","","",18,null],[3,"TypedRotation3D","","A transform that can represent rotations in 3d,…",null,null],[12,"i","","Component multiplied by the imaginary number `i`.",19,null],[12,"j","","Component multiplied by the imaginary number `j`.",19,null],[12,"k","","Component multiplied by the imaginary number `k`.",19,null],[12,"r","","The real part.",19,null],[3,"TypedSideOffsets2D","","A group of 2D side offsets, which correspond to…",null,null],[12,"top","","",20,null],[12,"right","","",20,null],[12,"bottom","","",20,null],[12,"left","","",20,null],[3,"TypedSize2D","","A 2d size tagged with a unit.",null,null],[12,"width","","",21,null],[12,"height","","",21,null],[3,"UnknownUnit","","The default unit.",null,null],[3,"Radians","","An angle in radians",null,null],[12,"radians","","",17,null],[5,"point2","","",null,[[["copy"]],[["typedpoint2d"],["copy"]]]],[5,"point3","","",null,[[["copy"]],[["copy"],["typedpoint3d"]]]],[5,"vec2","","Convenience constructor.",null,[[["t"]],["typedvector2d"]]],[5,"vec3","","Convenience constructor.",null,[[["t"]],["typedvector3d"]]],[5,"bvec2","","",null,[[["bool"]],["boolvector2d"]]],[5,"bvec3","","",null,[[["bool"]],["boolvector3d"]]],[5,"rect","","Shorthand for `TypedRect::new(TypedPoint2D::new(x, y),…",null,[[["copy"]],[["typedrect"],["copy"]]]],[5,"box3d","","Shorthand for `TypedBox3D::new(TypedPoint3D::new(x1, y1,…",null,[[["copy"]],[["copy"],["typedbox3d"]]]],[5,"size2","","Shorthand for `TypedSize2D::new(w, h)`.",null,[[["t"]],["typedsize2d"]]],[0,"approxeq","","",null,null],[8,"ApproxEq","euclid::approxeq","Trait for testing approximate equality",null,null],[10,"approx_epsilon","","",22,[[],["eps"]]],[10,"approx_eq","","",22,[[["self"]],["bool"]]],[10,"approx_eq_eps","","",22,[[["eps"],["self"]],["bool"]]],[0,"approxord","euclid","",null,null],[5,"min","euclid::approxord","Utilities for testing approximate ordering - especially…",null,[[["partialord"]],["partialord"]]],[5,"max","","",null,[[["partialord"]],["partialord"]]],[11,"new","euclid","Constructor.",0,[[["typedpoint2d"]],["self"]]],[11,"from_size","","Creates a Box2D of the given size, at offset zero.",0,[[["typedsize2d"]],["self"]]],[11,"is_negative","","Returns true if the box has a negative area.",0,[[["self"]],["bool"]]],[11,"is_empty_or_negative","","Returns true if the size is zero or negative.",0,[[["self"]],["bool"]]],[11,"intersects","","Returns true if the two boxes intersect.",0,[[["self"]],["bool"]]],[11,"intersection","","Computes the intersection of two boxes.",0,[[["self"]],["self"]]],[11,"try_intersection","","Computes the intersection of two boxes, returning `None`…",0,[[["self"]],["option"]]],[11,"translate","","Returns the same box, translated by a vector.",0,[[["typedvector2d"],["self"]],["self"]]],[11,"contains","","Returns true if this box contains the point. Points are…",0,[[["typedpoint2d"],["self"]],["bool"]]],[11,"contains_box","","Returns true if this box contains the interior of the…",0,[[["self"]],["bool"]]],[11,"size","","",0,[[["self"]],["typedsize2d"]]],[11,"to_rect","","",0,[[["self"]],["typedrect"]]],[11,"inflate","","Inflates the box by the specified sizes on each side…",0,[[["self"],["t"]],["self"]]],[11,"inner_box","","Calculate the size and position of an inner box.",0,[[["self"],["typedsideoffsets2d"]],["self"]]],[11,"outer_box","","Calculate the b and position of an outer box.",0,[[["self"],["typedsideoffsets2d"]],["self"]]],[11,"from_points","","Returns the smallest box containing all of the provided…",0,[[["i"]],["self"]]],[11,"lerp","","Linearly interpolate between this box and another box.",0,[[["self"],["t"]],["self"]]],[11,"center","","",0,[[["self"]],["typedpoint2d"]]],[11,"union","","",0,[[["self"]],["self"]]],[11,"scale","","",0,[[["copy"],["self"]],["self"]]],[11,"area","","",0,[[["self"]],["t"]]],[11,"zero","","Constructor, setting all sides to zero.",0,[[],["self"]]],[11,"is_empty","","Returns true if the size is zero.",0,[[["self"]],["bool"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",0,[[["self"]],["box2d"]]],[11,"from_untyped","","Tag a unitless value with units.",0,[[["box2d"]],["typedbox2d"]]],[11,"cast","","Cast from one numeric representation to another,…",0,[[["self"]],[["typedbox2d"],["numcast"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",0,[[["self"]],[["typedbox2d"],["option",["typedbox2d"]]]]],[11,"round","","Return a box with edges rounded to integer coordinates,…",0,[[["self"]],["self"]]],[11,"round_in","","Return a box with faces/edges rounded to integer…",0,[[["self"]],["self"]]],[11,"round_out","","Return a box with faces/edges rounded to integer…",0,[[["self"]],["self"]]],[11,"to_f32","","Cast into an `f32` box.",0,[[["self"]],[["f32"],["typedbox2d",["f32"]]]]],[11,"to_f64","","Cast into an `f64` box.",0,[[["self"]],[["typedbox2d",["f64"]],["f64"]]]],[11,"to_usize","","Cast into an `usize` box, truncating decimals if any.",0,[[["self"]],[["typedbox2d",["usize"]],["usize"]]]],[11,"to_u32","","Cast into an `u32` box, truncating decimals if any.",0,[[["self"]],[["typedbox2d",["u32"]],["u32"]]]],[11,"to_i32","","Cast into an `i32` box, truncating decimals if any.",0,[[["self"]],[["typedbox2d",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an `i64` box, truncating decimals if any.",0,[[["self"]],[["i64"],["typedbox2d",["i64"]]]]],[11,"new","","Constructor taking scalar values directly.",11,[[["t"]],["self"]]],[11,"to_point2d","","Convert into Cartesian 2D point.",11,[[["self"]],[["typedpoint2d"],["option",["typedpoint2d"]]]]],[11,"to_point3d","","Convert into Cartesian 3D point.",11,[[["self"]],[["option",["typedpoint3d"]],["typedpoint3d"]]]],[0,"num","","A one-dimensional length, tagged with its units.",null,null],[8,"Zero","euclid::num","",null,null],[10,"zero","","",23,[[],["self"]]],[8,"One","","",null,null],[10,"one","","",24,[[],["self"]]],[8,"Round","","",null,null],[10,"round","","",25,[[],["self"]]],[8,"Floor","","",null,null],[10,"floor","","",26,[[],["self"]]],[8,"Ceil","","",null,null],[10,"ceil","","",27,[[],["self"]]],[11,"new","euclid","",1,[[["t"]],["self"]]],[11,"get","","",1,[[["self"]],["t"]]],[11,"cast","","Cast from one numeric representation to another,…",1,[[["self"]],[["numcast"],["length"],["clone"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",1,[[["self"]],[["option",["length"]],["length"]]]],[11,"lerp","","Linearly interpolate between this length and another length.",1,[[["self"],["t"]],["self"]]],[11,"origin","","Constructor, setting all components to zero.",5,[[],["self"]]],[11,"zero","","",5,[[],["self"]]],[11,"to_3d","","Convert into a 3d point.",5,[[["self"]],["typedpoint3d"]]],[11,"new","","Constructor taking scalar values directly.",5,[[["t"]],["self"]]],[11,"from_lengths","","Constructor taking properly typed Lengths instead of…",5,[[["length"]],["self"]]],[11,"extend","","Create a 3d point from this one, using the specified z…",5,[[["self"],["t"]],["typedpoint3d"]]],[11,"to_vector","","Cast this point into a vector.",5,[[["self"]],["typedvector2d"]]],[11,"yx","","Swap x and y.",5,[[["self"]],["self"]]],[11,"x_typed","","Returns self.x as a Length carrying the unit.",5,[[["self"]],["length"]]],[11,"y_typed","","Returns self.y as a Length carrying the unit.",5,[[["self"]],["length"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",5,[[["self"]],["point2d"]]],[11,"from_untyped","","Tag a unitless value with units.",5,[[["point2d"]],["self"]]],[11,"to_array","","",5,[[["self"]]]],[11,"to_tuple","","",5,[[["self"]]]],[11,"add_size","","",5,[[["self"],["typedsize2d"]],["self"]]],[11,"min","","",5,[[],["self"]]],[11,"max","","",5,[[],["self"]]],[11,"clamp","","",5,[[["self"]],["self"]]],[11,"round","","Rounds each component to the nearest integer value.",5,[[["self"]],["self"]]],[11,"ceil","","Rounds each component to the smallest integer equal or…",5,[[["self"]],["self"]]],[11,"floor","","Rounds each component to the biggest integer equal or…",5,[[["self"]],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",5,[[["self"]],[["typedpoint2d"],["numcast"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",5,[[["self"]],[["option",["typedpoint2d"]],["typedpoint2d"]]]],[11,"to_f32","","Cast into an `f32` point.",5,[[["self"]],[["f32"],["typedpoint2d",["f32"]]]]],[11,"to_f64","","Cast into an `f64` point.",5,[[["self"]],[["f64"],["typedpoint2d",["f64"]]]]],[11,"to_usize","","Cast into an `usize` point, truncating decimals if any.",5,[[["self"]],[["usize"],["typedpoint2d",["usize"]]]]],[11,"to_u32","","Cast into an `u32` point, truncating decimals if any.",5,[[["self"]],[["u32"],["typedpoint2d",["u32"]]]]],[11,"to_i32","","Cast into an i32 point, truncating decimals if any.",5,[[["self"]],[["i32"],["typedpoint2d",["i32"]]]]],[11,"to_i64","","Cast into an i64 point, truncating decimals if any.",5,[[["self"]],[["i64"],["typedpoint2d",["i64"]]]]],[11,"lerp","","Linearly interpolate between this point and another point.",5,[[["self"],["t"]],["self"]]],[11,"origin","","Constructor, setting all components to zero.",6,[[],["self"]]],[11,"zero","","",6,[[],["self"]]],[11,"to_array_4d","","",6,[[["self"]]]],[11,"to_tuple_4d","","",6,[[["self"]]]],[11,"lerp","","Linearly interpolate between this point and another point.",6,[[["self"],["t"]],["self"]]],[11,"new","","Constructor taking scalar values directly.",6,[[["t"]],["self"]]],[11,"from_lengths","","Constructor taking properly typed Lengths instead of…",6,[[["length"]],["self"]]],[11,"to_vector","","Cast this point into a vector.",6,[[["self"]],["typedvector3d"]]],[11,"xy","","Returns a 2d point using this point's x and y coordinates",6,[[["self"]],["typedpoint2d"]]],[11,"xz","","Returns a 2d point using this point's x and z coordinates",6,[[["self"]],["typedpoint2d"]]],[11,"yz","","Returns a 2d point using this point's x and z coordinates",6,[[["self"]],["typedpoint2d"]]],[11,"x_typed","","Returns self.x as a Length carrying the unit.",6,[[["self"]],["length"]]],[11,"y_typed","","Returns self.y as a Length carrying the unit.",6,[[["self"]],["length"]]],[11,"z_typed","","Returns self.z as a Length carrying the unit.",6,[[["self"]],["length"]]],[11,"to_array","","",6,[[["self"]]]],[11,"to_tuple","","",6,[[["self"]]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",6,[[["self"]],["point3d"]]],[11,"from_untyped","","Tag a unitless value with units.",6,[[["point3d"]],["self"]]],[11,"to_2d","","Convert into a 2d point.",6,[[["self"]],["typedpoint2d"]]],[11,"add_size","","",6,[[["self"],["typedsize3d"]],["self"]]],[11,"min","","",6,[[],["self"]]],[11,"max","","",6,[[],["self"]]],[11,"clamp","","",6,[[["self"]],["self"]]],[11,"round","","Rounds each component to the nearest integer value.",6,[[["self"]],["self"]]],[11,"ceil","","Rounds each component to the smallest integer equal or…",6,[[["self"]],["self"]]],[11,"floor","","Rounds each component to the biggest integer equal or…",6,[[["self"]],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",6,[[["self"]],[["numcast"],["copy"],["typedpoint3d"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",6,[[["self"]],[["option",["typedpoint3d"]],["typedpoint3d"]]]],[11,"to_f32","","Cast into an `f32` point.",6,[[["self"]],[["f32"],["typedpoint3d",["f32"]]]]],[11,"to_f64","","Cast into an `f64` point.",6,[[["self"]],[["typedpoint3d",["f64"]],["f64"]]]],[11,"to_usize","","Cast into an `usize` point, truncating decimals if any.",6,[[["self"]],[["typedpoint3d",["usize"]],["usize"]]]],[11,"to_u32","","Cast into an `u32` point, truncating decimals if any.",6,[[["self"]],[["u32"],["typedpoint3d",["u32"]]]]],[11,"to_i32","","Cast into an `i32` point, truncating decimals if any.",6,[[["self"]],[["typedpoint3d",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an `i64` point, truncating decimals if any.",6,[[["self"]],[["i64"],["typedpoint3d",["i64"]]]]],[11,"new","","Constructor.",12,[[["typedpoint2d"],["typedsize2d"]],["self"]]],[11,"from_size","","Creates a rect of the given size, at offset zero.",12,[[["typedsize2d"]],["self"]]],[11,"intersects","","",12,[[["self"]],["bool"]]],[11,"max_x","","",12,[[["self"]],["t"]]],[11,"min_x","","",12,[[["self"]],["t"]]],[11,"max_y","","",12,[[["self"]],["t"]]],[11,"min_y","","",12,[[["self"]],["t"]]],[11,"max_x_typed","","",12,[[["self"]],["length"]]],[11,"min_x_typed","","",12,[[["self"]],["length"]]],[11,"max_y_typed","","",12,[[["self"]],["length"]]],[11,"min_y_typed","","",12,[[["self"]],["length"]]],[11,"x_range","","",12,[[["self"]],["range"]]],[11,"y_range","","",12,[[["self"]],["range"]]],[11,"intersection","","",12,[[["self"]],["option"]]],[11,"translate","","Returns the same rectangle, translated by a vector.",12,[[["typedvector2d"],["self"]],["self"]]],[11,"contains","","Returns true if this rectangle contains the point. Points…",12,[[["typedpoint2d"],["self"]],["bool"]]],[11,"contains_rect","","Returns true if this rectangle contains the interior of…",12,[[["self"]],["bool"]]],[11,"inflate","","",12,[[["self"],["t"]],["self"]]],[11,"inflate_typed","","",12,[[["length"],["self"]],["self"]]],[11,"top_right","","",12,[[["self"]],["typedpoint2d"]]],[11,"bottom_left","","",12,[[["self"]],["typedpoint2d"]]],[11,"bottom_right","","",12,[[["self"]],["typedpoint2d"]]],[11,"to_box2d","","",12,[[["self"]],["typedbox2d"]]],[11,"translate_by_size","","",12,[[["self"],["typedsize2d"]],["self"]]],[11,"inner_rect","","Calculate the size and position of an inner rectangle.",12,[[["self"],["typedsideoffsets2d"]],["self"]]],[11,"outer_rect","","Calculate the size and position of an outer rectangle.",12,[[["self"],["typedsideoffsets2d"]],["self"]]],[11,"from_points","","Returns the smallest rectangle defined by the…",12,[[["i"]],["self"]]],[11,"lerp","","Linearly interpolate between this rectangle and another…",12,[[["self"],["t"]],["self"]]],[11,"center","","",12,[[["self"]],["typedpoint2d"]]],[11,"union","","",12,[[["self"]],["self"]]],[11,"scale","","",12,[[["copy"],["self"]],["self"]]],[11,"area","","",12,[[["self"]],["t"]]],[11,"zero","","Constructor, setting all sides to zero.",12,[[],["self"]]],[11,"is_empty","","Returns true if the size is zero, regardless of the…",12,[[["self"]],["bool"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",12,[[["self"]],["rect"]]],[11,"from_untyped","","Tag a unitless value with units.",12,[[["rect"]],["typedrect"]]],[11,"cast","","Cast from one numeric representation to another,…",12,[[["self"]],[["numcast"],["typedrect"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",12,[[["self"]],[["option",["typedrect"]],["typedrect"]]]],[11,"round","","Return a rectangle with edges rounded to integer…",12,[[["self"]],["self"]]],[11,"round_in","","Return a rectangle with edges rounded to integer…",12,[[["self"]],["self"]]],[11,"round_out","","Return a rectangle with edges rounded to integer…",12,[[["self"]],["self"]]],[11,"to_f32","","Cast into an `f32` rectangle.",12,[[["self"]],[["typedrect",["f32"]],["f32"]]]],[11,"to_f64","","Cast into an `f64` rectangle.",12,[[["self"]],[["typedrect",["f64"]],["f64"]]]],[11,"to_usize","","Cast into an `usize` rectangle, truncating decimals if any.",12,[[["self"]],[["typedrect",["usize"]],["usize"]]]],[11,"to_u32","","Cast into an `u32` rectangle, truncating decimals if any.",12,[[["self"]],[["u32"],["typedrect",["u32"]]]]],[11,"to_i32","","Cast into an `i32` rectangle, truncating decimals if any.",12,[[["self"]],[["typedrect",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an `i64` rectangle, truncating decimals if any.",12,[[["self"]],[["i64"],["typedrect",["i64"]]]]],[11,"new","","Construct a new rigid transformation, where the `rotation`…",13,[[["typedvector3d"],["typedrotation3d"]],["self"]]],[11,"identity","","Construct an identity transform",13,[[],["self"]]],[11,"new_from_reversed","","Construct a new rigid transformation, where the…",13,[[["typedvector3d"],["typedrotation3d"]],["self"]]],[11,"from_rotation","","",13,[[["typedrotation3d"]],["self"]]],[11,"from_translation","","",13,[[["typedvector3d"]],["self"]]],[11,"decompose_reversed","","Decompose this into a translation and an rotation to be…",13,[[["self"]]]],[11,"post_mul","","Returns the multiplication of the two transforms such that…",13,[[["typedrigidtransform3d"],["self"]],["typedrigidtransform3d"]]],[11,"pre_mul","","Returns the multiplication of the two transforms such that…",13,[[["self"],["typedrigidtransform3d"]],["typedrigidtransform3d"]]],[11,"inverse","","Inverts the transformation",13,[[["self"]],["typedrigidtransform3d"]]],[11,"to_transform","","",13,[[["self"]],["typedtransform3d"]]],[11,"radians","","",17,[[["t"]],["self"]]],[11,"get","","",17,[[],["t"]]],[11,"degrees","","",17,[[["t"]],["self"]]],[11,"to_degrees","","",17,[[],["t"]]],[11,"positive","","Returns this angle in the [0..2*PI[ range.",17,[[["self"]],["self"]]],[11,"signed","","Returns this angle in the ]-PI..PI] range.",17,[[["self"]],["self"]]],[11,"sin_cos","","Returns (sin(self), cos(self)).",17,[[]]],[11,"zero","","",17,[[],["self"]]],[11,"pi","","",17,[[],["self"]]],[11,"two_pi","","",17,[[],["self"]]],[11,"frac_pi_2","","",17,[[],["self"]]],[11,"frac_pi_3","","",17,[[],["self"]]],[11,"frac_pi_4","","",17,[[],["self"]]],[11,"new","","Creates a rotation from an angle in radians.",18,[[["angle"]],["self"]]],[11,"radians","","",18,[[["t"]],["self"]]],[11,"identity","","Creates the identity rotation.",18,[[],["self"]]],[11,"get_angle","","Returns self.angle as a strongly typed `Angle<T>`.",18,[[["self"]],["angle"]]],[11,"to_3d","","Creates a 3d rotation (around the z axis) from this 2d…",18,[[["self"]],["typedrotation3d"]]],[11,"inverse","","Returns the inverse of this rotation.",18,[[["self"]],["typedrotation2d"]]],[11,"pre_rotate","","Returns a rotation representing the other rotation…",18,[[["self"],["typedrotation2d"]],["typedrotation2d"]]],[11,"post_rotate","","Returns a rotation representing this rotation followed by…",18,[[["self"],["typedrotation2d"]],["typedrotation2d"]]],[11,"transform_point","","Returns the given 2d point transformed by this rotation.",18,[[["typedpoint2d"],["self"]],["typedpoint2d"]]],[11,"transform_vector","","Returns the given 2d vector transformed by this rotation.",18,[[["self"],["typedvector2d"]],["typedvector2d"]]],[11,"to_transform","","Returns the matrix representation of this rotation.",18,[[["self"]],["typedtransform2d"]]],[11,"quaternion","","Creates a rotation around from a quaternion representation.",19,[[["t"]],["self"]]],[11,"vector_part","","Returns the vector part (i, j, k) of this quaternion.",19,[[["self"]],["vector3d"]]],[11,"identity","","Creates the identity rotation.",19,[[],["self"]]],[11,"unit_quaternion","","Creates a rotation around from a quaternion representation…",19,[[["t"]],["self"]]],[11,"around_axis","","Creates a rotation around a given axis.",19,[[["typedvector3d"],["angle"]],["self"]]],[11,"around_x","","Creates a rotation around the x axis.",19,[[["angle"]],["self"]]],[11,"around_y","","Creates a rotation around the y axis.",19,[[["angle"]],["self"]]],[11,"around_z","","Creates a rotation around the z axis.",19,[[["angle"]],["self"]]],[11,"euler","","Creates a rotation from Euler angles.",19,[[["angle"]],["self"]]],[11,"inverse","","Returns the inverse of this rotation.",19,[[["self"]],["typedrotation3d"]]],[11,"norm","","Computes the norm of this quaternion",19,[[["self"]],["t"]]],[11,"square_norm","","",19,[[["self"]],["t"]]],[11,"normalize","","Returns a unit quaternion from this one.",19,[[["self"]],["self"]]],[11,"is_normalized","","",19,[[["self"]],["bool"]]],[11,"slerp","","Spherical linear interpolation between this rotation and…",19,[[["self"],["t"]],["self"]]],[11,"lerp","","Basic Linear interpolation between this rotation and…",19,[[["self"],["t"]],["self"]]],[11,"rotate_point3d","","Returns the given 3d point transformed by this rotation.",19,[[["self"],["typedpoint3d"]],["typedpoint3d"]]],[11,"rotate_point2d","","Returns the given 2d point transformed by this rotation…",19,[[["typedpoint2d"],["self"]],["typedpoint2d"]]],[11,"rotate_vector3d","","Returns the given 3d vector transformed by this rotation.",19,[[["typedvector3d"],["self"]],["typedvector3d"]]],[11,"rotate_vector2d","","Returns the given 2d vector transformed by this rotation…",19,[[["self"],["typedvector2d"]],["typedvector2d"]]],[11,"to_transform","","Returns the matrix representation of this rotation.",19,[[["self"]],["typedtransform3d"]]],[11,"pre_rotate","","Returns a rotation representing the other rotation…",19,[[["self"],["typedrotation3d"]],["typedrotation3d"]]],[11,"post_rotate","","Returns a rotation representing this rotation followed by…",19,[[["self"],["typedrotation3d"]],["typedrotation3d"]]],[11,"new","","",2,[[["t"]],["self"]]],[11,"get","","",2,[[["self"]],["t"]]],[18,"ONE","","Identity scaling, could be used to safely transit from one…",2,null],[11,"inv","","The inverse TypedScale (1.0 / self).",2,[[["self"]],["typedscale"]]],[11,"cast","","Cast from one numeric representation to another,…",2,[[["self"]],[["typedscale"],["numcast"],["clone"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",2,[[["self"]],[["typedscale"],["option",["typedscale"]]]]],[11,"transform_point","","Returns the given point transformed by this scale.",2,[[["typedpoint2d"],["self"]],["typedpoint2d"]]],[11,"transform_vector","","Returns the given vector transformed by this scale.",2,[[["self"],["typedvector2d"]],["typedvector2d"]]],[11,"transform_size","","Returns the given vector transformed by this scale.",2,[[["self"],["typedsize2d"]],["typedsize2d"]]],[11,"transform_rect","","Returns the given rect transformed by this scale.",2,[[["typedrect"],["self"]],["typedrect"]]],[11,"inverse","","Returns the inverse of this scale.",2,[[["self"]],["typedscale"]]],[11,"is_identity","","Returns true if this scale has no effect.",2,[[["self"]],["bool"]]],[11,"new","","Constructor taking a scalar for each side.",20,[[["t"]],["self"]]],[11,"from_lengths","","Constructor taking a typed Length for each side.",20,[[["length"]],["self"]]],[11,"top_typed","","Access self.top as a typed Length instead of a scalar value.",20,[[["self"]],["length"]]],[11,"right_typed","","Access self.right as a typed Length instead of a scalar…",20,[[["self"]],["length"]]],[11,"bottom_typed","","Access self.bottom as a typed Length instead of a scalar…",20,[[["self"]],["length"]]],[11,"left_typed","","Access self.left as a typed Length instead of a scalar…",20,[[["self"]],["length"]]],[11,"new_all_same","","Constructor setting the same value to all sides, taking a…",20,[[["t"]],["self"]]],[11,"from_length_all_same","","Constructor setting the same value to all sides, taking a…",20,[[["length"]],["self"]]],[11,"horizontal","","",20,[[["self"]],["t"]]],[11,"vertical","","",20,[[["self"]],["t"]]],[11,"horizontal_typed","","",20,[[["self"]],["length"]]],[11,"vertical_typed","","",20,[[["self"]],["length"]]],[11,"zero","","Constructor, setting all sides to zero.",20,[[],["self"]]],[11,"new","","Constructor taking scalar values.",21,[[["t"]],["self"]]],[11,"from_lengths","","Constructor taking scalar strongly typed lengths.",21,[[["length"]],["self"]]],[11,"round","","Rounds each component to the nearest integer value.",21,[[["self"]],["self"]]],[11,"ceil","","Rounds each component to the smallest integer equal or…",21,[[["self"]],["self"]]],[11,"floor","","Rounds each component to the biggest integer equal or…",21,[[["self"]],["self"]]],[11,"area","","",21,[[["self"]]]],[11,"lerp","","Linearly interpolate between this size and another size.",21,[[["self"],["t"]],["self"]]],[11,"is_empty_or_negative","","",21,[[["self"]],["bool"]]],[11,"zero","","",21,[[],["self"]]],[11,"width_typed","","Returns self.width as a Length carrying the unit.",21,[[["self"]],["length"]]],[11,"height_typed","","Returns self.height as a Length carrying the unit.",21,[[["self"]],["length"]]],[11,"to_array","","",21,[[["self"]]]],[11,"to_tuple","","",21,[[["self"]]]],[11,"to_vector","","",21,[[["self"]],["typedvector2d"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",21,[[["self"]],["size2d"]]],[11,"from_untyped","","Tag a unitless value with units.",21,[[["size2d"]],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",21,[[["self"]],[["numcast"],["typedsize2d"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",21,[[["self"]],[["typedsize2d"],["option",["typedsize2d"]]]]],[11,"to_f32","","Cast into an `f32` size.",21,[[["self"]],[["f32"],["typedsize2d",["f32"]]]]],[11,"to_f64","","Cast into an `f64` size.",21,[[["self"]],[["f64"],["typedsize2d",["f64"]]]]],[11,"to_usize","","Cast into an `uint` size, truncating decimals if any.",21,[[["self"]],[["typedsize2d",["usize"]],["usize"]]]],[11,"to_u32","","Cast into an `u32` size, truncating decimals if any.",21,[[["self"]],[["u32"],["typedsize2d",["u32"]]]]],[11,"to_i32","","Cast into an `i32` size, truncating decimals if any.",21,[[["self"]],[["typedsize2d",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an `i64` size, truncating decimals if any.",21,[[["self"]],[["i64"],["typedsize2d",["i64"]]]]],[11,"abs","","",21,[[["self"]],["self"]]],[11,"is_positive","","",21,[[["self"]],["bool"]]],[11,"greater_than","","",21,[[["self"]],["boolvector2d"]]],[11,"lower_than","","",21,[[["self"]],["boolvector2d"]]],[11,"equal","","",21,[[["self"]],["boolvector2d"]]],[11,"not_equal","","",21,[[["self"]],["boolvector2d"]]],[11,"min","","",21,[[],["self"]]],[11,"max","","",21,[[],["self"]]],[11,"clamp","","",21,[[["self"]],["self"]]],[11,"row_major","","Create a transform specifying its matrix elements in…",3,[[["t"]],["self"]]],[11,"column_major","","Create a transform specifying its matrix elements in…",3,[[["t"]],["self"]]],[11,"to_row_major_array","","Returns an array containing this transform's terms in…",3,[[["self"]]]],[11,"to_column_major_array","","Returns an array containing this transform's terms in…",3,[[["self"]]]],[11,"to_row_arrays","","Returns an array containing this transform's 3 rows in (in…",3,[[["self"]]]],[11,"from_row_major_array","","Creates a transform from an array of 6 elements in…",3,[[],["self"]]],[11,"from_row_arrays","","Creates a transform from 3 rows of 2 elements (row-major…",3,[[],["self"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",3,[[["self"]],["transform2d"]]],[11,"from_untyped","","Tag a unitless value with units.",3,[[["transform2d"]],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",3,[[["self"]],[["typedtransform2d"],["numcast"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",3,[[["self"]],[["typedtransform2d"],["option",["typedtransform2d"]]]]],[11,"identity","","",3,[[],["self"]]],[11,"post_mul","","Returns the multiplication of the two matrices such that…",3,[[["self"],["typedtransform2d"]],["typedtransform2d"]]],[11,"pre_mul","","Returns the multiplication of the two matrices such that…",3,[[["self"],["typedtransform2d"]],["typedtransform2d"]]],[11,"create_translation","","Returns a translation transform.",3,[[["t"]],["self"]]],[11,"post_translate","","Applies a translation after self's transformation and…",3,[[["typedvector2d"],["self"]],["self"]]],[11,"pre_translate","","Applies a translation before self's transformation and…",3,[[["self"],["typedvector2d"]],["self"]]],[11,"create_scale","","Returns a scale transform.",3,[[["t"]],["self"]]],[11,"post_scale","","Applies a scale after self's transformation and returns…",3,[[["self"],["t"]],["self"]]],[11,"pre_scale","","Applies a scale before self's transformation and returns…",3,[[["self"],["t"]],["self"]]],[11,"create_rotation","","Returns a rotation transform.",3,[[["angle"]],["self"]]],[11,"post_rotate","","Applies a rotation after self's transformation and returns…",3,[[["self"],["angle"]],["self"]]],[11,"pre_rotate","","Applies a rotation after self's transformation and returns…",3,[[["self"],["angle"]],["self"]]],[11,"transform_point","","Returns the given point transformed by this transform.",3,[[["typedpoint2d"],["self"]],["typedpoint2d"]]],[11,"transform_vector","","Returns the given vector transformed by this matrix.",3,[[["self"],["typedvector2d"]],["typedvector2d"]]],[11,"transform_rect","","Returns a rectangle that encompasses the result of…",3,[[["typedrect"],["self"]],["typedrect"]]],[11,"determinant","","Computes and returns the determinant of this transform.",3,[[["self"]],["t"]]],[11,"inverse","","Returns the inverse transform if possible.",3,[[["self"]],[["option",["typedtransform2d"]],["typedtransform2d"]]]],[11,"with_destination","","Returns the same transform with a different destination…",3,[[["self"]],["typedtransform2d"]]],[11,"with_source","","Returns the same transform with a different source unit.",3,[[["self"]],["typedtransform2d"]]],[11,"to_3d","","Create a 3D transform from the current transform",3,[[["self"]],["typedtransform3d"]]],[11,"approx_eq","","",3,[[["self"]],["bool"]]],[11,"row_major","","Create a transform specifying its components in row-major…",4,[[["t"]],["self"]]],[11,"column_major","","Create a transform specifying its components in…",4,[[["t"]],["self"]]],[11,"identity","","",4,[[],["self"]]],[11,"row_major_2d","","Create a 4 by 4 transform representing a 2d…",4,[[["t"]],["self"]]],[11,"ortho","","Create an orthogonal projection transform.",4,[[["t"]],["self"]]],[11,"is_2d","","Returns true if this transform can be represented with a…",4,[[["self"]],["bool"]]],[11,"to_2d","","Create a 2D transform picking the relevant terms from this…",4,[[["self"]],["typedtransform2d"]]],[11,"is_backface_visible","","Check whether shapes on the XY plane with Z pointing…",4,[[["self"]],["bool"]]],[11,"approx_eq","","",4,[[["self"]],["bool"]]],[11,"with_destination","","Returns the same transform with a different destination…",4,[[["self"]],["typedtransform3d"]]],[11,"with_source","","Returns the same transform with a different source unit.",4,[[["self"]],["typedtransform3d"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",4,[[["self"]],["transform3d"]]],[11,"from_untyped","","Tag a unitless value with units.",4,[[["transform3d"]],["self"]]],[11,"post_mul","","Returns the multiplication of the two matrices such that…",4,[[["self"],["typedtransform3d"]],["typedtransform3d"]]],[11,"pre_mul","","Returns the multiplication of the two matrices such that…",4,[[["typedtransform3d"],["self"]],["typedtransform3d"]]],[11,"inverse","","Returns the inverse transform if possible.",4,[[["self"]],[["option",["typedtransform3d"]],["typedtransform3d"]]]],[11,"determinant","","Compute the determinant of the transform.",4,[[["self"]],["t"]]],[11,"mul_s","","Multiplies all of the transform's component by a scalar…",4,[[["self"],["t"]],["self"]]],[11,"from_scale","","Convenience function to create a scale transform from a…",4,[[["typedscale"]],["self"]]],[11,"transform_point2d_homogeneous","","Returns the homogeneous vector corresponding to the…",4,[[["typedpoint2d"],["self"]],["homogeneousvector"]]],[11,"transform_point2d","","Returns the given 2d point transformed by this transform,…",4,[[["typedpoint2d"],["self"]],[["option",["typedpoint2d"]],["typedpoint2d"]]]],[11,"transform_vector2d","","Returns the given 2d vector transformed by this matrix.",4,[[["self"],["typedvector2d"]],["typedvector2d"]]],[11,"transform_point3d_homogeneous","","Returns the homogeneous vector corresponding to the…",4,[[["self"],["typedpoint3d"]],["homogeneousvector"]]],[11,"transform_point3d","","Returns the given 3d point transformed by this transform,…",4,[[["self"],["typedpoint3d"]],[["typedpoint3d"],["option",["typedpoint3d"]]]]],[11,"transform_vector3d","","Returns the given 3d vector transformed by this matrix.",4,[[["typedvector3d"],["self"]],["typedvector3d"]]],[11,"transform_rect","","Returns a rectangle that encompasses the result of…",4,[[["typedrect"],["self"]],[["option",["typedrect"]],["typedrect"]]]],[11,"create_translation","","Create a 3d translation transform",4,[[["t"]],["self"]]],[11,"pre_translate","","Returns a transform with a translation applied before…",4,[[["self"],["typedvector3d"]],["self"]]],[11,"post_translate","","Returns a transform with a translation applied after…",4,[[["self"],["typedvector3d"]],["self"]]],[11,"project_to_2d","","Returns a projection of this transform in 2d space.",4,[[["self"]],["self"]]],[11,"create_scale","","Create a 3d scale transform",4,[[["t"]],["self"]]],[11,"pre_scale","","Returns a transform with a scale applied before self's…",4,[[["self"],["t"]],["self"]]],[11,"post_scale","","Returns a transform with a scale applied after self's…",4,[[["self"],["t"]],["self"]]],[11,"create_rotation","","Create a 3d rotation transform from an angle / axis. The…",4,[[["t"],["angle"]],["self"]]],[11,"post_rotate","","Returns a transform with a rotation applied after self's…",4,[[["angle"],["self"],["t"]],["self"]]],[11,"pre_rotate","","Returns a transform with a rotation applied before self's…",4,[[["angle"],["self"],["t"]],["self"]]],[11,"create_skew","","Create a 2d skew transform.",4,[[["angle"]],["self"]]],[11,"create_perspective","","Create a simple perspective projection transform",4,[[["t"]],["self"]]],[11,"to_row_major_array","","Returns an array containing this transform's terms in…",4,[[["self"]]]],[11,"to_column_major_array","","Returns an array containing this transform's terms in…",4,[[["self"]]]],[11,"to_row_arrays","","Returns an array containing this transform's 4 rows in (in…",4,[[["self"]]]],[11,"to_column_arrays","","Returns an array containing this transform's 4 columns in…",4,[[["self"]]]],[11,"from_array","","Creates a transform from an array of 16 elements in…",4,[[],["self"]]],[11,"from_row_arrays","","Creates a transform from 4 rows of 4 elements (row-major…",4,[[],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",4,[[["self"]],[["numcast"],["copy"],["typedtransform3d"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",4,[[["self"]],[["option",["typedtransform3d"]],["typedtransform3d"]]]],[11,"new","","",15,[[["t"]],["self"]]],[11,"to_array","","",15,[[["self"]]]],[11,"to_tuple","","",15,[[["self"]]]],[11,"identity","","",15,[[],["self"]]],[11,"is_identity","","",15,[[["self"]],["bool"]]],[11,"transform_point","","Translate a point and cast its unit.",15,[[["typedpoint2d"],["self"]],["typedpoint2d"]]],[11,"transform_rect","","Translate a rectangle and cast its unit.",15,[[["typedrect"],["self"]],["typedrect"]]],[11,"transform_size","","No-op, just cast the unit.",15,[[["self"],["typedsize2d"]],["typedsize2d"]]],[11,"to_vector","","Cast into a 2D vector.",15,[[["self"]],["typedvector2d"]]],[11,"inverse","","Return the inverse transformation.",15,[[["self"]],["typedtranslation2d"]]],[11,"to_transform","","Returns the matrix representation of this translation.",15,[[["self"]],["typedtransform2d"]]],[11,"new","","",16,[[["t"]],["self"]]],[11,"to_array","","",16,[[["self"]]]],[11,"to_tuple","","",16,[[["self"]]]],[11,"identity","","",16,[[],["self"]]],[11,"is_identity","","",16,[[["self"]],["bool"]]],[11,"transform_point3d","","Translate a point and cast its unit.",16,[[["self"],["typedpoint3d"]],["typedpoint3d"]]],[11,"transform_point2d","","Translate a point and cast its unit.",16,[[["typedpoint2d"],["self"]],["typedpoint2d"]]],[11,"transform_rect","","Translate a rectangle and cast its unit.",16,[[["typedrect"],["self"]],["typedrect"]]],[11,"transform_size","","No-op, just cast the unit.",16,[[["self"],["typedsize2d"]],["typedsize2d"]]],[11,"to_vector","","Cast into a 3D vector.",16,[[["self"]],["typedvector3d"]]],[11,"inverse","","Return the inverse transformation.",16,[[["self"]],["typedtranslation3d"]]],[11,"to_transform","","Returns the matrix representation of this translation.",16,[[["self"]],["typedtransform3d"]]],[11,"zero","","Constructor, setting all components to zero.",7,[[],["self"]]],[11,"to_3d","","Convert into a 3d vector.",7,[[["self"]],["typedvector3d"]]],[11,"new","","Constructor taking scalar values directly.",7,[[["t"]],["self"]]],[11,"from_lengths","","Constructor taking properly typed Lengths instead of…",7,[[["length"]],["self"]]],[11,"extend","","Create a 3d vector from this one, using the specified z…",7,[[["self"],["t"]],["typedvector3d"]]],[11,"to_point","","Cast this vector into a point.",7,[[["self"]],["typedpoint2d"]]],[11,"yx","","Swap x and y.",7,[[["self"]],["self"]]],[11,"to_size","","Cast this vector into a size.",7,[[["self"]],["typedsize2d"]]],[11,"x_typed","","Returns self.x as a Length carrying the unit.",7,[[["self"]],["length"]]],[11,"y_typed","","Returns self.y as a Length carrying the unit.",7,[[["self"]],["length"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",7,[[["self"]],["vector2d"]]],[11,"from_untyped","","Tag a unit-less value with units.",7,[[["vector2d"]],["self"]]],[11,"cast_unit","","Cast the unit",7,[[["self"]],["typedvector2d"]]],[11,"to_array","","",7,[[["self"]]]],[11,"to_tuple","","",7,[[["self"]]]],[11,"to_transform","","",7,[[["self"]],["typedtransform2d"]]],[11,"angle_from_x_axis","","Returns the angle between this vector and the x axis…",7,[[["self"]],["angle"]]],[11,"dot","","Dot product.",7,[[],["t"]]],[11,"cross","","Returns the norm of the cross product [self.x, self.y, 0]…",7,[[],["t"]]],[11,"normalize","","",7,[[],["self"]]],[11,"robust_normalize","","Return the normalized vector even if the length is larger…",7,[[],["self"]]],[11,"square_length","","",7,[[["self"]],["t"]]],[11,"length","","",7,[[["self"]],["t"]]],[11,"lerp","","Linearly interpolate between this vector and another vector.",7,[[["self"],["t"]],["self"]]],[11,"min","","",7,[[],["self"]]],[11,"max","","",7,[[],["self"]]],[11,"clamp","","",7,[[["self"]],["self"]]],[11,"round","","Rounds each component to the nearest integer value.",7,[[["self"]],["self"]]],[11,"ceil","","Rounds each component to the smallest integer equal or…",7,[[["self"]],["self"]]],[11,"floor","","Rounds each component to the biggest integer equal or…",7,[[["self"]],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",7,[[["self"]],[["typedvector2d"],["numcast"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",7,[[["self"]],[["option",["typedvector2d"]],["typedvector2d"]]]],[11,"to_f32","","Cast into an `f32` vector.",7,[[["self"]],[["f32"],["typedvector2d",["f32"]]]]],[11,"to_f64","","Cast into an `f64` vector.",7,[[["self"]],[["f64"],["typedvector2d",["f64"]]]]],[11,"to_usize","","Cast into an `usize` vector, truncating decimals if any.",7,[[["self"]],[["typedvector2d",["usize"]],["usize"]]]],[11,"to_u32","","Cast into an `u32` vector, truncating decimals if any.",7,[[["self"]],[["u32"],["typedvector2d",["u32"]]]]],[11,"to_i32","","Cast into an i32 vector, truncating decimals if any.",7,[[["self"]],[["typedvector2d",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an i64 vector, truncating decimals if any.",7,[[["self"]],[["i64"],["typedvector2d",["i64"]]]]],[11,"abs","","",7,[[["self"]],["self"]]],[11,"zero","","Constructor, setting all components to zero.",8,[[],["self"]]],[11,"to_array_4d","","",8,[[["self"]]]],[11,"to_tuple_4d","","",8,[[["self"]]]],[11,"new","","Constructor taking scalar values directly.",8,[[["t"]],["self"]]],[11,"from_lengths","","Constructor taking properly typed Lengths instead of…",8,[[["length"]],["typedvector3d"]]],[11,"to_point","","Cast this vector into a point.",8,[[["self"]],["typedpoint3d"]]],[11,"xy","","Returns a 2d vector using this vector's x and y coordinates",8,[[["self"]],["typedvector2d"]]],[11,"xz","","Returns a 2d vector using this vector's x and z coordinates",8,[[["self"]],["typedvector2d"]]],[11,"yz","","Returns a 2d vector using this vector's x and z coordinates",8,[[["self"]],["typedvector2d"]]],[11,"x_typed","","Returns self.x as a Length carrying the unit.",8,[[["self"]],["length"]]],[11,"y_typed","","Returns self.y as a Length carrying the unit.",8,[[["self"]],["length"]]],[11,"z_typed","","Returns self.z as a Length carrying the unit.",8,[[["self"]],["length"]]],[11,"to_array","","",8,[[["self"]]]],[11,"to_tuple","","",8,[[["self"]]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",8,[[["self"]],["vector3d"]]],[11,"from_untyped","","Tag a unitless value with units.",8,[[["vector3d"]],["self"]]],[11,"to_2d","","Convert into a 2d vector.",8,[[["self"]],["typedvector2d"]]],[11,"to_transform","","",8,[[["self"]],["typedtransform3d"]]],[11,"dot","","",8,[[],["t"]]],[11,"cross","","",8,[[],["self"]]],[11,"normalize","","",8,[[],["self"]]],[11,"robust_normalize","","Return the normalized vector even if the length is larger…",8,[[],["self"]]],[11,"square_length","","",8,[[["self"]],["t"]]],[11,"length","","",8,[[["self"]],["t"]]],[11,"lerp","","Linearly interpolate between this vector and another vector.",8,[[["self"],["t"]],["self"]]],[11,"min","","",8,[[],["self"]]],[11,"max","","",8,[[],["self"]]],[11,"clamp","","",8,[[["self"]],["self"]]],[11,"round","","Rounds each component to the nearest integer value.",8,[[["self"]],["self"]]],[11,"ceil","","Rounds each component to the smallest integer equal or…",8,[[["self"]],["self"]]],[11,"floor","","Rounds each component to the biggest integer equal or…",8,[[["self"]],["self"]]],[11,"cast","","Cast from one numeric representation to another,…",8,[[["self"]],[["numcast"],["typedvector3d"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",8,[[["self"]],[["option",["typedvector3d"]],["typedvector3d"]]]],[11,"to_f32","","Cast into an `f32` vector.",8,[[["self"]],[["f32"],["typedvector3d",["f32"]]]]],[11,"to_f64","","Cast into an `f64` vector.",8,[[["self"]],[["f64"],["typedvector3d",["f64"]]]]],[11,"to_usize","","Cast into an `usize` vector, truncating decimals if any.",8,[[["self"]],[["typedvector3d",["usize"]],["usize"]]]],[11,"to_u32","","Cast into an `u32` vector, truncating decimals if any.",8,[[["self"]],[["u32"],["typedvector3d",["u32"]]]]],[11,"to_i32","","Cast into an `i32` vector, truncating decimals if any.",8,[[["self"]],[["typedvector3d",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an `i64` vector, truncating decimals if any.",8,[[["self"]],[["i64"],["typedvector3d",["i64"]]]]],[11,"abs","","",8,[[["self"]],["self"]]],[11,"all","","",9,[[["self"]],["bool"]]],[11,"any","","",9,[[["self"]],["bool"]]],[11,"none","","",9,[[["self"]],["bool"]]],[11,"and","","",9,[[["self"]],["self"]]],[11,"or","","",9,[[["self"]],["self"]]],[11,"not","","",9,[[["self"]],["self"]]],[11,"select_point","","",9,[[["typedpoint2d"],["self"]],[["typedpoint2d"],["copy"]]]],[11,"select_vector","","",9,[[["typedvector2d"],["self"]],[["copy"],["typedvector2d"]]]],[11,"select_size","","",9,[[["self"],["typedsize2d"]],[["typedsize2d"],["copy"]]]],[11,"all","","",10,[[["self"]],["bool"]]],[11,"any","","",10,[[["self"]],["bool"]]],[11,"none","","",10,[[["self"]],["bool"]]],[11,"and","","",10,[[["self"]],["self"]]],[11,"or","","",10,[[["self"]],["self"]]],[11,"not","","",10,[[["self"]],["self"]]],[11,"select_point","","",10,[[["typedpoint3d"],["self"]],[["copy"],["typedpoint3d"]]]],[11,"select_vector","","",10,[[["typedvector3d"],["self"]],[["typedvector3d"],["copy"]]]],[11,"xy","","",10,[[["self"]],["boolvector2d"]]],[11,"xz","","",10,[[["self"]],["boolvector2d"]]],[11,"yz","","",10,[[["self"]],["boolvector2d"]]],[11,"greater_than","","",7,[[["self"]],["boolvector2d"]]],[11,"lower_than","","",7,[[["self"]],["boolvector2d"]]],[11,"equal","","",7,[[["self"]],["boolvector2d"]]],[11,"not_equal","","",7,[[["self"]],["boolvector2d"]]],[11,"greater_than","","",8,[[["self"]],["boolvector3d"]]],[11,"lower_than","","",8,[[["self"]],["boolvector3d"]]],[11,"equal","","",8,[[["self"]],["boolvector3d"]]],[11,"not_equal","","",8,[[["self"]],["boolvector3d"]]],[11,"new","","Constructor.",14,[[["typedpoint3d"]],["self"]]],[11,"from_size","","Creates a Box3D of the given size, at offset zero.",14,[[["typedsize3d"]],["self"]]],[11,"is_negative","","Returns true if the box has a negative volume.",14,[[["self"]],["bool"]]],[11,"is_empty_or_negative","","Returns true if the size is zero or negative.",14,[[["self"]],["bool"]]],[11,"intersects","","",14,[[["self"]],["bool"]]],[11,"try_intersection","","",14,[[["self"]],["option"]]],[11,"intersection","","",14,[[["self"]],["self"]]],[11,"translate","","Returns the same box3d, translated by a vector.",14,[[["typedvector3d"],["self"]],["self"]]],[11,"contains","","Returns true if this box3d contains the point. Points are…",14,[[["typedpoint3d"],["self"]],["bool"]]],[11,"contains_box","","Returns true if this box3d contains the interior of the…",14,[[["self"]],["bool"]]],[11,"size","","",14,[[["self"]],["typedsize3d"]]],[11,"inflate","","Inflates the box by the specified sizes on each side…",14,[[["self"],["t"]],["self"]]],[11,"inflate_typed","","",14,[[["length"],["self"]],["self"]]],[11,"from_points","","Returns the smallest box containing all of the provided…",14,[[["i"]],["self"]]],[11,"lerp","","Linearly interpolate between this box3d and another box3d.",14,[[["self"],["t"]],["self"]]],[11,"center","","",14,[[["self"]],["typedpoint3d"]]],[11,"union","","",14,[[["self"]],["self"]]],[11,"scale","","",14,[[["copy"],["self"]],["self"]]],[11,"volume","","",14,[[["self"]],["t"]]],[11,"xy_area","","",14,[[["self"]],["t"]]],[11,"yz_area","","",14,[[["self"]],["t"]]],[11,"xz_area","","",14,[[["self"]],["t"]]],[11,"zero","","Constructor, setting all sides to zero.",14,[[],["self"]]],[11,"is_empty","","Returns true if the volume is zero.",14,[[["self"]],["bool"]]],[11,"to_untyped","","Drop the units, preserving only the numeric value.",14,[[["self"]],["box3d"]]],[11,"from_untyped","","Tag a unitless value with units.",14,[[["box3d"]],["typedbox3d"]]],[11,"cast","","Cast from one numeric representation to another,…",14,[[["self"]],[["numcast"],["typedbox3d"],["copy"]]]],[11,"try_cast","","Fallible cast from one numeric representation to another,…",14,[[["self"]],[["typedbox3d"],["option",["typedbox3d"]]]]],[11,"round","","Return a box3d with edges rounded to integer coordinates,…",14,[[["self"]],["self"]]],[11,"round_in","","Return a box3d with faces/edges rounded to integer…",14,[[["self"]],["self"]]],[11,"round_out","","Return a box3d with faces/edges rounded to integer…",14,[[["self"]],["self"]]],[11,"to_f32","","Cast into an `f32` box3d.",14,[[["self"]],[["typedbox3d",["f32"]],["f32"]]]],[11,"to_f64","","Cast into an `f64` box3d.",14,[[["self"]],[["f64"],["typedbox3d",["f64"]]]]],[11,"to_usize","","Cast into an `usize` box3d, truncating decimals if any.",14,[[["self"]],[["usize"],["typedbox3d",["usize"]]]]],[11,"to_u32","","Cast into an `u32` box3d, truncating decimals if any.",14,[[["self"]],[["typedbox3d",["u32"]],["u32"]]]],[11,"to_i32","","Cast into an `i32` box3d, truncating decimals if any.",14,[[["self"]],[["typedbox3d",["i32"]],["i32"]]]],[11,"to_i64","","Cast into an `i64` box3d, truncating decimals if any.",14,[[["self"]],[["i64"],["typedbox3d",["i64"]]]]],[6,"Box2D","","The default box 2d type with no unit.",null,null],[6,"Transform2D","","The default 2d transform type with no units.",null,null],[6,"Transform3D","","The default 3d transform type with no units.",null,null],[6,"Point2D","","Default 2d point type with no unit.",null,null],[6,"Point3D","","Default 3d point type with no unit.",null,null],[6,"Vector2D","","Default 2d vector type with no unit.",null,null],[6,"Vector3D","","Default 3d vector type with no unit.",null,null],[6,"Rect","","The default rectangle type with no unit.",null,null],[6,"RigidTransform3D","","",null,null],[6,"Box3D","","The default box 3d type with no unit.",null,null],[6,"Rotation2D","","The default 2d rotation type with no units.",null,null],[6,"Rotation3D","","The default 3d rotation type with no units.",null,null],[6,"SideOffsets2D","","The default 2D side offset type with no unit.",null,null],[6,"Size2D","","Default 2d size type with no unit.",null,null],[6,"Matrix2D","","Temporary alias to facilitate the transition to the new…",null,null],[6,"TypedMatrix2D","","Temporary alias to facilitate the transition to the new…",null,null],[6,"Matrix4D","","Temporary alias to facilitate the transition to the new…",null,null],[6,"TypedMatrix4D","","Temporary alias to facilitate the transition to the new…",null,null],[6,"ScaleFactor","","Temporary alias to facilitate the transition to the new…",null,null],[8,"Trig","","Trait for basic trigonometry functions, so they can be…",null,null],[10,"sin","","",28,[[],["self"]]],[10,"cos","","",28,[[],["self"]]],[10,"tan","","",28,[[],["self"]]],[10,"fast_atan2","","",28,[[],["self"]]],[10,"degrees_to_radians","","",28,[[],["self"]]],[10,"radians_to_degrees","","",28,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"zero","","",1,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"zero","","",21,[[],["t"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"approx_epsilon","","",5,[[],["self"]]],[11,"approx_eq","","",5,[[["self"]],["bool"]]],[11,"approx_eq_eps","","",5,[[["self"]],["bool"]]],[11,"approx_epsilon","","",6,[[],["self"]]],[11,"approx_eq","","",6,[[["self"]],["bool"]]],[11,"approx_eq_eps","","",6,[[["self"]],["bool"]]],[11,"approx_epsilon","","",19,[[],["t"]]],[11,"approx_eq","","",19,[[["self"]],["bool"]]],[11,"approx_eq_eps","","",19,[[["t"],["self"]],["bool"]]],[11,"approx_epsilon","","",7,[[],["self"]]],[11,"approx_eq","","",7,[[["self"]],["bool"]]],[11,"approx_eq_eps","","",7,[[["self"]],["bool"]]],[11,"approx_epsilon","","",8,[[],["self"]]],[11,"approx_eq","","",8,[[["self"]],["bool"]]],[11,"approx_eq_eps","","",8,[[["self"]],["bool"]]],[11,"zero","","",1,[[],["self"]]],[11,"zero","","",21,[[],["self"]]],[11,"from","","",0,[[["typedsize2d"]],["self"]]],[11,"from","","",11,[[["typedvector2d"]],["self"]]],[11,"from","","",11,[[["typedvector3d"]],["self"]]],[11,"from","","",11,[[["typedpoint2d"]],["self"]]],[11,"from","","",11,[[["typedpoint3d"]],["self"]]],[11,"from","","",5,[[],["self"]]],[11,"from","","",5,[[],["self"]]],[11,"from","","",6,[[],["self"]]],[11,"from","","",6,[[],["self"]]],[11,"from","","",12,[[["typedsize2d"]],["self"]]],[11,"from","","",13,[[["typedrotation3d"]],["self"]]],[11,"from","","",13,[[["typedvector3d"]],["self"]]],[11,"from","","",21,[[],["self"]]],[11,"from","","",21,[[],["self"]]],[11,"from","","",15,[[["typedvector2d"]],["self"]]],[11,"from","","",16,[[["typedvector3d"]],["self"]]],[11,"from","","",7,[[],["self"]]],[11,"from","","",7,[[],["self"]]],[11,"from","","",8,[[],["self"]]],[11,"from","","",8,[[],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"div","","",0,[[["t"]],["self"]]],[11,"div","","",0,[[["typedscale"]],["typedbox2d"]]],[11,"div","","",1,[[["length"]],["typedscale"]]],[11,"div","","",1,[[["t"]],["self"]]],[11,"div","","",1,[[["typedscale"]],["length"]]],[11,"div","","",5,[[["t"]],["self"]]],[11,"div","","",5,[[["typedscale"]],["typedpoint2d"]]],[11,"div","","",6,[[["t"]],["self"]]],[11,"div","","",6,[[["typedscale"]],["typedpoint3d"]]],[11,"div","","",12,[[["t"]],["self"]]],[11,"div","","",12,[[["typedscale"]],["typedrect"]]],[11,"div","","",17,[[["angle"]],["t"]]],[11,"div","","",17,[[["t"]],["angle"]]],[11,"div","","",21,[[["t"]],["self"]]],[11,"div","","",21,[[["typedscale"]],["typedsize2d"]]],[11,"div","","",7,[[["t"]],["self"]]],[11,"div","","",7,[[["typedscale"]]]],[11,"div","","",8,[[["t"]],["self"]]],[11,"div","","",8,[[["typedscale"]]]],[11,"div","","",14,[[["t"]],["self"]]],[11,"div","","",14,[[["typedscale"]],["typedbox3d"]]],[11,"sub","","",1,[[["length"]]]],[11,"sub","","",5,[[],["typedvector2d"]]],[11,"sub","","",5,[[["typedvector2d"]],["self"]]],[11,"sub","","",6,[[],["typedvector3d"]]],[11,"sub","","",6,[[["typedvector3d"]],["self"]]],[11,"sub","","",17,[[["angle"]]]],[11,"sub","","",2,[[["typedscale"]],["typedscale"]]],[11,"sub","","",21,[[],["self"]]],[11,"sub","","",15,[[["typedtranslation2d"]],["typedtranslation2d"]]],[11,"sub","","",16,[[["typedtranslation3d"]],["typedtranslation3d"]]],[11,"sub","","",7,[[],["self"]]],[11,"sub","","",8,[[],["self"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",11,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"eq","","",6,[[["self"]],["bool"]]],[11,"eq","","",12,[[["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["typedrigidtransform3d"]],["bool"]]],[11,"ne","","",13,[[["self"],["typedrigidtransform3d"]],["bool"]]],[11,"eq","","",17,[[["angle"],["self"]],["bool"]]],[11,"ne","","",17,[[["angle"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["typedscale"]],["bool"]]],[11,"eq","","",20,[[["self"]],["bool"]]],[11,"eq","","",21,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",4,[[["self"]],["bool"]]],[11,"eq","","",15,[[["self"]],["bool"]]],[11,"eq","","",16,[[["self"]],["bool"]]],[11,"eq","","",7,[[["self"]],["bool"]]],[11,"eq","","",8,[[["self"]],["bool"]]],[11,"eq","","",9,[[["boolvector2d"],["self"]],["bool"]]],[11,"ne","","",9,[[["boolvector2d"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["boolvector3d"]],["bool"]]],[11,"ne","","",10,[[["self"],["boolvector3d"]],["bool"]]],[11,"eq","","",14,[[["self"]],["bool"]]],[11,"eq","","",29,[[["unknownunit"],["self"]],["bool"]]],[11,"cmp","","",1,[[["self"]],["ordering"]]],[11,"cmp","","",29,[[["unknownunit"],["self"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",17,[[["angle"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",17,[[["angle"],["self"]],["bool"]]],[11,"le","","",17,[[["angle"],["self"]],["bool"]]],[11,"gt","","",17,[[["angle"],["self"]],["bool"]]],[11,"ge","","",17,[[["angle"],["self"]],["bool"]]],[11,"partial_cmp","","",29,[[["unknownunit"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"add","","",1,[[["length"]],["length"]]],[11,"add","","",5,[[["typedsize2d"]],["self"]]],[11,"add","","",5,[[["typedvector2d"]],["self"]]],[11,"add","","",6,[[["typedvector3d"]],["self"]]],[11,"add","","",17,[[["angle"]],["angle"]]],[11,"add","","",2,[[["typedscale"]],["typedscale"]]],[11,"add","","",20,[[],["self"]]],[11,"add","","",21,[[],["self"]]],[11,"add","","",15,[[["typedtranslation2d"]],["typedtranslation2d"]]],[11,"add","","",16,[[["typedtranslation3d"]],["typedtranslation3d"]]],[11,"add","","",7,[[],["self"]]],[11,"add","","",8,[[],["self"]]],[11,"mul","","",0,[[["t"]],["self"]]],[11,"mul","","",0,[[["typedscale"]],["typedbox2d"]]],[11,"mul","","",1,[[["t"]],["self"]]],[11,"mul","","",1,[[["typedscale"]],["length"]]],[11,"mul","","",5,[[["t"]],["self"]]],[11,"mul","","",5,[[["typedscale"]],["typedpoint2d"]]],[11,"mul","","",6,[[["t"]],["self"]]],[11,"mul","","",6,[[["typedscale"]],["typedpoint3d"]]],[11,"mul","","",12,[[["t"]],["self"]]],[11,"mul","","",12,[[["typedscale"]],["typedrect"]]],[11,"mul","","",17,[[["t"]],["angle"]]],[11,"mul","","",2,[[["typedscale"]],["typedscale"]]],[11,"mul","","",21,[[["t"]],["self"]]],[11,"mul","","",21,[[["typedscale"]],["typedsize2d"]]],[11,"mul","","",7,[[["t"]],["self"]]],[11,"mul","","",7,[[["typedscale"]]]],[11,"mul","","",8,[[["t"]],["self"]]],[11,"mul","","",8,[[["typedscale"]]]],[11,"mul","","",14,[[["t"]],["self"]]],[11,"mul","","",14,[[["typedscale"]],["typedbox3d"]]],[11,"neg","","",1,[[],["length"]]],[11,"neg","","",17,[[],["self"]]],[11,"neg","","",7,[[],["self"]]],[11,"neg","","",8,[[],["self"]]],[11,"add_assign","","",1,[[["length"],["self"]]]],[11,"add_assign","","",5,[[["self"],["typedvector2d"]]]],[11,"add_assign","","",6,[[["typedvector3d"],["self"]]]],[11,"add_assign","","",17,[[["self"],["angle"]]]],[11,"add_assign","","",7,[[["self"]]]],[11,"add_assign","","",8,[[["self"]]]],[11,"sub_assign","","",1,[[["length"],["self"]]]],[11,"sub_assign","","",5,[[["self"],["typedvector2d"]]]],[11,"sub_assign","","",6,[[["typedvector3d"],["self"]]]],[11,"sub_assign","","",17,[[["self"],["angle"]]]],[11,"sub_assign","","",7,[[["self"]]]],[11,"sub_assign","","",8,[[["self"]]]],[11,"mul_assign","","",1,[[["self"],["t"]]]],[11,"mul_assign","","",5,[[["self"],["t"]]]],[11,"mul_assign","","",17,[[["self"],["t"]]]],[11,"mul_assign","","",7,[[["self"],["t"]]]],[11,"mul_assign","","",8,[[["self"],["t"]]]],[11,"div_assign","","",1,[[["self"],["t"]]]],[11,"div_assign","","",5,[[["self"],["t"]]]],[11,"div_assign","","",17,[[["self"],["t"]]]],[11,"div_assign","","",7,[[["self"],["t"]]]],[11,"div_assign","","",8,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","","",5,[[["self"],["h"]]]],[11,"hash","","",6,[[["self"],["h"]]]],[11,"hash","","",12,[[["self"],["h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["h"]]]],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",20,[[["self"],["h"]]]],[11,"hash","","",21,[[["self"],["h"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"hash","","",15,[[["self"],["h"]]]],[11,"hash","","",16,[[["self"],["h"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"hash","","",8,[[["self"],["h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"into","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into","","",15,[[],["typedvector2d"]]],[11,"into","","",15,[[],["typedtransform2d"]]],[11,"into","","",16,[[],["typedvector3d"]]],[11,"into","","",16,[[],["typedtransform3d"]]],[11,"into","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into","","",8,[[]]],[11,"into","","",8,[[]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"clone","","",12,[[["self"]],["self"]]],[11,"clone","","",13,[[["self"]],["typedrigidtransform3d"]]],[11,"clone","","",17,[[["self"]],["angle"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["typedscale"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"clone","","",7,[[["self"]],["self"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["boolvector2d"]]],[11,"clone","","",10,[[["self"]],["boolvector3d"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",29,[[["self"]],["unknownunit"]]],[11,"default","","",5,[[],["self"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",12,[[],["self"]]],[11,"default","","",20,[[],["self"]]],[11,"default","","",21,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",15,[[],["self"]]],[11,"default","","",16,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",8,[[],["self"]]],[11,"default","","",29,[[],["unknownunit"]]],[11,"saturating_add","","",1,[[["length"]],["length"]]],[11,"saturating_sub","","",1,[[["length"]],["length"]]]],"p":[[3,"TypedBox2D"],[3,"Length"],[3,"TypedScale"],[3,"TypedTransform2D"],[3,"TypedTransform3D"],[3,"TypedPoint2D"],[3,"TypedPoint3D"],[3,"TypedVector2D"],[3,"TypedVector3D"],[3,"BoolVector2D"],[3,"BoolVector3D"],[3,"HomogeneousVector"],[3,"TypedRect"],[3,"TypedRigidTransform3D"],[3,"TypedBox3D"],[3,"TypedTranslation2D"],[3,"TypedTranslation3D"],[3,"Angle"],[3,"TypedRotation2D"],[3,"TypedRotation3D"],[3,"TypedSideOffsets2D"],[3,"TypedSize2D"],[8,"ApproxEq"],[8,"Zero"],[8,"One"],[8,"Round"],[8,"Floor"],[8,"Ceil"],[8,"Trig"],[3,"UnknownUnit"]]};
searchIndex["euclid_macros"] = {"doc":"","i":[[24,"EuclidMatrix","euclid_macros","",null,null]],"p":[]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",null,null],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding…",0,[[["u64"]],["fnvhasher"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"default","","",0,[[],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,[[["self"]]]]],"p":[[3,"FnvHasher"]]};
searchIndex["getrandom"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"Error","getrandom","A small and `no_std` compatible error type.",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system's preferred…",null,[[],[["result",["error"]],["error"]]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],[["option",["i32"]],["i32"]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["nonzerou32"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"clone","","",0,[[["self"]],["error"]]]],"p":[[3,"Error"]]};
searchIndex["hashbrown"] = {"doc":"This crate is a Rust port of Google's high-performance…","i":[[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"HashSet","","A hash set implemented as a `HashMap` where the value is…",null,null],[4,"CollectionAllocErr","","Augments `AllocErr` with a `CapacityOverflow` variant.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the…",0,null],[13,"AllocErr","","Error due to the allocator.",0,null],[12,"layout","hashbrown::CollectionAllocErr","The layout of the allocation request that failed.",1,null],[11,"new","hashbrown","Creates an empty `HashMap`.",2,[[],["self"]]],[11,"with_capacity","","Creates an empty `HashMap` with the specified capacity.",2,[[["usize"]],["self"]]],[11,"with_hasher","","Creates an empty `HashMap` which will use the given hash…",2,[[["s"]],["self"]]],[11,"with_capacity_and_hasher","","Creates an empty `HashMap` with the specified capacity,…",2,[[["s"],["usize"]],["self"]]],[11,"hasher","","Returns a reference to the map's [`BuildHasher`].",2,[[["self"]],["s"]]],[11,"capacity","","Returns the number of elements the map can hold without…",2,[[["self"]],["usize"]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The…",2,[[["self"]],["keys"]]],[11,"values","","An iterator visiting all values in arbitrary order. The…",2,[[["self"]],["values"]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary…",2,[[["self"]],["valuesmut"]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary…",2,[[["self"]],["iter"]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary…",2,[[["self"]],["itermut"]]],[11,"len","","Returns the number of elements in the map.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the map contains no elements.",2,[[["self"]],["bool"]]],[11,"drain","","Clears the map, returning all key-value pairs as an…",2,[[["self"]],["drain"]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the…",2,[[["self"]]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",2,[[["self"],["usize"]]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",2,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It…",2,[[["self"]]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It…",2,[[["self"],["usize"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",2,[[["self"],["k"]],["entry"]]],[11,"get","","Returns a reference to the value corresponding to the key.",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",2,[[["self"],["q"]],["option"]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",2,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"insert","","Inserts a key-value pair into the map.",2,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",2,[[["self"],["q"]],["option"]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",2,[[["self"],["q"]],["option"]]],[11,"retain","","Retains only the elements specified by the predicate.",2,[[["self"],["f"]]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",2,[[["self"]],["rawentrybuildermut"]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",2,[[["self"]],["rawentrybuilder"]]],[11,"new","","Creates an empty `HashSet`.",3,[[],["self"]]],[11,"with_capacity","","Creates an empty `HashSet` with the specified capacity.",3,[[["usize"]],["self"]]],[11,"capacity","","Returns the number of elements the set can hold without…",3,[[["self"]],["usize"]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The…",3,[[["self"]],["iter"]]],[11,"len","","Returns the number of elements in the set.",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the set contains no elements.",3,[[["self"]],["bool"]]],[11,"drain","","Clears the set, returning all elements in an iterator.",3,[[["self"]],["drain"]]],[11,"clear","","Clears the set, removing all values.",3,[[["self"]]]],[11,"with_hasher","","Creates a new empty hash set which will use the given…",3,[[["s"]],["self"]]],[11,"with_capacity_and_hasher","","Creates an empty `HashSet` with the specified capacity,…",3,[[["s"],["usize"]],["self"]]],[11,"hasher","","Returns a reference to the set's [`BuildHasher`].",3,[[["self"]],["s"]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",3,[[["self"],["usize"]]]],[11,"try_reserve","","Tries to reserve capacity for at least `additional` more…",3,[[["self"],["usize"]],[["result",["collectionallocerr"]],["collectionallocerr"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It…",3,[[["self"]]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It…",3,[[["self"],["usize"]]]],[11,"difference","","Visits the values representing the difference, i.e., the…",3,[[["self"]],["difference"]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference,…",3,[[["self"]],["symmetricdifference"]]],[11,"intersection","","Visits the values representing the intersection, i.e., the…",3,[[["self"]],["intersection"]]],[11,"union","","Visits the values representing the union, i.e., all the…",3,[[["self"]],["union"]]],[11,"contains","","Returns `true` if the set contains a value.",3,[[["self"],["q"]],["bool"]]],[11,"get","","Returns a reference to the value in the set, if any, that…",3,[[["self"],["q"]],[["t"],["option"]]]],[11,"get_or_insert","","Inserts the given `value` into the set if it is not…",3,[[["self"],["t"]],["t"]]],[11,"get_or_insert_with","","Inserts a value computed from `f` into the set if the…",3,[[["self"],["f"],["q"]],["t"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",3,[[["self"]],["bool"]]],[11,"is_subset","","Returns `true` if the set is a subset of another, i.e.,…",3,[[["self"]],["bool"]]],[11,"is_superset","","Returns `true` if the set is a superset of another, i.e.,…",3,[[["self"]],["bool"]]],[11,"insert","","Adds a value to the set.",3,[[["self"],["t"]],["bool"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",3,[[["self"],["t"]],["option"]]],[11,"remove","","Removes a value from the set. Returns whether the value…",3,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",3,[[["self"],["q"]],["option"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[0,"hash_map","","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"HashMap","hashbrown::hash_map","A hash map implemented with quadratic probing and SIMD…",null,null],[3,"Iter","","An iterator over the entries of a `HashMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `HashMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `HashMap`.",null,null],[3,"Keys","","An iterator over the keys of a `HashMap`.",null,null],[3,"Values","","An iterator over the values of a `HashMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `HashMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `HashMap`.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [`HashMap`] a key-value…",null,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [`HashMap`] a key-value…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `HashMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `HashMap`. It is part of…",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",4,null],[13,"Vacant","","A vacant entry.",4,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Occupied","","An occupied entry.",5,null],[13,"Vacant","","A vacant entry.",5,null],[6,"DefaultHashBuilder","","Default hasher for `HashMap`.",null,null],[0,"hash_set","hashbrown","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a `HashMap` where the value is…",null,null],[3,"Iter","","An iterator over the items of a `HashSet`.",null,null],[3,"IntoIter","","An owning iterator over the items of a `HashSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `HashSet`.",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"from","hashbrown","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","hashbrown::hash_map","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","hashbrown::hash_set","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"fmt","hashbrown","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","hashbrown::hash_map","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","hashbrown","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","hashbrown::hash_set","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","hashbrown","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["collectionallocerr"]],["bool"]]],[11,"ne","","",0,[[["self"],["collectionallocerr"]],["bool"]]],[11,"index","","Returns a reference to the value corresponding to the…",2,[[["self"],["q"]],["v"]]],[11,"next","hashbrown::hash_map","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"next","","",9,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",10,[[["self"]],[["v"],["option"]]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",12,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","hashbrown::hash_set","",19,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",19,[[["self"]]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",22,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",23,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",23,[[["self"]]]],[11,"next","","",24,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",25,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",25,[[["self"]]]],[11,"extend","hashbrown","",2,[[["self"],["intoiterator"]]]],[11,"extend","","",2,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"from_iter","","",2,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each…",2,[[],["intoiter"]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each…",3,[[],["intoiter"]]],[11,"len","hashbrown::hash_map","",6,[[["self"]],["usize"]]],[11,"len","","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","hashbrown::hash_set","",19,[[["self"]],["usize"]]],[11,"len","","",20,[[["self"]],["usize"]]],[11,"len","","",21,[[["self"]],["usize"]]],[11,"clone","hashbrown","",2,[[["self"]],["hashmap"]]],[11,"clone","hashbrown::hash_map","",6,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"clone","hashbrown","",3,[[["self"]],["hashset"]]],[11,"clone","hashbrown::hash_set","",19,[[["self"]],["self"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",25,[[["self"]],["self"]]],[11,"clone","hashbrown","",0,[[["self"]],["collectionallocerr"]]],[11,"default","","Creates an empty `HashMap<K, V, S>`, with the `Default`…",2,[[],["self"]]],[11,"default","","Creates an empty `HashSet<T, S>` with the `Default` value…",3,[[],["self"]]],[11,"from_key","hashbrown::hash_map","Creates a `RawEntryMut` from the given key.",13,[[["q"]],["rawentrymut"]]],[11,"from_key_hashed_nocheck","","Creates a `RawEntryMut` from the given key and its hash.",13,[[["u64"],["q"]],["rawentrymut"]]],[11,"from_hash","","Creates a `RawEntryMut` from the given hash.",13,[[["u64"],["f"]],["rawentrymut"]]],[11,"from_key","","Access an entry by key.",16,[[["q"]],["option"]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",16,[[["u64"],["q"]],["option"]]],[11,"from_hash","","Access an entry by hash.",16,[[["u64"],["f"]],["option"]]],[11,"insert","","Sets the value of the entry, and returns a…",4,[[["k"],["v"]],["rawoccupiedentrymut"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",4,[[["k"],["v"]]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",4,[[["f"]]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",4,[[["f"]],["self"]]],[11,"key","","Gets a reference to the key in the entry.",14,[[["self"]],["k"]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",14,[[["self"]],["k"]]],[11,"into_key","","Converts the entry into a mutable reference to the key in…",14,[[],["k"]]],[11,"get","","Gets a reference to the value in the entry.",14,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",14,[[],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",14,[[["self"]],["v"]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",14,[[["self"]]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the entry.",14,[[["self"]]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to the…",14,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",14,[[["self"],["v"]],["v"]]],[11,"insert_key","","Sets the value of the entry, and returns the entry's old…",14,[[["self"],["k"]],["k"]]],[11,"remove","","Takes the value out of the entry, and returns it.",14,[[],["v"]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",14,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",15,[[["k"],["v"]]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry's key,…",15,[[["v"],["u64"],["k"]]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",15,[[["k"],["h"],["u64"],["v"]]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",5,[[["v"]],["occupiedentry"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[["fnonce"]],["v"]]],[11,"key","","Returns a reference to this entry's key.",5,[[["self"]],["k"]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",5,[[["f"]],["self"]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",5,[[],["v"]]],[11,"key","","Gets a reference to the key in the entry.",17,[[["self"]],["k"]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",17,[[]]],[11,"get","","Gets a reference to the value in the entry.",17,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",17,[[["self"]],["v"]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the…",17,[[],["v"]]],[11,"insert","","Sets the value of the entry, and returns the entry's old…",17,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value out of the entry, and returns it.",17,[[],["v"]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The…",17,[[["v"]]]],[11,"replace_key","","Replaces the key in the hash map with the key used to…",17,[[],["k"]]],[11,"key","","Gets a reference to the key that would be used when…",18,[[["self"]],["k"]]],[11,"into_key","","Take ownership of the key.",18,[[],["k"]]],[11,"insert","","Sets the value of the entry with the VacantEntry's key,…",18,[[["v"]],["v"]]]],"p":[[4,"CollectionAllocErr"],[13,"AllocErr"],[3,"HashMap"],[3,"HashSet"],[4,"RawEntryMut"],[4,"Entry"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["hibitset"] = {"doc":"hibitset","i":[[3,"AtomicBitSet","hibitset","This is similar to a [`BitSet`] but allows setting of…",null,null],[3,"BitIter","","An `Iterator` over a [`BitSetLike`] structure.",null,null],[3,"DrainBitIter","","A draining `Iterator` over a [`DrainableBitSet`] structure.",null,null],[3,"BitParIter","","A `ParallelIterator` over a [`BitSetLike`] structure.",null,null],[3,"BitProducer","","Allows splitting and internally iterating through `BitSet`.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"BitSetAll","","`BitSetAll` is a bitset with all bits set. Essentially the…",null,null],[3,"BitSetAnd","","`BitSetAnd` takes two [`BitSetLike`] items, and merges the…",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[3,"BitSetNot","","`BitSetNot` takes a [`BitSetLike`] item, and produced an…",null,null],[12,"0","","",2,null],[3,"BitSetOr","","`BitSetOr` takes two [`BitSetLike`] items, and merges the…",null,null],[12,"0","","",3,null],[12,"1","","",3,null],[3,"BitSetXor","","`BitSetXor` takes two [`BitSetLike`] items, and merges the…",null,null],[12,"0","","",4,null],[12,"1","","",4,null],[3,"BitSet","","A `BitSet` is a simple set designed to track which indices…",null,null],[11,"new","","Creates an empty `AtomicBitSet`.",5,[[],["atomicbitset"]]],[11,"add_atomic","","Adds `id` to the `AtomicBitSet`. Returns `true` if the…",5,[[["u32"],["self"]],["bool"]]],[11,"add","","Adds `id` to the `BitSet`. Returns `true` if the value was…",5,[[["self"],["u32"]],["bool"]]],[11,"remove","","Removes `id` from the set, returns `true` if the value was…",5,[[["self"],["u32"]],["bool"]]],[11,"contains","","Returns `true` if `id` is in the set.",5,[[["u32"],["self"]],["bool"]]],[11,"clear","","Clear all bits in the set",5,[[["self"]]]],[11,"new","","Creates a new `DrainBitIter`. You usually don't call this…",6,[[["t"]],["self"]]],[11,"new","","Creates a new `BitParIter`. You usually don't call this…",7,[[["t"]],["self"]]],[11,"layers_split","","Sets how many layers are split when forking.",7,[[["u8"]],["self"]]],[11,"new","","Creates a new `BitIter`. You usually don't call this…",8,[[["t"]],["self"]]],[11,"contains","","Allows checking if set bit is contained in underlying bit…",8,[[["u32"],["self"]],["bool"]]],[8,"BitSetLike","","A generic interface for [`BitSetLike`]-like types.",null,null],[11,"get_from_layer","","Gets the `usize` corresponding to layer and index.",9,[[["self"],["usize"]],["usize"]]],[11,"is_empty","","Returns true if this `BitSetLike` contains nothing, and…",9,[[["self"]],["bool"]]],[10,"layer3","","Return a `usize` where each bit represents if any word in…",9,[[["self"]],["usize"]]],[10,"layer2","","Return the `usize` from the array of usizes that indicates…",9,[[["self"],["usize"]],["usize"]]],[10,"layer1","","Return the `usize` from the array of usizes that indicates…",9,[[["self"],["usize"]],["usize"]]],[10,"layer0","","Return a `usize` that maps to the direct 1:1 association…",9,[[["self"],["usize"]],["usize"]]],[10,"contains","","Allows checking if set bit is contained in the bit set.",9,[[["u32"],["self"]],["bool"]]],[11,"iter","","Create an iterator that will scan over the keyspace",9,[[],["bititer"]]],[11,"par_iter","","Create a parallel iterator that will scan over the keyspace",9,[[],["bitpariter"]]],[8,"DrainableBitSet","","A extension to the [`BitSetLike`] trait which allows…",null,null],[10,"remove","","Removes bit from the bit set.",10,[[["self"],["u32"]],["bool"]]],[11,"drain","","Create a draining iterator that will scan over the…",10,[[["self"]],["drainbititer"]]],[11,"new","","Creates an empty `BitSet`.",11,[[],["bitset"]]],[11,"with_capacity","","Creates an empty `BitSet`, preallocated for up to `max`…",11,[[["u32"]],["bitset"]]],[11,"add","","Adds `id` to the `BitSet`. Returns `true` if the value was…",11,[[["self"],["u32"]],["bool"]]],[11,"remove","","Removes `id` from the set, returns `true` if the value was…",11,[[["self"],["u32"]],["bool"]]],[11,"contains","","Returns `true` if `id` is in the set.",11,[[["u32"],["self"]],["bool"]]],[11,"contains_set","","Returns `true` if all ids in `other` are contained in this…",11,[[["self"],["bitset"]],["bool"]]],[11,"clear","","Completely wipes out the bit set.",11,[[["self"]]]],[18,"BITS_PER_USIZE","","How many bits are in a `usize`.",11,null],[11,"layer0_as_slice","","Returns the bottom layer of the bitset as a slice. Each…",11,[[["self"]]]],[18,"LAYER1_GRANULARITY","","How many `Index`es are described by as single layer 1 bit,…",11,null],[11,"layer1_as_slice","","Returns the second layer of the bitset as a slice. Each…",11,[[["self"]]]],[18,"LAYER2_GRANULARITY","","How many `Index`es are described by as single layer 2 bit,…",11,null],[11,"layer2_as_slice","","Returns the third layer of the bitset as a slice. Each bit…",11,[[["self"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"par_bridge","","",8,[[],["iterbridge"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"par_bridge","","",6,[[],["iterbridge"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_par_iter","","",7,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"layer3","","",5,[[["self"]],["usize"]]],[11,"layer2","","",5,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",5,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",5,[[["self"],["usize"]],["usize"]]],[11,"contains","","",5,[[["u32"],["self"]],["bool"]]],[11,"layer3","","",1,[[["self"]],["usize"]]],[11,"layer2","","",1,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",1,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",1,[[["self"],["usize"]],["usize"]]],[11,"contains","","",1,[[["u32"],["self"]],["bool"]]],[11,"layer3","","",3,[[["self"]],["usize"]]],[11,"layer2","","",3,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",3,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",3,[[["self"],["usize"]],["usize"]]],[11,"contains","","",3,[[["u32"],["self"]],["bool"]]],[11,"layer3","","",2,[[["self"]],["usize"]]],[11,"layer2","","",2,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",2,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",2,[[["self"],["usize"]],["usize"]]],[11,"contains","","",2,[[["u32"],["self"]],["bool"]]],[11,"layer3","","",4,[[["self"]],["usize"]]],[11,"layer2","","",4,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",4,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",4,[[["self"],["usize"]],["usize"]]],[11,"contains","","",4,[[["u32"],["self"]],["bool"]]],[11,"layer3","","",12,[[["self"]],["usize"]]],[11,"layer2","","",12,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",12,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",12,[[["self"],["usize"]],["usize"]]],[11,"contains","","",12,[[["u32"],["self"]],["bool"]]],[11,"layer3","","",11,[[["self"]],["usize"]]],[11,"layer2","","",11,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",11,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",11,[[["self"],["usize"]],["usize"]]],[11,"contains","","",11,[[["u32"],["self"]],["bool"]]],[11,"remove","","",5,[[["self"],["u32"]],["bool"]]],[11,"remove","","",1,[[["self"],["u32"]],["bool"]]],[11,"remove","","",3,[[["self"],["u32"]],["bool"]]],[11,"remove","","",11,[[["self"],["u32"]],["bool"]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"extend","","",11,[[["self"],["t"]]]],[11,"extend","","",5,[[["self"],["t"]]]],[11,"extend","","",5,[[["self"],["t"]]]],[11,"into_iter","","",11,[[]]],[11,"into_iter","","",5,[[]]],[11,"into_iter","","",2,[[]]],[11,"into_iter","","",1,[[]]],[11,"into_iter","","",3,[[]]],[11,"into_iter","","",4,[[]]],[11,"into_iter","","",12,[[]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"clone","","",8,[[["self"]],["bititer"]]],[11,"clone","","",1,[[["self"]],["bitsetand"]]],[11,"clone","","",3,[[["self"]],["bitsetor"]]],[11,"clone","","",2,[[["self"]],["bitsetnot"]]],[11,"clone","","",4,[[["self"]],["bitsetxor"]]],[11,"clone","","",12,[[["self"]],["bitsetall"]]],[11,"clone","","",11,[[["self"]],["bitset"]]],[11,"default","","",5,[[],["self"]]],[11,"default","","",11,[[],["bitset"]]],[11,"eq","","",11,[[["self"],["bitset"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"not","","",11,[[]]],[11,"not","","",5,[[]]],[11,"not","","",2,[[]]],[11,"not","","",1,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",12,[[]]],[11,"bitand","","",11,[[["t"]]]],[11,"bitand","","",5,[[["t"]]]],[11,"bitand","","",2,[[["t"]]]],[11,"bitand","","",1,[[["t"]]]],[11,"bitand","","",3,[[["t"]]]],[11,"bitand","","",4,[[["t"]]]],[11,"bitand","","",12,[[["t"]]]],[11,"bitor","","",11,[[["t"]]]],[11,"bitor","","",5,[[["t"]]]],[11,"bitor","","",2,[[["t"]]]],[11,"bitor","","",1,[[["t"]]]],[11,"bitor","","",3,[[["t"]]]],[11,"bitor","","",4,[[["t"]]]],[11,"bitor","","",12,[[["t"]]]],[11,"bitxor","","",11,[[["t"]]]],[11,"bitxor","","",5,[[["t"]]]],[11,"bitxor","","",2,[[["t"]]]],[11,"bitxor","","",1,[[["t"]]]],[11,"bitxor","","",3,[[["t"]]]],[11,"bitxor","","",4,[[["t"]]]],[11,"bitxor","","",12,[[["t"]]]],[11,"bitand_assign","","",11,[[["self"],["b"]]]],[11,"bitor_assign","","",11,[[["self"],["b"]]]],[11,"bitxor_assign","","",11,[[["self"],["b"]]]],[11,"from_iter","","",11,[[["t"]],["self"]]],[11,"from_iter","","",11,[[["t"]],["self"]]],[11,"from_iter","","",5,[[["t"]],["self"]]],[11,"from_iter","","",5,[[["t"]],["self"]]],[11,"split","","How the splitting is done:",0,[[]]],[11,"fold_with","","",0,[[["f"]],["f"]]],[11,"drive_unindexed","","",7,[[["c"]]]]],"p":[[3,"BitProducer"],[3,"BitSetAnd"],[3,"BitSetNot"],[3,"BitSetOr"],[3,"BitSetXor"],[3,"AtomicBitSet"],[3,"DrainBitIter"],[3,"BitParIter"],[3,"BitIter"],[8,"BitSetLike"],[8,"DrainableBitSet"],[3,"BitSet"],[3,"BitSetAll"]]};
searchIndex["kurbo"] = {"doc":"A garden of data structures for manipulating 2D shapes and…","i":[[3,"Affine","kurbo","A 2D affine transform.",null,null],[3,"Arc","","A single arc segment.",null,null],[12,"center","","The arc's centre point.",0,null],[12,"radii","","The arc's radii, where the vector's x-component is the…",0,null],[12,"start_angle","","The start angle in radians.",0,null],[12,"sweep_angle","","The angle between the start and end of the arc, in radians.",0,null],[12,"x_rotation","","How much the arc is rotated, in radians.",0,null],[3,"BezPath","","A path that can Bézier segments up to cubic, possibly with…",null,null],[3,"Circle","","A circle.",null,null],[12,"center","","The center.",1,null],[12,"radius","","The radius.",1,null],[3,"CubicBez","","A single cubic Bézier segment.",null,null],[12,"p0","","",2,null],[12,"p1","","",2,null],[12,"p2","","",2,null],[12,"p3","","",2,null],[3,"Insets","","Insets from the edges of a rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",3,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",3,null],[12,"x1","","The maximum x coordinate (right edge).",3,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",3,null],[3,"Line","","A single line.",null,null],[12,"p0","","The line's start point.",4,null],[12,"p1","","The line's end point.",4,null],[3,"ConstPoint","","A trivial \"curve\" that is just a constant.",null,null],[3,"Point","","A 2D point.",null,null],[12,"x","","The x coordinate.",5,null],[12,"y","","The y coordinate.",5,null],[3,"QuadBez","","A single quadratic Bézier segment.",null,null],[12,"p0","","",6,null],[12,"p1","","",6,null],[12,"p2","","",6,null],[3,"Rect","","A rectangle.",null,null],[12,"x0","","The minimum x coordinate (left edge).",7,null],[12,"y0","","The minimum y coordinate (top edge in y-down spaces).",7,null],[12,"x1","","The maximum x coordinate (right edge).",7,null],[12,"y1","","The maximum y coordinate (bottom edge in y-down spaces).",7,null],[3,"RoundedRect","","A rectangle with equally rounded corners.",null,null],[3,"Size","","A 2D size.",null,null],[12,"width","","The width.",8,null],[12,"height","","The height.",8,null],[3,"SvgArc","","A single SVG arc segment.",null,null],[12,"from","","The arc's start point.",9,null],[12,"to","","The arc's end point.",9,null],[12,"radii","","The arc's radii, where the vector's x-component is the…",9,null],[12,"x_rotation","","How much the arc is rotated, in radians.",9,null],[12,"large_arc","","Does this arc sweep through more than π radians?",9,null],[12,"sweep","","Determines if the arc should begin moving at positive…",9,null],[3,"TranslateScale","","A transformation including scaling and translation.",null,null],[3,"Vec2","","A 2D vector.",null,null],[12,"x","","The x-coordinate.",10,null],[12,"y","","The y-coordinate.",10,null],[4,"PathEl","","The element of a Bézier path.",null,null],[13,"MoveTo","","Move directly to the point without drawing anything,…",11,null],[13,"LineTo","","Draw a line from the current location to the point.",11,null],[13,"QuadTo","","Draw a quadratic bezier using the current location and the…",11,null],[13,"CurveTo","","Draw a cubic bezier using the current location and the…",11,null],[13,"ClosePath","","Close off the path.",11,null],[4,"PathSeg","","A segment of a Bézier path.",null,null],[13,"Line","","A line segment.",12,null],[13,"Quad","","A quadratic bezier segment.",12,null],[13,"Cubic","","A cubic bezier segment.",12,null],[4,"SvgParseError","","An error which can be returned when parsing an SVG.",null,null],[13,"Wrong","","A number was expected.",13,null],[13,"UnexpectedEof","","The input string ended while still expecting input.",13,null],[13,"UnknownCommand","","Encountered an unknown command letter.",13,null],[18,"FLIP_Y","","A transform that is flipped on the y-axis. Useful for…",14,null],[18,"FLIP_X","","A transform that is flipped on the x-axis.",14,null],[11,"new","","Construct an affine transform from coefficients.",14,[[],["affine"]]],[11,"scale","","An affine transform representing uniform scaling.",14,[[["f64"]],["affine"]]],[11,"scale_non_uniform","","An affine transform representing non-uniform scaling with…",14,[[["f64"]],["affine"]]],[11,"rotate","","An affine transform representing rotation.",14,[[["f64"]],["affine"]]],[11,"translate","","An affine transform representing translation.",14,[[["vec2"],["into",["vec2"]]],["affine"]]],[11,"as_coeffs","","Get the coefficients of the transform.",14,[[]]],[11,"determinant","","Compute the determinant of this transform.",14,[[],["f64"]]],[11,"inverse","","Compute the inverse transform.",14,[[],["affine"]]],[11,"transform_rect_bbox","","Compute the bounding box of a transformed rectangle.",14,[[["rect"]],["rect"]]],[11,"append_iter","","Create an iterator generating Bezier path elements.",0,[[["f64"],["self"]],["arcappenditer"]]],[11,"to_cubic_beziers","","Converts an Arc into a series of cubic bezier segments.",0,[[["f64"],["p"]]]],[11,"new","","Create a new path.",15,[[],["bezpath"]]],[11,"from_vec","","Create a path from a vector of path elements.",15,[[["vec",["pathel"]],["pathel"]],["bezpath"]]],[11,"push","","Push a generic path element onto the path.",15,[[["self"],["pathel"]]]],[11,"move_to","","Push a \"move to\" element onto the path.",15,[[["point"],["self"],["into",["point"]]]]],[11,"line_to","","Push a \"line to\" element onto the path.",15,[[["point"],["self"],["into",["point"]]]]],[11,"quad_to","","Push a \"quad to\" element onto the path.",15,[[["point"],["self"],["into",["point"]]]]],[11,"curve_to","","Push a \"curve to\" element onto the path.",15,[[["point"],["self"],["into",["point"]]]]],[11,"close_path","","Push a \"close path\" element onto the path.",15,[[["self"]]]],[11,"elements","","Get the path elements.",15,[[["self"]]]],[11,"iter","","Returns an iterator over the path's elements.",15,[[["self"]]]],[11,"segments","","Iterate over the path segments.",15,[[["self"]]]],[11,"get_seg","","Get the segment at the given element index.",15,[[["self"],["usize"]],[["pathseg"],["option",["pathseg"]]]]],[11,"is_empty","","Returns `true` if the path contains no segments.",15,[[["self"]],["bool"]]],[11,"apply_affine","","Apply an affine transform to the path.",15,[[["self"],["affine"]]]],[11,"nearest","","Find the nearest point.",15,[[["point"],["f64"],["self"]]]],[11,"reverse","","Returns a new `PathSeg` describing the same path as…",12,[[["self"]],["pathseg"]]],[11,"to_cubic","","Convert this segment to a cubic bezier.",12,[[["self"]],["cubicbez"]]],[11,"new","","A new circle from center and radius.",1,[[["f64"]],["circle"]]],[0,"common","","Common mathematical operations",null,null],[5,"solve_cubic","kurbo::common","Find real roots of cubic equation.",null,[[["f64"]],["arrayvec"]]],[5,"solve_quadratic","","Find real roots of quadratic equation.",null,[[["f64"]],["arrayvec"]]],[17,"GAUSS_LEGENDRE_COEFFS_3","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_5","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_7","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_9","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_11","","",null,null],[17,"GAUSS_LEGENDRE_COEFFS_24","","",null,null],[11,"new","kurbo","Create a new cubic Bézier segment.",2,[[["point"],["into",["point"]]],["cubicbez"]]],[11,"to_quads","","Convert to quadratic Béziers.",2,[[["f64"],["self"]]]],[18,"ZERO","","Zero'd insets.",3,null],[11,"uniform","","New uniform insets.",3,[[["f64"]],["insets"]]],[11,"uniform_xy","","New insets with uniform values along each axis.",3,[[["f64"]],["insets"]]],[11,"new","","New insets. The ordering of the arguments is \"left, top,…",3,[[["f64"]],["insets"]]],[11,"x_value","","The total delta on the x-axis represented by these insets.",3,[[],["f64"]]],[11,"y_value","","The total delta on the y-axis represented by these insets.",3,[[],["f64"]]],[11,"are_nonnegative","","Return `true` iff all values are nonnegative.",3,[[],["bool"]]],[11,"nonnegative","","Return new `Insets` with all negative values replaced with…",3,[[],["insets"]]],[11,"new","","Create a new line.",4,[[["point"],["into",["point"]]],["line"]]],[18,"ZERO","","The point (0, 0).",5,null],[18,"ORIGIN","","The point at the origin; (0, 0).",5,null],[11,"new","","Create a new `Point` with the provided `x` and `y`…",5,[[["f64"]],["self"]]],[11,"to_vec2","","Convert this point into a `Vec2`.",5,[[],["vec2"]]],[11,"lerp","","Linearly interpolate between two points.",5,[[["point"],["f64"]],["point"]]],[11,"midpoint","","Determine the midpoint of two points.",5,[[["point"]],["point"]]],[11,"distance","","Euclidean distance.",5,[[["point"]],["f64"]]],[11,"round","","A new `Point`, with each of x and y rounded to the nearest…",5,[[],["point"]]],[11,"new","","Create a new quadratic Bézier segment.",6,[[["point"],["into",["point"]]],["quadbez"]]],[11,"raise","","Raise the order by 1.",6,[[["self"]],["cubicbez"]]],[18,"ZERO","","The empty rectangle at the origin.",7,null],[11,"new","","A new rectangle from minimum and maximum coordinates.",7,[[["f64"]],["rect"]]],[11,"from_points","","A new rectangle from two points.",7,[[],["rect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",7,[[],["rect"]]],[11,"with_origin","","Create a new `Rect` with the same size as `self` and a new…",7,[[],["rect"]]],[11,"with_size","","Create a new `Rect` with the same origin as `self` and a…",7,[[],["rect"]]],[11,"inset","","Create a new `Rect` by applying the [`Insets`].",7,[[],["rect"]]],[11,"width","","The width of the rectangle.",7,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",7,[[["self"]],["f64"]]],[11,"min_x","","Returns the minimum value for the x-coordinate of the…",7,[[["self"]],["f64"]]],[11,"max_x","","Returns the maximum value for the x-coordinate of the…",7,[[["self"]],["f64"]]],[11,"min_y","","Returns the minimum value for the y-coordinate of the…",7,[[["self"]],["f64"]]],[11,"max_y","","Returns the maximum value for the y-coordinate of the…",7,[[["self"]],["f64"]]],[11,"origin","","The origin of the rectangle.",7,[[["self"]],["point"]]],[11,"size","","The size of the rectangle.",7,[[["self"]],["size"]]],[11,"area","","The area of the rectangle.",7,[[["self"]],["f64"]]],[11,"center","","The center point of the rectangle.",7,[[["self"]],["point"]]],[11,"contains","","Returns `true` if `point` lies within `self`.",7,[[["point"],["self"]],["bool"]]],[11,"abs","","Take absolute value of width and height.",7,[[["self"]],["rect"]]],[11,"union","","The smallest rectangle enclosing two rectangles.",7,[[["rect"],["self"]],["rect"]]],[11,"union_pt","","Compute the union with one point.",7,[[["point"],["self"]],["rect"]]],[11,"intersect","","The intersection of two rectangles.",7,[[["rect"],["self"]],["rect"]]],[11,"inflate","","Expand a rectangle by a constant amount in both directions.",7,[[["f64"],["self"]],["rect"]]],[11,"round","","A new `Rect`, with each coordinate value rounded to the…",7,[[],["rect"]]],[11,"to_rounded_rect","","Creates a new [`RoundedRect`] from this `Rect` and the…",7,[[["f64"]],["roundedrect"]]],[11,"new","","A new rectangle from minimum and maximum coordinates.",16,[[["f64"]],["roundedrect"]]],[11,"from_rect","","A new rounded rectangle from a rectangle and corner radius.",16,[[["rect"],["f64"]],["roundedrect"]]],[11,"from_points","","A new rectangle from two points.",16,[[["point"],["f64"]],["roundedrect"]]],[11,"from_origin_size","","A new rectangle from origin and size.",16,[[["point"],["vec2"],["f64"]],["roundedrect"]]],[11,"width","","The width of the rectangle.",16,[[["self"]],["f64"]]],[11,"height","","The height of the rectangle.",16,[[["self"]],["f64"]]],[11,"radius","","Radius of the rounded corners.",16,[[["self"]],["f64"]]],[11,"rect","","The (non-rounded) rectangle.",16,[[["self"]],["rect"]]],[11,"origin","","The origin of the rectangle.",16,[[["self"]],["point"]]],[11,"center","","The center point of the rectangle.",16,[[["self"]],["point"]]],[18,"ZERO","","A size with zero width or height.",8,null],[11,"new","","Create a new `Size` with the provided `width` and `height`.",8,[[["f64"]],["self"]]],[11,"clamp","","Returns a new size bounded by `min` and `max.`",8,[[["size"]],["self"]]],[11,"to_vec2","","Convert this size into a `Vec2`, with `width` mapped to…",8,[[],["vec2"]]],[11,"round","","A new `Size`, with each of width and height rounded to the…",8,[[],["size"]]],[11,"from_path_segments","","Create a BezPath with segments corresponding to the…",15,[[],["bezpath"]]],[11,"to_svg","","Convert the path to an SVG path string representation.",15,[[["self"]],["string"]]],[11,"write_to","","Write the SVG representation of this path to the provided…",15,[[["self"],["write"]],["result"]]],[11,"from_svg","","Try to parse a bezier path from an SVG path element.",15,[[["str"]],[["svgparseerror"],["bezpath"],["result",["bezpath","svgparseerror"]]]]],[11,"is_straight_line","","Checks that arc is actually a straight line.",9,[[["self"]],["bool"]]],[11,"from_svg_arc","","Creates an `Arc` from a `SvgArc`.",0,[[["svgarc"]],[["arc"],["option",["arc"]]]]],[11,"new","","Create a new transformation from translation and scale.",17,[[["vec2"],["f64"]],["translatescale"]]],[11,"scale","","Create a new transformation with scale only.",17,[[["f64"]],["translatescale"]]],[11,"translate","","Create a new transformation with translation only.",17,[[["vec2"]],["translatescale"]]],[11,"as_tuple","","Decompose transformation into translation and scale.",17,[[]]],[11,"inverse","","Compute the inverse transform.",17,[[],["translatescale"]]],[18,"ZERO","","The vector (0, 0).",10,null],[11,"new","","Create a new vector.",10,[[["f64"]],["vec2"]]],[11,"to_point","","Convert this vector into a `Point`.",10,[[],["point"]]],[11,"to_size","","Convert this vector into a `Size`.",10,[[],["size"]]],[11,"dot","","Dot product of two vectors.",10,[[["vec2"],["self"]],["f64"]]],[11,"cross","","Cross product of two vectors.",10,[[["vec2"],["self"]],["f64"]]],[11,"hypot","","Magnitude of vector.",10,[[["self"]],["f64"]]],[11,"hypot2","","Magnitude squared of vector.",10,[[["self"]],["f64"]]],[11,"atan2","","Angle of vector.",10,[[["self"]],["f64"]]],[11,"from_angle","","A unit vector of the given angle.",10,[[["f64"]],["vec2"]]],[11,"lerp","","Linearly interpolate between two vectors.",10,[[["vec2"],["f64"],["self"]],["vec2"]]],[11,"normalize","","Returns a vector of magnitude 1.0 with the same angle as…",10,[[],["vec2"]]],[11,"round","","Returns a new `Vec2` with each of `x` and `y` rounded to…",10,[[],["vec2"]]],[11,"ceil","","Returns a new `Vec2` where each of `x` and `y`, with a…",10,[[],["vec2"]]],[11,"floor","","Returns a new `Vec2` where each of `x` and `y`, with a…",10,[[],["vec2"]]],[17,"MAX_EXTREMA","","The maximum number of extrema that can be reported in the…",null,null],[8,"ParamCurve","","A curve parametrized by a scalar.",null,null],[10,"eval","","Evaluate the curve at parameter `t`.",18,[[["f64"],["self"]],["point"]]],[10,"subsegment","","Get a subsegment of the curve for the given parameter range.",18,[[["range",["f64"]],["f64"],["self"]],["self"]]],[11,"subdivide","","Subdivide into (roughly) halves.",18,[[["self"]]]],[11,"start","","The start point.",18,[[["self"]],["point"]]],[11,"end","","The end point.",18,[[["self"]],["point"]]],[8,"ParamCurveDeriv","","A differentiable parametrized curve.",null,null],[16,"DerivResult","","The parametric curve obtained by taking the derivative of…",19,null],[10,"deriv","","The derivative of the curve.",19,[[["self"]]]],[11,"gauss_arclen","","Estimate arclength using Gaussian quadrature.",19,[[["self"]],["f64"]]],[8,"ParamCurveArclen","","A parametrized curve that can have its arc length measured.",null,null],[10,"arclen","","The arc length of the curve.",20,[[["f64"],["self"]],["f64"]]],[11,"inv_arclen","","Solve for the parameter that has the given arclength from…",20,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveArea","","A parametrized curve that can have its signed area measured.",null,null],[10,"signed_area","","Compute the signed area under the curve.",21,[[["self"]],["f64"]]],[8,"ParamCurveNearest","","A parametrized curve that reports the nearest point.",null,null],[10,"nearest","","Find the point on the curve nearest the given point.",22,[[["point"],["f64"],["self"]]]],[8,"ParamCurveCurvature","","A parametrized curve that reports its curvature.",null,null],[11,"curvature","","Compute the signed curvature at parameter `t`.",23,[[["f64"],["self"]],["f64"]]],[8,"ParamCurveExtrema","","A parametrized curve that reports its extrema.",null,null],[10,"extrema","","Compute the extrema of the curve.",24,[[["self"]],["arrayvec"]]],[11,"extrema_ranges","","Return parameter ranges, each of which is monotonic within…",24,[[["self"]],["arrayvec"]]],[11,"bounding_box","","The smallest rectangle that encloses the curve in the…",24,[[["self"]],["rect"]]],[8,"Shape","","A generic trait for open and closed shapes.",null,null],[16,"BezPathIter","","The iterator resulting from `to_bez_path`.",25,null],[10,"to_bez_path","","Convert to a Bézier path, as an iterator over path elements.",25,[[["f64"],["self"]]]],[11,"into_bez_path","","Convert into a Bézier path.",25,[[["f64"]],["bezpath"]]],[10,"area","","Signed area.",25,[[["self"]],["f64"]]],[10,"perimeter","","Total length of perimeter.",25,[[["f64"],["self"]],["f64"]]],[10,"winding","","Winding number of point.",25,[[["point"],["self"]],["i32"]]],[10,"bounding_box","","The smallest rectangle that encloses the shape.",25,[[["self"]],["rect"]]],[11,"as_line","","If the shape is a line, make it available.",25,[[["self"]],[["option",["line"]],["line"]]]],[11,"as_rect","","If the shape is a rectangle, make it available.",25,[[["self"]],[["option",["rect"]],["rect"]]]],[11,"as_rounded_rect","","If the shape is a rounded rectangle, make it available.",25,[[["self"]],[["roundedrect"],["option",["roundedrect"]]]]],[11,"as_circle","","If the shape is a circle, make it available.",25,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"as_path_slice","","If the shape is stored as a slice of path elements, make…",25,[[["self"]],["option"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"eval","","",12,[[["f64"],["self"]],["point"]]],[11,"subsegment","","",12,[[["range",["f64"]],["f64"],["self"]],["pathseg"]]],[11,"eval","","",2,[[["f64"],["self"]],["point"]]],[11,"start","","",2,[[["self"]],["point"]]],[11,"end","","",2,[[["self"]],["point"]]],[11,"subsegment","","",2,[[["range",["f64"]],["f64"],["self"]],["cubicbez"]]],[11,"subdivide","","Subdivide into halves, using de Casteljau.",2,[[["self"]]]],[11,"eval","","",4,[[["f64"],["self"]],["point"]]],[11,"start","","",4,[[["self"]],["point"]]],[11,"end","","",4,[[["self"]],["point"]]],[11,"subsegment","","",4,[[["range",["f64"]],["f64"],["self"]],["line"]]],[11,"eval","","",26,[[["f64"],["self"]],["point"]]],[11,"subsegment","","",26,[[["range",["f64"]],["f64"],["self"]],["constpoint"]]],[11,"eval","","",6,[[["f64"],["self"]],["point"]]],[11,"start","","",6,[[["self"]],["point"]]],[11,"end","","",6,[[["self"]],["point"]]],[11,"subdivide","","Subdivide into halves, using de Casteljau.",6,[[["self"]]]],[11,"subsegment","","",6,[[["range",["f64"]],["f64"],["self"]],["quadbez"]]],[11,"deriv","","",2,[[["self"]],["quadbez"]]],[11,"deriv","","",4,[[["self"]],["constpoint"]]],[11,"deriv","","",26,[[["self"]],["constpoint"]]],[11,"deriv","","",6,[[["self"]],["line"]]],[11,"arclen","","",12,[[["f64"],["self"]],["f64"]]],[11,"arclen","","Arclength of a cubic Bézier segment.",2,[[["f64"],["self"]],["f64"]]],[11,"arclen","","",4,[[["f64"],["self"]],["f64"]]],[11,"arclen","","",26,[[["f64"],["self"]],["f64"]]],[11,"arclen","","Arclength of a quadratic Bézier segment.",6,[[["f64"],["self"]],["f64"]]],[11,"signed_area","","",12,[[["self"]],["f64"]]],[11,"signed_area","","",2,[[["self"]],["f64"]]],[11,"signed_area","","",4,[[["self"]],["f64"]]],[11,"signed_area","","",6,[[["self"]],["f64"]]],[11,"nearest","","",12,[[["point"],["f64"],["self"]]]],[11,"nearest","","Find nearest point, using subdivision.",2,[[["point"],["f64"],["self"]]]],[11,"nearest","","",4,[[["point"],["f64"],["self"]]]],[11,"nearest","","Find nearest point, using analytical algorithm based on…",6,[[["point"],["f64"],["self"]]]],[11,"curvature","","",4,[[["f64"],["self"]],["f64"]]],[11,"extrema","","",12,[[["self"]],["arrayvec"]]],[11,"extrema","","",2,[[["self"]],["arrayvec"]]],[11,"extrema","","",4,[[["self"]],["arrayvec"]]],[11,"extrema","","",6,[[["self"]],["arrayvec"]]],[11,"to_bez_path","","",15,[[["f64"],["self"]]]],[11,"area","","Signed area.",15,[[["self"]],["f64"]]],[11,"perimeter","","",15,[[["f64"],["self"]],["f64"]]],[11,"winding","","Winding number of point.",15,[[["point"],["self"]],["i32"]]],[11,"bounding_box","","",15,[[["self"]],["rect"]]],[11,"as_path_slice","","",15,[[["self"]],["option"]]],[11,"to_bez_path","","",1,[[["f64"],["self"]],["circlepathiter"]]],[11,"area","","",1,[[["self"]],["f64"]]],[11,"perimeter","","",1,[[["f64"],["self"]],["f64"]]],[11,"winding","","",1,[[["point"],["self"]],["i32"]]],[11,"bounding_box","","",1,[[["self"]],["rect"]]],[11,"as_circle","","",1,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"to_bez_path","","",4,[[["f64"],["self"]],["linepathiter"]]],[11,"area","","Returning zero here is consistent with the contract (area…",4,[[["self"]],["f64"]]],[11,"perimeter","","",4,[[["f64"],["self"]],["f64"]]],[11,"winding","","Same consideration as `area`.",4,[[["point"],["self"]],["i32"]]],[11,"bounding_box","","",4,[[["self"]],["rect"]]],[11,"as_line","","",4,[[["self"]],[["option",["line"]],["line"]]]],[11,"to_bez_path","","",7,[[["f64"],["self"]],["rectpathiter"]]],[11,"area","","",7,[[["self"]],["f64"]]],[11,"perimeter","","",7,[[["f64"],["self"]],["f64"]]],[11,"winding","","Note: this function is carefully designed so that if the…",7,[[["point"],["self"]],["i32"]]],[11,"bounding_box","","",7,[[["self"]],["rect"]]],[11,"as_rect","","",7,[[["self"]],[["option",["rect"]],["rect"]]]],[11,"to_bez_path","","",16,[[["f64"],["self"]],["roundedrectpathiter"]]],[11,"area","","",16,[[["self"]],["f64"]]],[11,"perimeter","","",16,[[["f64"],["self"]],["f64"]]],[11,"winding","","",16,[[["point"],["self"]],["i32"]]],[11,"bounding_box","","",16,[[["self"]],["rect"]]],[11,"as_rounded_rect","","",16,[[["self"]],[["roundedrect"],["option",["roundedrect"]]]]],[11,"from","","",12,[[["cubicbez"]],["pathseg"]]],[11,"from","","",12,[[["line"]],["pathseg"]]],[11,"from","","",12,[[["quadbez"]],["pathseg"]]],[11,"from","","",3,[[["f64"]],["insets"]]],[11,"from","","",3,[[],["insets"]]],[11,"from","","",3,[[],["insets"]]],[11,"from","","",5,[[],["point"]]],[11,"from","","",7,[[],["rect"]]],[11,"from","","",7,[[],["rect"]]],[11,"from","","",8,[[],["size"]]],[11,"from","","",14,[[["translatescale"]],["affine"]]],[11,"from","","",10,[[],["vec2"]]],[11,"clone","","",14,[[["self"]],["affine"]]],[11,"clone","","",0,[[["self"]],["arc"]]],[11,"clone","","",15,[[["self"]],["bezpath"]]],[11,"clone","","",11,[[["self"]],["pathel"]]],[11,"clone","","",12,[[["self"]],["pathseg"]]],[11,"clone","","",1,[[["self"]],["circle"]]],[11,"clone","","",2,[[["self"]],["cubicbez"]]],[11,"clone","","",3,[[["self"]],["insets"]]],[11,"clone","","",4,[[["self"]],["line"]]],[11,"clone","","",26,[[["self"]],["constpoint"]]],[11,"clone","","",5,[[["self"]],["point"]]],[11,"clone","","",6,[[["self"]],["quadbez"]]],[11,"clone","","",7,[[["self"]],["rect"]]],[11,"clone","","",16,[[["self"]],["roundedrect"]]],[11,"clone","","",8,[[["self"]],["size"]]],[11,"clone","","",9,[[["self"]],["svgarc"]]],[11,"clone","","",17,[[["self"]],["translatescale"]]],[11,"clone","","",10,[[["self"]],["vec2"]]],[11,"default","","",14,[[],["affine"]]],[11,"default","","",15,[[],["bezpath"]]],[11,"default","","",1,[[],["circle"]]],[11,"default","","",3,[[],["insets"]]],[11,"default","","",5,[[],["point"]]],[11,"default","","",7,[[],["rect"]]],[11,"default","","",16,[[],["roundedrect"]]],[11,"default","","",8,[[],["size"]]],[11,"default","","",17,[[],["translatescale"]]],[11,"default","","",10,[[],["vec2"]]],[11,"eq","","",12,[[["self"],["pathseg"]],["bool"]]],[11,"ne","","",12,[[["self"],["pathseg"]],["bool"]]],[11,"eq","","",2,[[["self"],["cubicbez"]],["bool"]]],[11,"ne","","",2,[[["self"],["cubicbez"]],["bool"]]],[11,"eq","","",4,[[["self"],["line"]],["bool"]]],[11,"ne","","",4,[[["self"],["line"]],["bool"]]],[11,"eq","","",5,[[["self"],["point"]],["bool"]]],[11,"ne","","",5,[[["self"],["point"]],["bool"]]],[11,"eq","","",6,[[["quadbez"],["self"]],["bool"]]],[11,"ne","","",6,[[["quadbez"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["size"]],["bool"]]],[11,"ne","","",8,[[["self"],["size"]],["bool"]]],[11,"eq","","",10,[[["vec2"],["self"]],["bool"]]],[11,"ne","","",10,[[["vec2"],["self"]],["bool"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"div","","Note: division by a scalar is implemented by multiplying…",10,[[["f64"]],["vec2"]]],[11,"sub","","",1,[[["vec2"]],["circle"]]],[11,"sub","","",3,[[["rect"]],["rect"]]],[11,"sub","","",7,[[["insets"]],["rect"]]],[11,"sub","","",5,[[["vec2"]],["self"]]],[11,"sub","","",5,[[["point"]],["vec2"]]],[11,"sub","","",7,[[["vec2"]],["rect"]]],[11,"sub","","",7,[[["rect"]],["insets"]]],[11,"sub","","",17,[[["vec2"]],["translatescale"]]],[11,"sub","","",10,[[["vec2"]],["vec2"]]],[11,"add","","",1,[[["vec2"]],["circle"]]],[11,"add","","",3,[[["rect"]],["rect"]]],[11,"add","","",7,[[["insets"]],["rect"]]],[11,"add","","",5,[[["vec2"]],["self"]]],[11,"add","","",7,[[["vec2"]],["rect"]]],[11,"add","","",17,[[["vec2"]],["translatescale"]]],[11,"add","","",10,[[["translatescale"]],["translatescale"]]],[11,"add","","",10,[[["vec2"]],["vec2"]]],[11,"mul","","",14,[[["point"]],["point"]]],[11,"mul","","",14,[[["affine"]],["affine"]]],[11,"mul","","",14,[[["pathel"]],["pathel"]]],[11,"mul","","",14,[[["bezpath"]],["bezpath"]]],[11,"mul","","",14,[[["bezpath"]],["bezpath"]]],[11,"mul","","",17,[[["pathel"]],["pathel"]]],[11,"mul","","",17,[[["bezpath"]],["bezpath"]]],[11,"mul","","",17,[[["bezpath"]],["bezpath"]]],[11,"mul","","",14,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",14,[[["line"]],["line"]]],[11,"mul","","",14,[[["quadbez"]],["quadbez"]]],[11,"mul","","",8,[[["f64"]],["size"]]],[11,"mul","","",17,[[["point"]],["point"]]],[11,"mul","","",17,[[["translatescale"]],["translatescale"]]],[11,"mul","","",17,[[["circle"]],["circle"]]],[11,"mul","","",17,[[["line"]],["line"]]],[11,"mul","","",17,[[["rect"]],["rect"]]],[11,"mul","","",17,[[["roundedrect"]],["roundedrect"]]],[11,"mul","","",17,[[["quadbez"]],["quadbez"]]],[11,"mul","","",17,[[["cubicbez"]],["cubicbez"]]],[11,"mul","","",10,[[["f64"]],["vec2"]]],[11,"neg","","",3,[[],["insets"]]],[11,"neg","","",10,[[],["vec2"]]],[11,"add_assign","","",5,[[["vec2"],["self"]]]],[11,"add_assign","","",17,[[["vec2"],["self"]]]],[11,"add_assign","","",10,[[["vec2"],["self"]]]],[11,"sub_assign","","",5,[[["vec2"],["self"]]]],[11,"sub_assign","","",17,[[["vec2"],["self"]]]],[11,"sub_assign","","",10,[[["vec2"],["self"]]]],[11,"mul_assign","","",14,[[["self"],["affine"]]]],[11,"mul_assign","","",8,[[["self"],["f64"]]]],[11,"mul_assign","","",17,[[["translatescale"],["self"]]]],[11,"mul_assign","","",10,[[["self"],["f64"]]]],[11,"div_assign","","",10,[[["self"],["f64"]]]],[11,"from_iter","","",15,[[["intoiterator"]],["self"]]],[11,"subdivide","","Subdivide into (roughly) halves.",18,[[["self"]]]],[11,"start","","The start point.",18,[[["self"]],["point"]]],[11,"end","","The end point.",18,[[["self"]],["point"]]],[11,"gauss_arclen","","Estimate arclength using Gaussian quadrature.",19,[[["self"]],["f64"]]],[11,"inv_arclen","","Solve for the parameter that has the given arclength from…",20,[[["f64"],["self"]],["f64"]]],[11,"curvature","","Compute the signed curvature at parameter `t`.",23,[[["f64"],["self"]],["f64"]]],[11,"extrema_ranges","","Return parameter ranges, each of which is monotonic within…",24,[[["self"]],["arrayvec"]]],[11,"bounding_box","","The smallest rectangle that encloses the curve in the…",24,[[["self"]],["rect"]]],[11,"into_bez_path","","Convert into a Bézier path.",25,[[["f64"]],["bezpath"]]],[11,"as_line","","If the shape is a line, make it available.",25,[[["self"]],[["option",["line"]],["line"]]]],[11,"as_rect","","If the shape is a rectangle, make it available.",25,[[["self"]],[["option",["rect"]],["rect"]]]],[11,"as_rounded_rect","","If the shape is a rounded rectangle, make it available.",25,[[["self"]],[["roundedrect"],["option",["roundedrect"]]]]],[11,"as_circle","","If the shape is a circle, make it available.",25,[[["self"]],[["circle"],["option",["circle"]]]]],[11,"as_path_slice","","If the shape is stored as a slice of path elements, make…",25,[[["self"]],["option"]]]],"p":[[3,"Arc"],[3,"Circle"],[3,"CubicBez"],[3,"Insets"],[3,"Line"],[3,"Point"],[3,"QuadBez"],[3,"Rect"],[3,"Size"],[3,"SvgArc"],[3,"Vec2"],[4,"PathEl"],[4,"PathSeg"],[4,"SvgParseError"],[3,"Affine"],[3,"BezPath"],[3,"RoundedRect"],[3,"TranslateScale"],[8,"ParamCurve"],[8,"ParamCurveDeriv"],[8,"ParamCurveArclen"],[8,"ParamCurveArea"],[8,"ParamCurveNearest"],[8,"ParamCurveCurvature"],[8,"ParamCurveExtrema"],[8,"Shape"],[3,"ConstPoint"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",35,null],[12,"ee_origin","","",35,null],[12,"ee_type","","",35,null],[12,"ee_code","","",35,null],[12,"ee_pad","","",35,null],[12,"ee_info","","",35,null],[12,"ee_data","","",35,null],[3,"epoll_event","","",null,null],[12,"events","","",36,null],[12,"u64","","",36,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",37,null],[12,"sun_path","","",37,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",38,null],[3,"utsname","","",null,null],[12,"sysname","","",39,null],[12,"nodename","","",39,null],[12,"release","","",39,null],[12,"version","","",39,null],[12,"machine","","",39,null],[12,"domainname","","",39,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",40,null],[12,"sigev_signo","","",40,null],[12,"sigev_notify","","",40,null],[12,"sigev_notify_thread_id","","",40,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",41,null],[12,"rlim_max","","",41,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",42,null],[12,"gl_pathv","","",42,null],[12,"gl_offs","","",42,null],[12,"gl_flags","","",42,null],[3,"passwd","","",null,null],[12,"pw_name","","",43,null],[12,"pw_passwd","","",43,null],[12,"pw_uid","","",43,null],[12,"pw_gid","","",43,null],[12,"pw_gecos","","",43,null],[12,"pw_dir","","",43,null],[12,"pw_shell","","",43,null],[3,"spwd","","",null,null],[12,"sp_namp","","",44,null],[12,"sp_pwdp","","",44,null],[12,"sp_lstchg","","",44,null],[12,"sp_min","","",44,null],[12,"sp_max","","",44,null],[12,"sp_warn","","",44,null],[12,"sp_inact","","",44,null],[12,"sp_expire","","",44,null],[12,"sp_flag","","",44,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",45,null],[12,"dqb_bsoftlimit","","",45,null],[12,"dqb_curspace","","",45,null],[12,"dqb_ihardlimit","","",45,null],[12,"dqb_isoftlimit","","",45,null],[12,"dqb_curinodes","","",45,null],[12,"dqb_btime","","",45,null],[12,"dqb_itime","","",45,null],[12,"dqb_valid","","",45,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",46,null],[12,"ssi_errno","","",46,null],[12,"ssi_code","","",46,null],[12,"ssi_pid","","",46,null],[12,"ssi_uid","","",46,null],[12,"ssi_fd","","",46,null],[12,"ssi_tid","","",46,null],[12,"ssi_band","","",46,null],[12,"ssi_overrun","","",46,null],[12,"ssi_trapno","","",46,null],[12,"ssi_status","","",46,null],[12,"ssi_int","","",46,null],[12,"ssi_ptr","","",46,null],[12,"ssi_utime","","",46,null],[12,"ssi_stime","","",46,null],[12,"ssi_addr","","",46,null],[12,"ssi_addr_lsb","","",46,null],[12,"ssi_syscall","","",46,null],[12,"ssi_call_addr","","",46,null],[12,"ssi_arch","","",46,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",47,null],[12,"it_value","","",47,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",48,null],[12,"mr_type","","",48,null],[12,"mr_alen","","",48,null],[12,"mr_address","","",48,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",49,null],[12,"if_name","","",49,null],[3,"msginfo","","",null,null],[12,"msgpool","","",50,null],[12,"msgmap","","",50,null],[12,"msgmax","","",50,null],[12,"msgmnb","","",50,null],[12,"msgmni","","",50,null],[12,"msgssz","","",50,null],[12,"msgtql","","",50,null],[12,"msgseg","","",50,null],[3,"sembuf","","",null,null],[12,"sem_num","","",51,null],[12,"sem_op","","",51,null],[12,"sem_flg","","",51,null],[3,"input_event","","",null,null],[12,"time","","",52,null],[12,"type_","","",52,null],[12,"code","","",52,null],[12,"value","","",52,null],[3,"input_id","","",null,null],[12,"bustype","","",53,null],[12,"vendor","","",53,null],[12,"product","","",53,null],[12,"version","","",53,null],[3,"input_absinfo","","",null,null],[12,"value","","",54,null],[12,"minimum","","",54,null],[12,"maximum","","",54,null],[12,"fuzz","","",54,null],[12,"flat","","",54,null],[12,"resolution","","",54,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",55,null],[12,"len","","",55,null],[12,"index","","",55,null],[12,"keycode","","",55,null],[12,"scancode","","",55,null],[3,"input_mask","","",null,null],[12,"type_","","",56,null],[12,"codes_size","","",56,null],[12,"codes_ptr","","",56,null],[3,"ff_replay","","",null,null],[12,"length","","",57,null],[12,"delay","","",57,null],[3,"ff_trigger","","",null,null],[12,"button","","",58,null],[12,"interval","","",58,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",59,null],[12,"attack_level","","",59,null],[12,"fade_length","","",59,null],[12,"fade_level","","",59,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",60,null],[12,"envelope","","",60,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",61,null],[12,"end_level","","",61,null],[12,"envelope","","",61,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",62,null],[12,"left_saturation","","",62,null],[12,"right_coeff","","",62,null],[12,"left_coeff","","",62,null],[12,"deadband","","",62,null],[12,"center","","",62,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",63,null],[12,"period","","",63,null],[12,"magnitude","","",63,null],[12,"offset","","",63,null],[12,"phase","","",63,null],[12,"envelope","","",63,null],[12,"custom_len","","",63,null],[12,"custom_data","","",63,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",64,null],[12,"weak_magnitude","","",64,null],[3,"ff_effect","","",null,null],[12,"type_","","",65,null],[12,"id","","",65,null],[12,"direction","","",65,null],[12,"trigger","","",65,null],[12,"replay","","",65,null],[12,"u","","",65,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",66,null],[12,"dlpi_name","","",66,null],[12,"dlpi_phdr","","",66,null],[12,"dlpi_phnum","","",66,null],[12,"dlpi_adds","","",66,null],[12,"dlpi_subs","","",66,null],[12,"dlpi_tls_modid","","",66,null],[12,"dlpi_tls_data","","",66,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",68,null],[12,"e_type","","",68,null],[12,"e_machine","","",68,null],[12,"e_version","","",68,null],[12,"e_entry","","",68,null],[12,"e_phoff","","",68,null],[12,"e_shoff","","",68,null],[12,"e_flags","","",68,null],[12,"e_ehsize","","",68,null],[12,"e_phentsize","","",68,null],[12,"e_phnum","","",68,null],[12,"e_shentsize","","",68,null],[12,"e_shnum","","",68,null],[12,"e_shstrndx","","",68,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",70,null],[12,"st_info","","",70,null],[12,"st_other","","",70,null],[12,"st_shndx","","",70,null],[12,"st_value","","",70,null],[12,"st_size","","",70,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_flags","","",71,null],[12,"p_align","","",71,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",72,null],[12,"p_flags","","",72,null],[12,"p_offset","","",72,null],[12,"p_vaddr","","",72,null],[12,"p_paddr","","",72,null],[12,"p_filesz","","",72,null],[12,"p_memsz","","",72,null],[12,"p_align","","",72,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",74,null],[12,"sh_type","","",74,null],[12,"sh_flags","","",74,null],[12,"sh_addr","","",74,null],[12,"sh_offset","","",74,null],[12,"sh_size","","",74,null],[12,"sh_link","","",74,null],[12,"sh_info","","",74,null],[12,"sh_addralign","","",74,null],[12,"sh_entsize","","",74,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",76,null],[12,"ch_reserved","","",76,null],[12,"ch_size","","",76,null],[12,"ch_addralign","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",84,null],[12,"nl_pid","","",84,null],[12,"nl_groups","","",84,null],[3,"dirent","","",null,null],[12,"d_ino","","",85,null],[12,"d_off","","",85,null],[12,"d_reclen","","",85,null],[12,"d_type","","",85,null],[12,"d_name","","",85,null],[3,"dirent64","","",null,null],[12,"d_ino","","",86,null],[12,"d_off","","",86,null],[12,"d_reclen","","",86,null],[12,"d_type","","",86,null],[12,"d_name","","",86,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",87,null],[12,"salg_type","","",87,null],[12,"salg_feat","","",87,null],[12,"salg_mask","","",87,null],[12,"salg_name","","",87,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",88,null],[12,"iv","","",88,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",89,null],[12,"mq_maxmsg","","",89,null],[12,"mq_msgsize","","",89,null],[12,"mq_curmsgs","","",89,null],[3,"statx","","",null,null],[12,"stx_mask","","",90,null],[12,"stx_blksize","","",90,null],[12,"stx_attributes","","",90,null],[12,"stx_nlink","","",90,null],[12,"stx_uid","","",90,null],[12,"stx_gid","","",90,null],[12,"stx_mode","","",90,null],[12,"__statx_pad1","","",90,null],[12,"stx_ino","","",90,null],[12,"stx_size","","",90,null],[12,"stx_blocks","","",90,null],[12,"stx_attributes_mask","","",90,null],[12,"stx_atime","","",90,null],[12,"stx_btime","","",90,null],[12,"stx_ctime","","",90,null],[12,"stx_mtime","","",90,null],[12,"stx_rdev_major","","",90,null],[12,"stx_rdev_minor","","",90,null],[12,"stx_dev_major","","",90,null],[12,"stx_dev_minor","","",90,null],[12,"__statx_pad2","","",90,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",91,null],[12,"tv_nsec","","",91,null],[12,"__statx_timestamp_pad1","","",91,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",92,null],[12,"aio_lio_opcode","","",92,null],[12,"aio_reqprio","","",92,null],[12,"aio_buf","","",92,null],[12,"aio_nbytes","","",92,null],[12,"aio_sigevent","","",92,null],[12,"aio_offset","","",92,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",93,null],[12,"e_exit","","",93,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",94,null],[12,"tv_usec","","",94,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",95,null],[12,"gl_pathv","","",95,null],[12,"gl_offs","","",95,null],[12,"gl_flags","","",95,null],[3,"msghdr","","",null,null],[12,"msg_name","","",96,null],[12,"msg_namelen","","",96,null],[12,"msg_iov","","",96,null],[12,"msg_iovlen","","",96,null],[12,"msg_control","","",96,null],[12,"msg_controllen","","",96,null],[12,"msg_flags","","",96,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",97,null],[12,"cmsg_level","","",97,null],[12,"cmsg_type","","",97,null],[3,"termios","","",null,null],[12,"c_iflag","","",98,null],[12,"c_oflag","","",98,null],[12,"c_cflag","","",98,null],[12,"c_lflag","","",98,null],[12,"c_line","","",98,null],[12,"c_cc","","",98,null],[12,"c_ispeed","","",98,null],[12,"c_ospeed","","",98,null],[3,"mallinfo","","",null,null],[12,"arena","","",99,null],[12,"ordblks","","",99,null],[12,"smblks","","",99,null],[12,"hblks","","",99,null],[12,"hblkhd","","",99,null],[12,"usmblks","","",99,null],[12,"fsmblks","","",99,null],[12,"uordblks","","",99,null],[12,"fordblks","","",99,null],[12,"keepcost","","",99,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",100,null],[12,"nlmsg_type","","",100,null],[12,"nlmsg_flags","","",100,null],[12,"nlmsg_seq","","",100,null],[12,"nlmsg_pid","","",100,null],[3,"nlmsgerr","","",null,null],[12,"error","","",101,null],[12,"msg","","",101,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",102,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",103,null],[12,"nm_block_nr","","",103,null],[12,"nm_frame_size","","",103,null],[12,"nm_frame_nr","","",103,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",104,null],[12,"nm_len","","",104,null],[12,"nm_group","","",104,null],[12,"nm_pid","","",104,null],[12,"nm_uid","","",104,null],[12,"nm_gid","","",104,null],[3,"nlattr","","",null,null],[12,"nla_len","","",105,null],[12,"nla_type","","",105,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",106,null],[12,"rt_dst","","",106,null],[12,"rt_gateway","","",106,null],[12,"rt_genmask","","",106,null],[12,"rt_flags","","",106,null],[12,"rt_pad2","","",106,null],[12,"rt_pad3","","",106,null],[12,"rt_tos","","",106,null],[12,"rt_class","","",106,null],[12,"rt_pad4","","",106,null],[12,"rt_metric","","",106,null],[12,"rt_dev","","",106,null],[12,"rt_mtu","","",106,null],[12,"rt_window","","",106,null],[12,"rt_irtt","","",106,null],[3,"utmpx","","",null,null],[12,"ut_type","","",107,null],[12,"ut_pid","","",107,null],[12,"ut_line","","",107,null],[12,"ut_id","","",107,null],[12,"ut_user","","",107,null],[12,"ut_host","","",107,null],[12,"ut_exit","","",107,null],[12,"ut_session","","",107,null],[12,"ut_tv","","",107,null],[12,"ut_addr_v6","","",107,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",108,null],[12,"loads","","",108,null],[12,"totalram","","",108,null],[12,"freeram","","",108,null],[12,"sharedram","","",108,null],[12,"bufferram","","",108,null],[12,"totalswap","","",108,null],[12,"freeswap","","",108,null],[12,"procs","","",108,null],[12,"pad","","",108,null],[12,"totalhigh","","",108,null],[12,"freehigh","","",108,null],[12,"mem_unit","","",108,null],[12,"_f","","",108,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",109,null],[12,"msg_stime","","",109,null],[12,"msg_rtime","","",109,null],[12,"msg_ctime","","",109,null],[12,"msg_qnum","","",109,null],[12,"msg_qbytes","","",109,null],[12,"msg_lspid","","",109,null],[12,"msg_lrpid","","",109,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",110,null],[12,"sa_mask","","",110,null],[12,"sa_flags","","",110,null],[12,"sa_restorer","","",110,null],[3,"statfs","","",null,null],[12,"f_type","","",111,null],[12,"f_bsize","","",111,null],[12,"f_blocks","","",111,null],[12,"f_bfree","","",111,null],[12,"f_bavail","","",111,null],[12,"f_files","","",111,null],[12,"f_ffree","","",111,null],[12,"f_fsid","","",111,null],[12,"f_namelen","","",111,null],[12,"f_frsize","","",111,null],[3,"flock","","",null,null],[12,"l_type","","",112,null],[12,"l_whence","","",112,null],[12,"l_start","","",112,null],[12,"l_len","","",112,null],[12,"l_pid","","",112,null],[3,"flock64","","",null,null],[12,"l_type","","",113,null],[12,"l_whence","","",113,null],[12,"l_start","","",113,null],[12,"l_len","","",113,null],[12,"l_pid","","",113,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",114,null],[12,"si_errno","","",114,null],[12,"si_code","","",114,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",115,null],[12,"ss_flags","","",115,null],[12,"ss_size","","",115,null],[3,"stat","","",null,null],[12,"st_dev","","",116,null],[12,"st_ino","","",116,null],[12,"st_nlink","","",116,null],[12,"st_mode","","",116,null],[12,"st_uid","","",116,null],[12,"st_gid","","",116,null],[12,"st_rdev","","",116,null],[12,"st_size","","",116,null],[12,"st_blksize","","",116,null],[12,"st_blocks","","",116,null],[12,"st_atime","","",116,null],[12,"st_atime_nsec","","",116,null],[12,"st_mtime","","",116,null],[12,"st_mtime_nsec","","",116,null],[12,"st_ctime","","",116,null],[12,"st_ctime_nsec","","",116,null],[3,"stat64","","",null,null],[12,"st_dev","","",117,null],[12,"st_ino","","",117,null],[12,"st_nlink","","",117,null],[12,"st_mode","","",117,null],[12,"st_uid","","",117,null],[12,"st_gid","","",117,null],[12,"st_rdev","","",117,null],[12,"st_size","","",117,null],[12,"st_blksize","","",117,null],[12,"st_blocks","","",117,null],[12,"st_atime","","",117,null],[12,"st_atime_nsec","","",117,null],[12,"st_mtime","","",117,null],[12,"st_mtime_nsec","","",117,null],[12,"st_ctime","","",117,null],[12,"st_ctime_nsec","","",117,null],[3,"statfs64","","",null,null],[12,"f_type","","",118,null],[12,"f_bsize","","",118,null],[12,"f_blocks","","",118,null],[12,"f_bfree","","",118,null],[12,"f_bavail","","",118,null],[12,"f_files","","",118,null],[12,"f_ffree","","",118,null],[12,"f_fsid","","",118,null],[12,"f_namelen","","",118,null],[12,"f_frsize","","",118,null],[12,"f_flags","","",118,null],[12,"f_spare","","",118,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",119,null],[12,"f_frsize","","",119,null],[12,"f_blocks","","",119,null],[12,"f_bfree","","",119,null],[12,"f_bavail","","",119,null],[12,"f_files","","",119,null],[12,"f_ffree","","",119,null],[12,"f_favail","","",119,null],[12,"f_fsid","","",119,null],[12,"f_flag","","",119,null],[12,"f_namemax","","",119,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",120,null],[12,"exponent","","",120,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",121,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",122,null],[12,"swd","","",122,null],[12,"ftw","","",122,null],[12,"fop","","",122,null],[12,"rip","","",122,null],[12,"rdp","","",122,null],[12,"mxcsr","","",122,null],[12,"mxcr_mask","","",122,null],[12,"_st","","",122,null],[12,"_xmm","","",122,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",123,null],[12,"r14","","",123,null],[12,"r13","","",123,null],[12,"r12","","",123,null],[12,"rbp","","",123,null],[12,"rbx","","",123,null],[12,"r11","","",123,null],[12,"r10","","",123,null],[12,"r9","","",123,null],[12,"r8","","",123,null],[12,"rax","","",123,null],[12,"rcx","","",123,null],[12,"rdx","","",123,null],[12,"rsi","","",123,null],[12,"rdi","","",123,null],[12,"orig_rax","","",123,null],[12,"rip","","",123,null],[12,"cs","","",123,null],[12,"eflags","","",123,null],[12,"rsp","","",123,null],[12,"ss","","",123,null],[12,"fs_base","","",123,null],[12,"gs_base","","",123,null],[12,"ds","","",123,null],[12,"es","","",123,null],[12,"fs","","",123,null],[12,"gs","","",123,null],[3,"user","","",null,null],[12,"regs","","",124,null],[12,"u_fpvalid","","",124,null],[12,"i387","","",124,null],[12,"u_tsize","","",124,null],[12,"u_dsize","","",124,null],[12,"u_ssize","","",124,null],[12,"start_code","","",124,null],[12,"start_stack","","",124,null],[12,"signal","","",124,null],[12,"u_ar0","","",124,null],[12,"u_fpstate","","",124,null],[12,"magic","","",124,null],[12,"u_comm","","",124,null],[12,"u_debugreg","","",124,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",125,null],[12,"fpregs","","",125,null],[3,"ipc_perm","","",null,null],[12,"__key","","",126,null],[12,"uid","","",126,null],[12,"gid","","",126,null],[12,"cuid","","",126,null],[12,"cgid","","",126,null],[12,"mode","","",126,null],[12,"__seq","","",126,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",127,null],[12,"shm_segsz","","",127,null],[12,"shm_atime","","",127,null],[12,"shm_dtime","","",127,null],[12,"shm_ctime","","",127,null],[12,"shm_cpid","","",127,null],[12,"shm_lpid","","",127,null],[12,"shm_nattch","","",127,null],[3,"termios2","","",null,null],[12,"c_iflag","","",128,null],[12,"c_oflag","","",128,null],[12,"c_cflag","","",128,null],[12,"c_lflag","","",128,null],[12,"c_line","","",128,null],[12,"c_cc","","",128,null],[12,"c_ispeed","","",128,null],[12,"c_ospeed","","",128,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",129,null],[12,"imr_address","","",129,null],[12,"imr_ifindex","","",129,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",130,null],[12,"swd","","",130,null],[12,"ftw","","",130,null],[12,"fop","","",130,null],[12,"rip","","",130,null],[12,"rdp","","",130,null],[12,"mxcsr","","",130,null],[12,"mxcr_mask","","",130,null],[12,"st_space","","",130,null],[12,"xmm_space","","",130,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",131,null],[12,"uc_link","","",131,null],[12,"uc_stack","","",131,null],[12,"uc_mcontext","","",131,null],[12,"uc_sigmask","","",131,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",132,null],[12,"f_frsize","","",132,null],[12,"f_blocks","","",132,null],[12,"f_bfree","","",132,null],[12,"f_bavail","","",132,null],[12,"f_files","","",132,null],[12,"f_ffree","","",132,null],[12,"f_favail","","",132,null],[12,"f_fsid","","",132,null],[12,"f_flag","","",132,null],[12,"f_namemax","","",132,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",133,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["usize"],["cpu_set_t"]]]],[5,"CPU_CLR","","",null,[[["usize"],["cpu_set_t"]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t"],["usize"]],["bool"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",114,[[["self"]]]],[11,"si_value","","",114,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"into","","",155,[[],["u"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"fmt","","",134,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",151,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",152,[[["self"]],["file"]]],[11,"clone","","",153,[[["self"]],["fpos_t"]]],[11,"clone","","",154,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",135,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",136,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["sock_extended_err"]]],[11,"clone","","",36,[[["self"]],["epoll_event"]]],[11,"clone","","",37,[[["self"]],["sockaddr_un"]]],[11,"clone","","",38,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",39,[[["self"]],["utsname"]]],[11,"clone","","",40,[[["self"]],["sigevent"]]],[11,"clone","","",155,[[["self"]],["fpos64_t"]]],[11,"clone","","",41,[[["self"]],["rlimit64"]]],[11,"clone","","",42,[[["self"]],["glob_t"]]],[11,"clone","","",43,[[["self"]],["passwd"]]],[11,"clone","","",44,[[["self"]],["spwd"]]],[11,"clone","","",45,[[["self"]],["dqblk"]]],[11,"clone","","",46,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",47,[[["self"]],["itimerspec"]]],[11,"clone","","",137,[[["self"]],["fsid_t"]]],[11,"clone","","",48,[[["self"]],["packet_mreq"]]],[11,"clone","","",138,[[["self"]],["cpu_set_t"]]],[11,"clone","","",49,[[["self"]],["if_nameindex"]]],[11,"clone","","",50,[[["self"]],["msginfo"]]],[11,"clone","","",51,[[["self"]],["sembuf"]]],[11,"clone","","",52,[[["self"]],["input_event"]]],[11,"clone","","",53,[[["self"]],["input_id"]]],[11,"clone","","",54,[[["self"]],["input_absinfo"]]],[11,"clone","","",55,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",56,[[["self"]],["input_mask"]]],[11,"clone","","",57,[[["self"]],["ff_replay"]]],[11,"clone","","",58,[[["self"]],["ff_trigger"]]],[11,"clone","","",59,[[["self"]],["ff_envelope"]]],[11,"clone","","",60,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",61,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",62,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",63,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",64,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",65,[[["self"]],["ff_effect"]]],[11,"clone","","",66,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",67,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",69,[[["self"]],["elf32_sym"]]],[11,"clone","","",70,[[["self"]],["elf64_sym"]]],[11,"clone","","",71,[[["self"]],["elf32_phdr"]]],[11,"clone","","",72,[[["self"]],["elf64_phdr"]]],[11,"clone","","",73,[[["self"]],["elf32_shdr"]]],[11,"clone","","",74,[[["self"]],["elf64_shdr"]]],[11,"clone","","",75,[[["self"]],["elf32_chdr"]]],[11,"clone","","",76,[[["self"]],["elf64_chdr"]]],[11,"clone","","",77,[[["self"]],["ucred"]]],[11,"clone","","",78,[[["self"]],["mntent"]]],[11,"clone","","",139,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",140,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",79,[[["self"]],["genlmsghdr"]]],[11,"clone","","",80,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",81,[[["self"]],["arpd_request"]]],[11,"clone","","",82,[[["self"]],["inotify_event"]]],[11,"clone","","",83,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",84,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",85,[[["self"]],["dirent"]]],[11,"clone","","",86,[[["self"]],["dirent64"]]],[11,"clone","","",87,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",88,[[["self"]],["af_alg_iv"]]],[11,"clone","","",89,[[["self"]],["mq_attr"]]],[11,"clone","","",90,[[["self"]],["statx"]]],[11,"clone","","",91,[[["self"]],["statx_timestamp"]]],[11,"clone","","",92,[[["self"]],["aiocb"]]],[11,"clone","","",93,[[["self"]],["__exit_status"]]],[11,"clone","","",94,[[["self"]],["__timeval"]]],[11,"clone","","",95,[[["self"]],["glob64_t"]]],[11,"clone","","",96,[[["self"]],["msghdr"]]],[11,"clone","","",97,[[["self"]],["cmsghdr"]]],[11,"clone","","",98,[[["self"]],["termios"]]],[11,"clone","","",99,[[["self"]],["mallinfo"]]],[11,"clone","","",100,[[["self"]],["nlmsghdr"]]],[11,"clone","","",101,[[["self"]],["nlmsgerr"]]],[11,"clone","","",102,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",104,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",105,[[["self"]],["nlattr"]]],[11,"clone","","",106,[[["self"]],["rtentry"]]],[11,"clone","","",107,[[["self"]],["utmpx"]]],[11,"clone","","",141,[[["self"]],["sigset_t"]]],[11,"clone","","",108,[[["self"]],["sysinfo"]]],[11,"clone","","",109,[[["self"]],["msqid_ds"]]],[11,"clone","","",110,[[["self"]],["sigaction"]]],[11,"clone","","",111,[[["self"]],["statfs"]]],[11,"clone","","",112,[[["self"]],["flock"]]],[11,"clone","","",113,[[["self"]],["flock64"]]],[11,"clone","","",114,[[["self"]],["siginfo_t"]]],[11,"clone","","",115,[[["self"]],["stack_t"]]],[11,"clone","","",116,[[["self"]],["stat"]]],[11,"clone","","",117,[[["self"]],["stat64"]]],[11,"clone","","",118,[[["self"]],["statfs64"]]],[11,"clone","","",119,[[["self"]],["statvfs64"]]],[11,"clone","","",142,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",120,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",121,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",122,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",123,[[["self"]],["user_regs_struct"]]],[11,"clone","","",124,[[["self"]],["user"]]],[11,"clone","","",125,[[["self"]],["mcontext_t"]]],[11,"clone","","",126,[[["self"]],["ipc_perm"]]],[11,"clone","","",127,[[["self"]],["shmid_ds"]]],[11,"clone","","",128,[[["self"]],["termios2"]]],[11,"clone","","",129,[[["self"]],["ip_mreqn"]]],[11,"clone","","",130,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",131,[[["self"]],["ucontext_t"]]],[11,"clone","","",132,[[["self"]],["statvfs"]]],[11,"clone","","",143,[[["self"]],["max_align_t"]]],[11,"clone","","",144,[[["self"]],["sem_t"]]],[11,"clone","","",145,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",146,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",147,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",148,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",149,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",150,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",133,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"sock_extended_err"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["box",["log"]],["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["option",["level"]],["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["option",["u32"]],["u32"]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["option",["u32"]],["self"],["u32"]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["levelfilter"],["self"]],["ordering"]]],[11,"cmp","","",5,[[["metadata"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["metadatabuilder"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ne","","",5,[[["metadata"],["self"]],["bool"]]],[11,"eq","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ne","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["levelfilter"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["levelfilter"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["metadata"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"le","","",5,[[["metadata"],["self"]],["bool"]]],[11,"gt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ge","","",5,[[["metadata"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["metadatabuilder"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"le","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"gt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ge","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["level"],["result",["level"]]]]],[11,"from_str","","",1,[[["str"]],[["levelfilter"],["result",["levelfilter"]]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["maybe_uninit"] = {"doc":"","i":[[19,"MaybeUninit","maybe_uninit","A wrapper type to construct uninitialized instances of `T`.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["maybeuninit"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",0,[[["t"]],["maybeuninit"]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",0,[[],["maybeuninit"]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",0,[[]]],[18,"UNINIT","","A promotable constant, equivalent to `uninit()`.",0,null],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",0,[[],["maybeuninit"]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",0,[[["self"]]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",0,[[["self"]]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",0,[[],["t"]]],[11,"read","","Reads the value from the `MaybeUninit<T>` container. The…",0,[[["self"]],["t"]]],[11,"get_ref","","Gets a shared reference to the contained value.",0,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable (unique) reference to the contained value.",0,[[["self"]],["t"]]],[11,"slice_get_ref","","Assuming all the elements are initialized, get a slice to…",0,[[]]],[11,"slice_get_mut","","Assuming all the elements are initialized, get a mutable…",0,[[]]],[11,"first_ptr","","Gets a pointer to the first element of the array.",0,[[]]],[11,"first_ptr_mut","","Gets a mutable pointer to the first element of the array.",0,[[]]]],"p":[[19,"MaybeUninit"]]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]};
searchIndex["mopa"] = {"doc":"MOPA: My Own Personal Any. A macro to implement all the…","i":[[8,"Any","mopa","A type to emulate dynamic typing.",null,null],[14,"mopafy","","The macro for implementing all the `Any` methods on your…",null,null]],"p":[]};
searchIndex["nodrop"] = {"doc":"A wrapper type to inhibit drop (destructor).","i":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",null,null],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]]],"p":[[3,"NoDrop"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["option"],["numcast"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["i8"],["option",["i8"]]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["option",["i64"]],["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["i128"],["option",["i128"]]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["option",["u32"]],["u32"]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["option",["u128"]],["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["f64"],["option",["f64"]]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["one"],["usize"],["mul"],["clone"]],[["one"],["mul"],["clone"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one"],["usize"],["checkedmul"],["clone"]],[["option"],["one"],["checkedmul"],["clone"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[],["self"]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["piet"] = {"doc":"A 2D graphics abstraction.","i":[[3,"Error","piet","An error that can occur while rendering 2D graphics.",null,null],[3,"FixedLinearGradient","","Specification of a linear gradient.",null,null],[12,"start","","The start point (corresponding to pos 0.0).",0,null],[12,"end","","The end point (corresponding to pos 1.0).",0,null],[12,"stops","","The stops.",0,null],[3,"FixedRadialGradient","","Specification of a radial gradient in image-space.",null,null],[12,"center","","The center.",1,null],[12,"origin_offset","","The offset of the origin relative to the center.",1,null],[12,"radius","","The radius.",1,null],[12,"stops","","The stops (see similar field in `LinearGradient`).",1,null],[3,"GradientStop","","Specification of a gradient stop.",null,null],[12,"pos","","The coordinate of the stop.",2,null],[12,"color","","The color at that stop.",2,null],[3,"LinearGradient","","A description of a linear gradient in the unit rect, which…",null,null],[3,"RadialGradient","","A description of a radial gradient in the unit rect, which…",null,null],[3,"UnitPoint","","A representation of a point relative to a unit rectangle.",null,null],[3,"StrokeStyle","","Options for drawing stroked lines.",null,null],[12,"line_join","","",3,null],[12,"line_cap","","",3,null],[12,"dash","","",3,null],[12,"miter_limit","","",3,null],[3,"HitTestPoint","","return values for `hit_test_point`. -…",null,null],[12,"metrics","","",4,null],[12,"is_inside","","",4,null],[3,"HitTestTextPosition","","return values for `hit_test_text_position`.",null,null],[12,"point","","",5,null],[12,"metrics","","",5,null],[3,"HitTestMetrics","","Hit test metrics, returned as part of…",null,null],[12,"text_position","","",6,null],[12,"is_text","","",6,null],[4,"Color","","A datatype representing color.",null,null],[13,"Rgba32","","",7,null],[4,"ErrorKind","","",null,null],[13,"InvalidInput","","",8,null],[13,"NotSupported","","",8,null],[13,"StackUnbalance","","",8,null],[13,"BackendError","","",8,null],[4,"FixedGradient","","Any fixed gradient.",null,null],[13,"Linear","","A linear gradient.",9,null],[13,"Radial","","A radial gradient.",9,null],[4,"ScaleMode","","Mappings from the unit square into a non-square rectangle.",null,null],[13,"Fit","","The unit 1.0 is mapped to the smaller of width & height,…",10,null],[13,"Fill","","The unit 1.0 is mapped to the larger of width & height;…",10,null],[4,"InterpolationMode","","A requested interpolation mode for drawing images.",null,null],[13,"NearestNeighbor","","Don't interpolate, use nearest neighbor.",11,null],[13,"Bilinear","","Use bilinear interpolation.",11,null],[4,"ImageFormat","","The pixel format for bitmap images.",null,null],[13,"Rgb","","3 bytes per pixel, in RGB order.",12,null],[13,"RgbaSeparate","","4 bytes per pixel, in RGBA order, with separate alpha.",12,null],[13,"RgbaPremul","","4 bytes per pixel, in RGBA order, with premultiplied alpha.",12,null],[4,"PaintBrush","","A color or a gradient.",null,null],[13,"Color","","",13,null],[13,"Linear","","",13,null],[13,"Radial","","",13,null],[13,"Fixed","","",13,null],[4,"LineJoin","","Options for angled joins in strokes.",null,null],[13,"Miter","","",14,null],[13,"Round","","",14,null],[13,"Bevel","","",14,null],[4,"LineCap","","Options for the cap of stroked lines.",null,null],[13,"Butt","","",15,null],[13,"Round","","",15,null],[13,"Square","","",15,null],[5,"new_error","","Create a new error of the given kind.",null,[[["errorkind"]],["error"]]],[11,"rgb8","","Create a color from 8 bit per sample RGB values.",7,[[["u8"]],["color"]]],[11,"rgba8","","Create a color from 8 bit per sample RGBA values.",7,[[["u8"]],["color"]]],[11,"from_rgba32_u32","","Create a color from a 32-bit rgba value (alpha as least…",7,[[["u32"]],["color"]]],[11,"grey8","","Create a color from a grey value.",7,[[["u8"]],["color"]]],[11,"grey","","Create a color with a grey value in the range 0.0..=1.0.",7,[[],["color"]]],[11,"rgba","","Create a color from four floating point values, each in…",7,[[["into",["f64"]],["f64"]],["color"]]],[11,"rgb","","Create a color from three floating point values, each in…",7,[[["into",["f64"]],["f64"]],["color"]]],[11,"hlc","","Create a color from a CIEL*a*b* polar (also known as CIE…",7,[[["into",["f64"]],["f64"]],["color"]]],[11,"hlca","","Create a color from a CIEL*a*b* polar specification and…",7,[[["into",["f64"]],["f64"]],["color"]]],[11,"with_alpha","","Change just the alpha value of a color.",7,[[],["color"]]],[11,"as_rgba_u32","","Convert a color value to a 32-bit rgba value.",7,[[["self"]],["u32"]]],[18,"WHITE","","Opaque white.",7,null],[18,"BLACK","","Opaque black.",7,null],[18,"TOP_LEFT","","",16,null],[18,"TOP","","",16,null],[18,"TOP_RIGHT","","",16,null],[18,"LEFT","","",16,null],[18,"CENTER","","",16,null],[18,"RIGHT","","",16,null],[18,"BOTTOM_LEFT","","",16,null],[18,"BOTTOM","","",16,null],[18,"BOTTOM_RIGHT","","",16,null],[11,"new","","Create a new UnitPoint.",16,[[["f64"]],["unitpoint"]]],[11,"resolve","","Given a rectangle, resolve the point within the rectangle.",16,[[["rect"],["self"]],["point"]]],[11,"new","","Create a new linear gradient.",17,[[["unitpoint"]],["lineargradient"]]],[11,"new","","Creates a simple `RadialGradient`. This gradient has…",18,[[["f64"]],["self"]]],[11,"with_center","","A builder-style method for changing the center of the…",18,[[["unitpoint"]],["self"]]],[11,"with_origin","","A builder-style method for changing the origin of the…",18,[[["unitpoint"]],["self"]]],[11,"with_scale_mode","","A builder-style method for changing the [`ScaleMode`] of…",18,[[["scalemode"]],["self"]]],[11,"bytes_per_pixel","","",12,[[["self"]],["usize"]]],[11,"new","","",3,[[],["strokestyle"]]],[11,"set_line_join","","",3,[[["self"],["linejoin"]]]],[11,"set_line_cap","","",3,[[["self"],["linecap"]]]],[11,"set_dash","","",3,[[["vec",["f64"]],["self"],["f64"]]]],[11,"set_miter_limit","","",3,[[["f64"]]]],[8,"RoundFrom","","This is our own implementation of a \"lossy From\" trait,…",null,null],[10,"round_from","","",19,[[["t"]],["self"]]],[8,"RoundInto","","The companion to `RoundFrom`. As with `From` and `Into`, a…",null,null],[10,"round_into","","",20,[[],["t"]]],[8,"GradientStops","","A flexible, ergonomic way to describe gradient stops.",null,null],[10,"to_vec","","",21,[[],[["gradientstop"],["vec",["gradientstop"]]]]],[8,"RenderContext","","The main trait for rendering graphics.",null,null],[16,"Brush","","The type of a \"brush\".",22,null],[16,"Text","","An associated factory for creating text layouts and…",22,null],[16,"TextLayout","","",22,null],[16,"Image","","The associated type of an image.",22,null],[10,"status","","Report an internal error.",22,[[["self"]],[["error"],["result",["error"]]]]],[10,"solid_brush","","Create a new brush resource.",22,[[["self"],["color"]]]],[10,"gradient","","Create a new gradient brush.",22,[[["self"]],[["error"],["result",["error"]]]]],[10,"clear","","Clear the canvas with the given color.",22,[[["self"],["color"]]]],[10,"stroke","","Stroke a shape.",22,[[["self"],["f64"]]]],[10,"stroke_styled","","Stroke a shape, with styled strokes.",22,[[["strokestyle"],["self"],["f64"]]]],[10,"fill","","Fill a shape, using non-zero fill rule.",22,[[["self"]]]],[10,"fill_even_odd","","Fill a shape, using even-odd fill rule",22,[[["self"]]]],[10,"clip","","Clip to a shape.",22,[[["self"]]]],[10,"text","","",22,[[["self"]]]],[10,"draw_text","","Draw a text layout.",22,[[["self"]]]],[10,"save","","Save the context state.",22,[[["self"]],[["error"],["result",["error"]]]]],[10,"restore","","Restore the context state.",22,[[["self"]],[["error"],["result",["error"]]]]],[11,"with_save","","Do graphics operations with the context state saved and…",22,[[["self"]],[["error"],["result",["error"]]]]],[10,"finish","","Finish any pending operations.",22,[[["self"]],[["error"],["result",["error"]]]]],[10,"transform","","Apply a transform.",22,[[["affine"],["self"]]]],[10,"make_image","","Create a new image from a pixel buffer.",22,[[["usize"],["self"],["imageformat"]],[["error"],["result",["error"]]]]],[10,"draw_image","","Draw an image.",22,[[["interpolationmode"],["self"]]]],[8,"IntoBrush","","A trait for various types that can be used as brushes.…",null,null],[10,"make_brush","","",23,[[["self"],["p"]],["cow"]]],[8,"Text","","",null,null],[16,"FontBuilder","","",24,null],[16,"Font","","",24,null],[16,"TextLayoutBuilder","","",24,null],[16,"TextLayout","","",24,null],[10,"new_font_by_name","","",24,[[["str"],["self"],["f64"]]]],[10,"new_text_layout","","",24,[[["str"],["self"]]]],[8,"FontBuilder","","",null,null],[16,"Out","","",25,null],[10,"build","","",25,[[],[["result",["error"]],["error"]]]],[8,"Font","","",null,null],[8,"TextLayoutBuilder","","",null,null],[16,"Out","","",26,null],[10,"build","","",26,[[],[["result",["error"]],["error"]]]],[8,"TextLayout","","Text Layout",null,null],[10,"width","","Measure the advance width of the text.",27,[[["self"]],["f64"]]],[10,"hit_test_point","","Given a Point, determine the corresponding text position",27,[[["point"],["self"]],["hittestpoint"]]],[10,"hit_test_text_position","","Given a text position, determine the corresponding pixel…",27,[[["self"],["usize"]],[["hittesttextposition"],["option",["hittesttextposition"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"make_brush","","",9,[[["self"],["p"]],["cow"]]],[11,"make_brush","","",17,[[["self"],["p"]],["cow"]]],[11,"make_brush","","",18,[[["self"],["p"]],["cow"]]],[11,"make_brush","","",7,[[["self"],["p"]],["cow"]]],[11,"make_brush","","",13,[[["self"],["p"]],["cow"]]],[11,"from","","",28,[[["box",["error"]],["error"]],["error"]]],[11,"from","","",9,[[["fixedlineargradient"]],["fixedgradient"]]],[11,"from","","",9,[[["fixedradialgradient"]],["fixedgradient"]]],[11,"from","","",13,[[["color"]],["paintbrush"]]],[11,"from","","",13,[[["lineargradient"]],["paintbrush"]]],[11,"from","","",13,[[["radialgradient"]],["paintbrush"]]],[11,"from","","",13,[[["fixedgradient"]],["paintbrush"]]],[11,"from","","",13,[[["fixedlineargradient"]],["paintbrush"]]],[11,"from","","",13,[[["fixedradialgradient"]],["paintbrush"]]],[11,"clone","","",7,[[["self"]],["color"]]],[11,"clone","","",0,[[["self"]],["fixedlineargradient"]]],[11,"clone","","",1,[[["self"]],["fixedradialgradient"]]],[11,"clone","","",9,[[["self"]],["fixedgradient"]]],[11,"clone","","",2,[[["self"]],["gradientstop"]]],[11,"clone","","",17,[[["self"]],["lineargradient"]]],[11,"clone","","",18,[[["self"]],["radialgradient"]]],[11,"clone","","",10,[[["self"]],["scalemode"]]],[11,"clone","","",16,[[["self"]],["unitpoint"]]],[11,"clone","","",11,[[["self"]],["interpolationmode"]]],[11,"clone","","",12,[[["self"]],["imageformat"]]],[11,"clone","","",13,[[["self"]],["paintbrush"]]],[11,"clone","","",3,[[["self"]],["strokestyle"]]],[11,"clone","","",14,[[["self"]],["linejoin"]]],[11,"clone","","",15,[[["self"]],["linecap"]]],[11,"default","","",4,[[],["hittestpoint"]]],[11,"default","","",5,[[],["hittesttextposition"]]],[11,"default","","",6,[[],["hittestmetrics"]]],[11,"eq","","",11,[[["self"],["interpolationmode"]],["bool"]]],[11,"eq","","",12,[[["self"],["imageformat"]],["bool"]]],[11,"eq","","",3,[[["strokestyle"],["self"]],["bool"]]],[11,"ne","","",3,[[["strokestyle"],["self"]],["bool"]]],[11,"eq","","",14,[[["linejoin"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["linecap"]],["bool"]]],[11,"eq","","",4,[[["hittestpoint"],["self"]],["bool"]]],[11,"ne","","",4,[[["hittestpoint"],["self"]],["bool"]]],[11,"eq","","",6,[[["hittestmetrics"],["self"]],["bool"]]],[11,"ne","","",6,[[["hittestmetrics"],["self"]],["bool"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"with_save","","Do graphics operations with the context state saved and…",22,[[["self"]],[["error"],["result",["error"]]]]]],"p":[[3,"FixedLinearGradient"],[3,"FixedRadialGradient"],[3,"GradientStop"],[3,"StrokeStyle"],[3,"HitTestPoint"],[3,"HitTestTextPosition"],[3,"HitTestMetrics"],[4,"Color"],[4,"ErrorKind"],[4,"FixedGradient"],[4,"ScaleMode"],[4,"InterpolationMode"],[4,"ImageFormat"],[4,"PaintBrush"],[4,"LineJoin"],[4,"LineCap"],[3,"UnitPoint"],[3,"LinearGradient"],[3,"RadialGradient"],[8,"RoundFrom"],[8,"RoundInto"],[8,"GradientStops"],[8,"RenderContext"],[8,"IntoBrush"],[8,"Text"],[8,"FontBuilder"],[8,"TextLayoutBuilder"],[8,"TextLayout"],[3,"Error"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"empty","","",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["span"],["self"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["tokenstream"],["delimiter"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["span"],["self"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span"],["self"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["span"],["self"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"f64_unsuffixed","","",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",8,[[["f32"]],["literal"]]],[11,"string","","",8,[[["str"]],["literal"]]],[11,"character","","",8,[[["char"]],["literal"]]],[11,"byte_string","","",8,[[],["literal"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"set_span","","",8,[[["span"],["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["option",["tokentree"]],["tokentree"]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["tokenstream"],["lexerror"],["result",["tokenstream","lexerror"]]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["proc_macro_hack"] = {"doc":"As of Rust 1.30, the language supports user-defined…","i":[[23,"proc_macro_hack","proc_macro_hack","",null,null]],"p":[]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`]…",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["tokenstream"],["self"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[],["tokenstream"]]],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","i":[[8,"RngCore","rand","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[["self"]],[["result",["error"]],["error"]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],[["error"],["result",["error"]]]]],[4,"ErrorKind","","Error kind which can be matched over.",null,null],[13,"Unavailable","","Feature is not available; not recoverable.",2,null],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,null],[13,"Transient","","A transient failure which likely can be resolved or worked…",2,null],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,null],[3,"Error","","Error type of random number generators",null,null],[12,"kind","","The error kind",3,null],[12,"msg","","The error message",3,null],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",null,[[],["t"]]],[0,"distributions","","Generating random samples from probability distributions.",null,null],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters…",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Bernoulli","","The Bernoulli distribution.",null,null],[3,"WeightedIndex","","A distribution using weighted sampling to pick a…",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in…",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two…",null,null],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",null,null],[3,"Beta","","The Beta distribution with shape parameters `alpha` and…",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal…",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[3,"Exp1","","Samples floating-point numbers according to the…",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto…",null,null],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",null,null],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",null,null],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",null,null],[3,"Dirichlet","","The dirichelet distribution `Dirichlet(alpha)`.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull…",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[3,"Weighted","","A value with a particular weight for use with…",null,null],[12,"weight","","The numerical weight of this item",4,null],[12,"item","","The actual item which is being weighted",4,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided iterator contained no items.",5,null],[13,"NegativeWeight","","A weight lower than zero was used.",5,null],[13,"AllWeightsZero","","All items in the provided iterator had a weight of zero.",5,null],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",6,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",7,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",7,[[["b2"],["b1"]],["self"]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",7,[[["b2"],["b1"]],["self"]]],[10,"sample","","Sample a value.",7,[[["self"],["r"]]]],[11,"sample_single","","Sample a single value uniformly from a range with…",7,[[["b2"],["b1"],["r"]]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",8,[[["self"]],["borrowed"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",9,[[["b2"],["b1"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",9,[[["b2"],["b1"]],["uniform"]]],[11,"new","rand::distributions","Construct a new `Bernoulli` with the given probability of…",10,[[["f64"]],["bernoulli"]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",10,[[["u32"]],["bernoulli"]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",11,[[["i"]],[["weightederror"],["result",["weightedindex","weightederror"]],["weightedindex"]]]],[11,"new","","Construct a new `UnitSphereSurface` distribution.",12,[[],["unitspheresurface"]]],[11,"new","","Construct a new `UnitCircle` distribution.",13,[[],["unitcircle"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",14,[[["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",15,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",16,[[["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",17,[[["f64"]],["studentt"]]],[11,"new","","Construct an object representing the `Beta(alpha, beta)`…",18,[[["f64"]],["beta"]]],[11,"new","","Construct a new `Normal` distribution with the given mean…",19,[[["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",20,[[["f64"]],["lognormal"]]],[11,"new","","Construct a new `Exp` with the given shape parameter…",21,[[["f64"]],["exp"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and…",22,[[["f64"]],["pareto"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter…",23,[[["f64"]],["poisson"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters…",24,[[["f64"],["u64"]],["binomial"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters…",25,[[["f64"]],["cauchy"]]],[11,"new","","Construct a new `Dirichlet` with the given alpha parameter…",26,[[["into",["vec"]],["vec",["f64"]]],["dirichlet"]]],[11,"new_with_param","","Construct a new `Dirichlet` with the given shape parameter…",26,[[["f64"],["usize"]],["dirichlet"]]],[11,"new","","Construct a new `Triangular` with minimum `min`, maximum…",27,[[["f64"]],["triangular"]]],[11,"new","","Construct a new `Weibull` distribution with given `scale`…",28,[[["f64"]],["weibull"]]],[8,"Distribution","","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",29,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",29,[[["self"],["r"]],["distiter"]]],[11,"new","","Create a new `WeightedChoice`.",30,[[],["weightedchoice"]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"prng","","Pseudo-random number generators.",null,null],[0,"rngs","","Random number generators and adapters for common usage:",null,null],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU…",null,null],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",null,null],[13,"NoTimer","","No timer available.",31,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",31,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",31,null],[13,"TinyVariantions","","Variations of deltas of time too small.",31,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",31,null],[3,"OsRng","","A random number generator that retrieves randomness…",null,null],[3,"EntropyRng","","An interface returning random data from external…",null,null],[3,"SmallRng","","An RNG recommended when small state, cheap initialization…",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a…",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",32,[[["r"]],["readrng"]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",33,[[["rsdr"],["u64"],["r"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",33,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","rand::rngs","Create a new `EntropyRng`.",34,[[],["self"]]],[0,"mock","","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",35,[[["u64"]],["self"]]],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",null,null],[3,"SliceChooseIter","rand::seq","Iterator over multiple choices, as returned by…",null,null],[5,"sample_iter","","Randomly sample `amount` elements from a finite iterator.",null,[[["i"],["usize"],["r"]],[["vec"],["result",["vec","vec"]]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",null,[[["usize"],["r"]],["vec"]]],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",null,[[["usize"],["r"]],[["t"],["vec"]]]],[0,"index","","Index sampling",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[["usize"],["r"]],["indexvec"]]],[11,"len","","Returns the number of indices",36,[[["self"]],["usize"]]],[11,"index","","Return the value at the given `index`.",36,[[["self"],["usize"]],["usize"]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",36,[[],[["vec",["usize"]],["usize"]]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",36,[[["self"]],["indexveciter"]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence of…",36,[[],["indexvecintoiter"]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",37,null],[10,"choose","","Returns a reference to one random element of the slice, or…",37,[[["self"],["r"]],["option"]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",37,[[["self"],["r"]],["option"]]],[10,"choose_multiple","","Produces an iterator that chooses `amount` elements from…",37,[[["usize"],["self"],["r"]],["slicechooseiter"]]],[10,"choose_weighted","","Similar to [`choose`], where the likelihood of each…",37,[[["f"],["self"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], where the likelihood of each…",37,[[["self"],["f"],["r"]],[["weightederror"],["result",["weightederror"]]]]],[10,"shuffle","","Shuffle a mutable slice in place.",37,[[["self"],["r"]]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",37,[[["self"],["usize"],["r"]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator. If you…",38,[[["r"]],["option"]]],[11,"choose_multiple_fill","","Collects `amount` values at random from the iterator into…",38,[[["r"]],["usize"]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",38,[[["usize"],["r"]],["vec"]]],[8,"Rng","rand","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",39,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e.…",39,[[["b2"],["self"],["b1"]],["sampleuniform"]]],[11,"sample","","Sample a new value, using the given distribution.",39,[[["distribution"],["self"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given…",39,[[["d"],["self"]],[["distiter"],["distribution"]]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value…",39,[[["self"],["t"]],[["result",["error"]],["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",39,[[["self"],["f64"]],["bool"]]],[11,"gen_ratio","","Return a bool with a probability of…",39,[[["self"],["u32"]],["bool"]]],[11,"choose","","Return a random element from `values`.",39,[[["self"]],[["t"],["option"]]]],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",39,[[["self"]],[["option"],["t"]]]],[11,"shuffle","","Shuffle a mutable slice in place.",39,[[["self"]]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",40,[[["self"]]]],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian…",40,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing…",null,null],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh…",41,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","rand::distributions::uniform","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","rand::rngs","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from_entropy","","",54,[[],["r"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from_entropy","","",55,[[],["r"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","rand::rngs::adapter","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","rand::rngs::mock","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","rand::seq","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","rand::seq::index","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"fmt","rand::rngs","",31,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"eq","","",31,[[["self"],["timererror"]],["bool"]]],[11,"description","","",31,[[["self"]],["str"]]],[11,"fmt","","",31,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",52,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",52,[[["self"]],["jitterrng"]]],[11,"clone","","",31,[[["self"]],["timererror"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"next_u32","rand::rngs","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,[[["self"]]]],[11,"try_fill_bytes","","",52,[[["self"]],[["result",["error"]],["error"]]]],[11,"read","rand","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],[["error"],["option",["error"]]]]],[11,"fmt","","",3,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"clone","rand::rngs","",53,[[["self"]],["osrng"]]],[11,"fmt","","",53,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",53,[[["self"]],["u32"]]],[11,"next_u64","","",53,[[["self"]],["u64"]]],[11,"fill_bytes","","",53,[[["self"]]]],[11,"try_fill_bytes","","",53,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","rand::distributions::uniform","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",49,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",49,[[["b2"],["b1"]],["self"]]],[11,"sample","","",49,[[["self"],["r"]]]],[11,"sample_single","","",49,[[["b2"],["b1"],["r"]]]],[11,"new","","",50,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",50,[[["b2"],["b1"]],["self"]]],[11,"sample","","",50,[[["self"],["r"]]]],[11,"sample_single","","",50,[[["b2"],["b1"],["r"]]]],[11,"new","","",50,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",50,[[["b2"],["b1"]],["self"]]],[11,"sample","","",50,[[["self"],["r"]]]],[11,"sample_single","","",50,[[["b2"],["b1"],["r"]]]],[11,"new","","",51,[[["b2"],["b1"]],["self"]]],[11,"new_inclusive","","",51,[[["b2"],["b1"]],["self"]]],[11,"sample","","",51,[[["self"],["r"]],["duration"]]],[11,"sample","","",9,[[["self"],["r"]],["x"]]],[11,"sample","rand::distributions","",10,[[["self"],["r"]],["bool"]]],[11,"sample","","",11,[[["self"],["r"]],["usize"]]],[11,"sample","","",12,[[["self"],["r"]]]],[11,"sample","","",13,[[["self"],["r"]]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"sample","","",45,[[["self"],["r"]],["f64"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"sample","","",46,[[["self"],["r"]],["f64"]]],[11,"sample","","",21,[[["self"],["r"]],["f64"]]],[11,"sample","","",22,[[["self"],["r"]],["f64"]]],[11,"sample","","",23,[[["self"],["r"]],["u64"]]],[11,"sample","","",24,[[["self"],["r"]],["u64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],[["f64"],["vec",["f64"]]]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",28,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["f32"]]],[11,"sample","","",43,[[["self"],["r"]],["f32"]]],[11,"sample","","",44,[[["self"],["r"]],["f32"]]],[11,"sample","","",48,[[["self"],["r"]],["f64"]]],[11,"sample","","",43,[[["self"],["r"]],["f64"]]],[11,"sample","","",44,[[["self"],["r"]],["f64"]]],[11,"sample","","",48,[[["self"],["r"]],["u8"]]],[11,"sample","","",48,[[["self"],["r"]],["u16"]]],[11,"sample","","",48,[[["self"],["r"]],["u32"]]],[11,"sample","","",48,[[["self"],["r"]],["u64"]]],[11,"sample","","",48,[[["self"],["r"]],["u128"]]],[11,"sample","","",48,[[["self"],["r"]],["usize"]]],[11,"sample","","",48,[[["self"],["r"]],["i8"]]],[11,"sample","","",48,[[["self"],["r"]],["i16"]]],[11,"sample","","",48,[[["self"],["r"]],["i32"]]],[11,"sample","","",48,[[["self"],["r"]],["i64"]]],[11,"sample","","",48,[[["self"],["r"]],["i128"]]],[11,"sample","","",48,[[["self"],["r"]],["isize"]]],[11,"sample","","",48,[[["self"],["r"]],["char"]]],[11,"sample","","",42,[[["self"],["r"]],["char"]]],[11,"sample","","",48,[[["self"],["r"]],["bool"]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]]]],[11,"sample","","",48,[[["self"],["r"]],["option"]]],[11,"sample","","",48,[[["self"],["r"]],["wrapping"]]],[11,"sample","","",30,[[["self"],["r"]],["t"]]],[11,"from","rand::distributions::uniform","",9,[[["range"]],["uniform"]]],[11,"from","","",9,[[["rangeinclusive"]],["uniform"]]],[11,"from","rand::seq::index","",36,[[["u32"],["vec",["u32"]]],["self"]]],[11,"from","","",36,[[["vec",["usize"]],["usize"]],["self"]]],[11,"len","rand::seq","",57,[[["self"]],["usize"]]],[11,"next","rand::distributions","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","rand::seq::index","",58,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"size_hint","","",58,[[["self"]]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,[[["self"]]]],[11,"next","rand::seq","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"clone","rand::distributions::uniform","",9,[[["self"]],["uniform"]]],[11,"clone","","",49,[[["self"]],["uniformint"]]],[11,"clone","","",50,[[["self"]],["uniformfloat"]]],[11,"clone","","",51,[[["self"]],["uniformduration"]]],[11,"clone","rand::distributions","",10,[[["self"]],["bernoulli"]]],[11,"clone","","",11,[[["self"]],["weightedindex"]]],[11,"clone","","",5,[[["self"]],["weightederror"]]],[11,"clone","","",12,[[["self"]],["unitspheresurface"]]],[11,"clone","","",13,[[["self"]],["unitcircle"]]],[11,"clone","","",14,[[["self"]],["gamma"]]],[11,"clone","","",15,[[["self"]],["chisquared"]]],[11,"clone","","",16,[[["self"]],["fisherf"]]],[11,"clone","","",17,[[["self"]],["studentt"]]],[11,"clone","","",18,[[["self"]],["beta"]]],[11,"clone","","",45,[[["self"]],["standardnormal"]]],[11,"clone","","",19,[[["self"]],["normal"]]],[11,"clone","","",20,[[["self"]],["lognormal"]]],[11,"clone","","",46,[[["self"]],["exp1"]]],[11,"clone","","",21,[[["self"]],["exp"]]],[11,"clone","","",22,[[["self"]],["pareto"]]],[11,"clone","","",23,[[["self"]],["poisson"]]],[11,"clone","","",24,[[["self"]],["binomial"]]],[11,"clone","","",25,[[["self"]],["cauchy"]]],[11,"clone","","",26,[[["self"]],["dirichlet"]]],[11,"clone","","",27,[[["self"]],["triangular"]]],[11,"clone","","",28,[[["self"]],["weibull"]]],[11,"clone","","",43,[[["self"]],["openclosed01"]]],[11,"clone","","",44,[[["self"]],["open01"]]],[11,"clone","","",48,[[["self"]],["standard"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"clone","rand::rngs::adapter","",33,[[["self"]],["reseedingrng"]]],[11,"clone","rand::rngs::mock","",35,[[["self"]],["steprng"]]],[11,"clone","rand::rngs","",54,[[["self"]],["smallrng"]]],[11,"clone","","",55,[[["self"]],["stdrng"]]],[11,"clone","","",56,[[["self"]],["threadrng"]]],[11,"clone","rand::seq::index","",36,[[["self"]],["indexvec"]]],[11,"clone","","",59,[[["self"]],["indexvecintoiter"]]],[11,"default","rand::rngs","",34,[[],["self"]]],[11,"default","","",56,[[],["threadrng"]]],[11,"eq","rand::distributions","",5,[[["self"],["weightederror"]],["bool"]]],[11,"eq","rand::seq::index","",36,[[["indexvec"],["self"]],["bool"]]],[11,"fmt","rand::distributions::uniform","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::adapter","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs::mock","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::rngs","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq::index","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::seq","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","rand::distributions","",5,[[["formatter"],["self"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],[["error"],["option",["error"]]]]],[11,"next_u32","rand::rngs::adapter","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,[[["self"]]]],[11,"try_fill_bytes","","",32,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",33,[[["self"]],["u32"]]],[11,"next_u64","","",33,[[["self"]],["u64"]]],[11,"fill_bytes","","",33,[[["self"]]]],[11,"try_fill_bytes","","",33,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,[[["self"]]]],[11,"try_fill_bytes","","",34,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs::mock","",35,[[["self"]],["u32"]]],[11,"next_u64","","",35,[[["self"]],["u64"]]],[11,"fill_bytes","","",35,[[["self"]]]],[11,"try_fill_bytes","","",35,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand::rngs","",54,[[["self"]],["u32"]]],[11,"next_u64","","",54,[[["self"]],["u64"]]],[11,"fill_bytes","","",54,[[["self"]]]],[11,"try_fill_bytes","","",54,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",55,[[["self"]],["u32"]]],[11,"next_u64","","",55,[[["self"]],["u64"]]],[11,"fill_bytes","","",55,[[["self"]]]],[11,"try_fill_bytes","","",55,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",56,[[["self"]],["u32"]]],[11,"next_u64","","",56,[[["self"]],["u64"]]],[11,"fill_bytes","","",56,[[["self"]]]],[11,"try_fill_bytes","","",56,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",54,[[],["self"]]],[11,"from_rng","","",54,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",55,[[],["self"]]],[11,"from_rng","","",55,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"should_retry","rand","True if this kind of error may resolve itself on retry.",2,[[],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[],["bool"]]],[11,"description","","A description of this error kind",2,[[],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",3,[[["self"]],[["option",["box"]],["box",["error"]]]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a…",52,[[],[["result",["jitterrng","timererror"]],["jitterrng"],["timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",52,[[],["jitterrng"]]],[11,"set_rounds","","Configures how many rounds are used to generate each…",52,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",52,[[["self"]],[["u8"],["timererror"],["result",["u8","timererror"]]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",52,[[["self"],["bool"]],["i64"]]],[11,"new","","Create a new `OsRng`.",53,[[],[["error"],["result",["osrng","error"]],["osrng"]]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[4,"WeightedError"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"Uniform"],[3,"Bernoulli"],[3,"WeightedIndex"],[3,"UnitSphereSurface"],[3,"UnitCircle"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"Normal"],[3,"LogNormal"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Triangular"],[3,"Weibull"],[8,"Distribution"],[3,"WeightedChoice"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Alphanumeric"],[3,"OpenClosed01"],[3,"Open01"],[3,"StandardNormal"],[3,"Exp1"],[3,"DistIter"],[3,"Standard"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"JitterRng"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]};
searchIndex["rand_chacha"] = {"doc":"The ChaCha random number generator.","i":[[3,"ChaChaRng","rand_chacha","A cryptographically secure random number generator that…",null,null],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[["self"]],["u128"]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[["self"],["u128"]]]],[11,"set_stream","","Set the stream number.",0,[[["self"],["u64"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",0,[[["chachacore"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["chacharng"]]],[11,"clone","","",1,[[["self"]],["chachacore"]]],[11,"generate","","",1,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_rng","","",0,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",1,[[],["self"]]]],"p":[[3,"ChaChaRng"],[3,"ChaChaCore"]]};
searchIndex["rand_core"] = {"doc":"Random number generation traits","i":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",null,null],[13,"Unavailable","","Feature is not available; not recoverable.",0,null],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,null],[13,"Transient","","A transient failure which likely can be resolved or worked…",0,null],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,null],[3,"Error","","Error type of random number generators",null,null],[12,"kind","","The error kind",1,null],[12,"msg","","The error message",1,null],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",2,null],[16,"Results","","Results type. This is the 'block' an RNG implementing…",2,null],[10,"generate","","Generate a new block of results.",2,[[["self"]]]],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",3,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",4,null],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[["r"]]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,[[["self"]]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,[[["self"]],[["error"],["result",["error"]]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",6,null],[10,"from_seed","","Create a new PRNG using the given seed.",6,[[],["self"]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],[["error"],["result",["error"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","rand_core::block","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"read","rand_core","",5,[[["self"]],[["error"],["usize"],["result",["usize","error"]]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"from_seed","rand_core::block","",4,[[],["blockrng64"]]],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],[["result",["blockrng64","error"]],["blockrng64"],["error"]]]],[11,"from_seed","","",3,[[],["blockrng"]]],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],[["blockrng"],["error"],["result",["blockrng","error"]]]]],[11,"next_u32","","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,[[["self"]]]],[11,"try_fill_bytes","","",4,[[["self"]],[["error"],["result",["error"]]]]],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,[[["self"]]]],[11,"try_fill_bytes","","",3,[[["self"]],[["error"],["result",["error"]]]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rand_core::block","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rand_core","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],[["error"],["option",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","rand_core::block","",3,[[["self"]],["blockrng"]]],[11,"clone","rand_core","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",4,[[["self"]],["blockrng64"]]],[11,"should_retry","rand_core","True if this kind of error may resolve itself on retry.",0,[[],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[],["bool"]]],[11,"description","","A description of this error kind",0,[[],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a…",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to…",1,[[["self"]],[["option",["box"]],["box",["error"]]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing…",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",3,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",3,[[["self"],["usize"]]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a…",4,[[["self"]]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",4,[[["self"],["usize"]]]]],"p":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rand_hc"] = {"doc":"The HC128 random number generator.","i":[[3,"Hc128Rng","rand_hc","A cryptographically secure random number generator that…",null,null],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["hc128rng"]]],[11,"clone","","",1,[[["self"]],["hc128core"]]],[11,"generate","","",1,[[["self"]]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_rng","","",0,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","Create an HC-128 random number generator with a seed. The…",1,[[],["self"]]]],"p":[[3,"Hc128Rng"],[3,"Hc128Core"]]};
searchIndex["rand_isaac"] = {"doc":"The ISAAC and ISAAC-64 random number generators.","i":[[0,"isaac","rand_isaac","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand_isaac::isaac","A random number generator that uses the ISAAC algorithm.",null,null],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",null,null],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[0,"isaac64","rand_isaac","The ISAAC-64 random number generator.",null,null],[3,"Isaac64Rng","rand_isaac::isaac64","A random number generator that uses ISAAC-64, the 64-bit…",null,null],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",null,null],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",1,[[["u64"]],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64`…",2,[[["u64"]],["self"]]],[11,"from","rand_isaac::isaac","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","rand_isaac::isaac64","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"fmt","rand_isaac::isaac","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","rand_isaac::isaac64","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","rand_isaac::isaac","",0,[[["self"]],["isaacrng"]]],[11,"clone","","",3,[[["self"]],["isaaccore"]]],[11,"clone","rand_isaac::isaac64","",1,[[["self"]],["isaac64rng"]]],[11,"clone","","",2,[[["self"]],["isaac64core"]]],[11,"generate","rand_isaac::isaac","Refills the output buffer, `results`. See also the…",3,[[["self"],["isaacarray"]]]],[11,"generate","rand_isaac::isaac64","Refills the output buffer, `results`. See also the…",2,[[["self"],["isaacarray"]]]],[11,"next_u32","rand_isaac::isaac","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","rand_isaac::isaac64","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_isaac::isaac","",0,[[],["self"]]],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",0,[[["u64"]],["self"]]],[11,"from_rng","","",0,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",3,[[],["self"]]],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",3,[[["u64"]],["self"]]],[11,"from_rng","","",3,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","rand_isaac::isaac64","",1,[[],["self"]]],[11,"seed_from_u64","","Create an ISAAC random number generator using an `u64` as…",1,[[["u64"]],["self"]]],[11,"from_rng","","",1,[[["rngcore"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",2,[[],["self"]]],[11,"seed_from_u64","","",2,[[["u64"]],["self"]]],[11,"from_rng","","",2,[[["rngcore"]],[["result",["error"]],["error"]]]]],"p":[[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"IsaacCore"]]};
searchIndex["rand_jitter"] = {"doc":"Non-physical true random number generator based on timing…","i":[[3,"JitterRng","rand_jitter","A true random number generator based on jitter in the CPU…",null,null],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`]…",null,null],[13,"NoTimer","","No timer available.",0,null],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",0,null],[13,"NotMonotonic","","Timer is not monotonically increasing.",0,null],[13,"TinyVariantions","","Variations of deltas of time too small.",0,null],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",0,null],[11,"new","","Create a new `JitterRng`. Makes use of `std::time` for a…",1,[[],[["jitterrng"],["timererror"],["result",["jitterrng","timererror"]]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied,…",1,[[],["jitterrng"]]],[11,"set_rounds","","Configures how many rounds are used to generate each…",1,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing…",1,[[["self"]],[["timererror"],["result",["u8","timererror"]],["u8"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run…",1,[[["self"],["bool"]],["i64"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["timererror"]],["bool"]]],[11,"clone","","",0,[[["self"]],["timererror"]]],[11,"clone","","",1,[[["self"]],["jitterrng"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]]],"p":[[4,"TimerError"],[3,"JitterRng"]]};
searchIndex["rand_os"] = {"doc":"Interface to the random number generator of the operating…","i":[[3,"OsRng","rand_os","A random number generator that retrieves randomness…",null,null],[11,"new","","Create a new `OsRng`.",0,[[],[["error"],["result",["osrng","error"]],["osrng"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["osrng"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]]],"p":[[3,"OsRng"]]};
searchIndex["rand_pcg"] = {"doc":"The PCG random number generators.","i":[[3,"Lcg64Xsh32","rand_pcg","A PCG random number generator (XSH RR 64/32 (LCG) variant).",null,null],[3,"Mcg128Xsl64","","A PCG random number generator (XSL 128/64 (MCG) variant).",null,null],[11,"new","","Construct an instance compatible with PCG seed and stream.",0,[[["u64"]],["self"]]],[11,"new","","Construct an instance compatible with PCG seed.",1,[[["u128"]],["self"]]],[6,"Pcg32","","`Lcg64Xsh32` is also officially known as `pcg32`.",null,null],[6,"Pcg64Mcg","","A friendly name for `Mcg128Xsl64`.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["lcg64xsh32"]]],[11,"clone","","",1,[[["self"]],["mcg128xsl64"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"next_u32","","",1,[[["self"]],["u32"]]],[11,"next_u64","","",1,[[["self"]],["u64"]]],[11,"fill_bytes","","",1,[[["self"]]]],[11,"try_fill_bytes","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_seed","","",1,[[],["self"]]]],"p":[[3,"Lcg64Xsh32"],[3,"Mcg128Xsl64"]]};
searchIndex["rand_xorshift"] = {"doc":"The xorshift random number generator.","i":[[3,"XorShiftRng","rand_xorshift","An Xorshift random number generator.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["xorshiftrng"]]],[11,"next_u32","","",0,[[["self"]],["u32"]]],[11,"next_u64","","",0,[[["self"]],["u64"]]],[11,"fill_bytes","","",0,[[["self"]]]],[11,"try_fill_bytes","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"from_seed","","",0,[[],["self"]]],[11,"from_rng","","",0,[[["rngcore"]],[["result",["error"]],["error"]]]]],"p":[[3,"XorShiftRng"]]};
searchIndex["rayon"] = {"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[0,"collections","","Parallel iterator types for [standard…",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",null,null],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["send"],["clone"]],[["repeat"],["send"],["clone"]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["send"],["clone"],["usize"]],[["send"],["clone"],["repeatn"]]]],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["send"],["empty"]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send"]],[["once"],["send"]]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",null,[[["c"],["i"]]]],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a…",null,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",null,[[["c"],["p"]]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\"…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[["self"]]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[["op"],["t"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[["op"],["t"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[["op"],["id"]]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[["op"],["id"]]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome"]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse"]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[["c"]]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[["i"]],[["ordering"],["option",["ordering"]]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer"]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback"]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",null,null],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for [results][std::result]",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["splitterminator"],["pattern"]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matchindices"],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[11,"from","rayon","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",27,[[],["t"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",29,[[],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","","",30,[[],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",32,[[],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",34,[[],["t"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","","",35,[[],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",37,[[],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",39,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","","",40,[[],["t"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[],["t"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",42,[[],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[],["t"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[],["t"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[],["t"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[],["t"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[],["t"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[],["t"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[],["t"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[],["t"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","","",75,[[],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","","",76,[[],["t"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",78,[[],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","","",79,[[],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","","",80,[[],["t"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",81,[[],["t"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","","",82,[[],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","","",83,[[],["t"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",84,[[],["t"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range_inclusive","",85,[[],["t"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",86,[[],["t"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[],["t"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[],["t"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",89,[[],["t"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","","",90,[[],["t"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[],["t"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[],["t"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[],["t"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[],["t"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[],["t"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",96,[[],["t"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[],["t"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[],["t"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","","",99,[[],["t"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_par_iter","","",100,[[],["t"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_par_iter","","",101,[[],["t"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_par_iter","","",102,[[],["t"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"into_par_iter","","",103,[[],["t"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_par_iter","","",104,[[],["t"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_par_iter","","",105,[[],["t"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",106,[[],["t"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"hash","rayon::iter","",0,[[["self"],["__h"]]]],[11,"into","","",0,[[],["result"]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["osstr"]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"deref","","",0,[[["self"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"fill_buf","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"read","","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_to_end","","",0,[[["self"],["vec"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["osstr"]]],[11,"as_mut","","",0,[[["self"]],["path"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["cstr"]]],[11,"write","","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"flush","","",0,[[["self"]],[["result",["error"]],["error"]]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"fmt","rayon","",23,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"drop","","",22,[[["self"]]]],[11,"fmt","","",23,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",22,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",20,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",25,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",26,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",21,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",24,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"default","","",24,[[],[["defaultspawn"],["threadpoolbuilder",["defaultspawn"]]]]],[11,"description","","",23,[[["self"]],["str"]]],[11,"drive_unindexed","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"opt_len","","",27,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",28,[[["c"]]]],[11,"opt_len","","",28,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_map","",29,[[["c"]]]],[11,"opt_len","","",29,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",30,[[["c"]]]],[11,"opt_len","","",30,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",31,[[["c"]]]],[11,"opt_len","","",31,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_set","",32,[[["c"]]]],[11,"opt_len","","",32,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",33,[[["c"]]]],[11,"opt_len","","",33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_map","",34,[[["c"]]]],[11,"opt_len","","",34,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",35,[[["c"]]]],[11,"opt_len","","",35,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",36,[[["c"]]]],[11,"opt_len","","",36,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_set","",37,[[["c"]]]],[11,"opt_len","","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",38,[[["c"]]]],[11,"opt_len","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::linked_list","",39,[[["c"]]]],[11,"opt_len","","",39,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",40,[[["c"]]]],[11,"opt_len","","",40,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",41,[[["c"]]]],[11,"opt_len","","",41,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"opt_len","","",42,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",43,[[["c"]]]],[11,"opt_len","","",43,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",44,[[["c"]]]],[11,"opt_len","","",44,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::iter","",45,[[["c"]]]],[11,"drive_unindexed","","",46,[[["c"]]]],[11,"opt_len","","",46,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",47,[[["c"]]]],[11,"opt_len","","",47,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",48,[[["c"]]]],[11,"opt_len","","",48,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",49,[[["c"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"drive_unindexed","","",51,[[["c"]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"drive_unindexed","","",53,[[["c"]]]],[11,"drive_unindexed","","",54,[[["c"]]]],[11,"drive_unindexed","","",55,[[["c"]]]],[11,"drive_unindexed","","",56,[[["c"]]]],[11,"drive_unindexed","","",57,[[["c"]]]],[11,"opt_len","","",57,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",58,[[["c"]]]],[11,"drive_unindexed","","",59,[[["c"]]]],[11,"opt_len","","",59,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",60,[[["c"]]]],[11,"opt_len","","",60,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",62,[[["c"]]]],[11,"opt_len","","",62,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",61,[[["c"]]]],[11,"opt_len","","",61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",63,[[["c"]]]],[11,"opt_len","","",63,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",64,[[["c"]]]],[11,"opt_len","","",64,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",66,[[["c"]]]],[11,"opt_len","","",66,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",67,[[["c"]]]],[11,"opt_len","","",67,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",68,[[["c"]]]],[11,"opt_len","","",68,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",69,[[["c"]]]],[11,"opt_len","","",69,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",70,[[["c"]]]],[11,"opt_len","","",70,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",72,[[["c"]]]],[11,"opt_len","","",72,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",71,[[["c"]]]],[11,"opt_len","","",71,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",73,[[["c"]]]],[11,"opt_len","","",73,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",74,[[["c"]]]],[11,"opt_len","","",74,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",75,[[["c"]]]],[11,"opt_len","","",75,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",76,[[["c"]]]],[11,"opt_len","","",76,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",77,[[["c"]]]],[11,"drive_unindexed","","",8,[[["c"]]]],[11,"drive_unindexed","","",78,[[["c"]]]],[11,"opt_len","","",78,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",79,[[["c"]]]],[11,"opt_len","","",79,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",80,[[["c"]]]],[11,"opt_len","","",80,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::option","",81,[[["c"]]]],[11,"opt_len","","",81,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",82,[[["c"]]]],[11,"opt_len","","",82,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",83,[[["c"]]]],[11,"opt_len","","",83,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::range","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::range_inclusive","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::result","",86,[[["c"]]]],[11,"opt_len","","",86,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",87,[[["c"]]]],[11,"opt_len","","",87,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",88,[[["c"]]]],[11,"opt_len","","",88,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::slice","",89,[[["c"]]]],[11,"opt_len","","",89,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",90,[[["c"]]]],[11,"opt_len","","",90,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",91,[[["c"]]]],[11,"opt_len","","",91,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",92,[[["c"]]]],[11,"opt_len","","",92,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",93,[[["c"]]]],[11,"opt_len","","",93,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",94,[[["c"]]]],[11,"drive_unindexed","","",95,[[["c"]]]],[11,"drive_unindexed","rayon::str","",96,[[["c"]]]],[11,"drive_unindexed","","",97,[[["c"]]]],[11,"drive_unindexed","","",98,[[["c"]]]],[11,"drive_unindexed","","",99,[[["c"]]]],[11,"drive_unindexed","","",100,[[["c"]]]],[11,"drive_unindexed","","",101,[[["c"]]]],[11,"drive_unindexed","","",102,[[["c"]]]],[11,"drive_unindexed","","",103,[[["c"]]]],[11,"drive_unindexed","","",104,[[["c"]]]],[11,"drive_unindexed","","",105,[[["c"]]]],[11,"drive_unindexed","rayon::vec","",106,[[["c"]]]],[11,"opt_len","","",106,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::iter","",0,[[["c"]]]],[11,"opt_len","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"len","","",27,[[["self"]],["usize"]]],[11,"with_producer","","",27,[[["cb"]]]],[11,"drive","","",28,[[["c"]]]],[11,"len","","",28,[[["self"]],["usize"]]],[11,"with_producer","","",28,[[["cb"]]]],[11,"drive","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,[[["cb"]]]],[11,"drive","","",43,[[["c"]]]],[11,"len","","",43,[[["self"]],["usize"]]],[11,"with_producer","","",43,[[["cb"]]]],[11,"drive","","",44,[[["c"]]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,[[["cb"]]]],[11,"drive","rayon::iter","",46,[[["c"]]]],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,[[["cb"]]]],[11,"drive","","",47,[[["c"]]]],[11,"len","","",47,[[["self"]],["usize"]]],[11,"with_producer","","",47,[[["cb"]]]],[11,"drive","","",48,[[["consumer"]]]],[11,"len","","",48,[[["self"]],["usize"]]],[11,"with_producer","","",48,[[["cb"]]]],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,[[["consumer"]]]],[11,"with_producer","","",57,[[["cb"]]]],[11,"len","","",59,[[["self"]],["usize"]]],[11,"drive","","",59,[[["consumer"]]]],[11,"with_producer","","",59,[[["cb"]]]],[11,"drive","","",60,[[["c"]]]],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,[[["cb"]]]],[11,"drive","","",62,[[["c"]]]],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,[[["cb"]]]],[11,"drive","","",61,[[["c"]]]],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,[[["cb"]]]],[11,"drive","","",63,[[["c"]]]],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,[[["cb"]]]],[11,"drive","","",64,[[["c"]]]],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",66,[[["c"]]]],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,[[["cb"]]]],[11,"drive","","",67,[[["c"]]]],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,[[["cb"]]]],[11,"drive","","",68,[[["c"]]]],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,[[["cb"]]]],[11,"drive","","",69,[[["c"]]]],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,[[["cb"]]]],[11,"drive","","",70,[[["consumer"]]]],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,[[["cb"]]]],[11,"drive","","",72,[[["consumer"]]]],[11,"len","","",72,[[["self"]],["usize"]]],[11,"with_producer","","",72,[[["cb"]]]],[11,"drive","","",71,[[["consumer"]]]],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,[[["cb"]]]],[11,"drive","","",73,[[["c"]]]],[11,"len","","",73,[[["self"]],["usize"]]],[11,"with_producer","","",73,[[["cb"]]]],[11,"drive","","",74,[[["c"]]]],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,[[["cb"]]]],[11,"drive","","",75,[[["c"]]]],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,[[["cb"]]]],[11,"drive","","",76,[[["c"]]]],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,[[["cb"]]]],[11,"drive","","",78,[[["c"]]]],[11,"with_producer","","",78,[[["cb"]]]],[11,"len","","",78,[[["self"]],["usize"]]],[11,"drive","","",79,[[["c"]]]],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,[[["cb"]]]],[11,"drive","","",80,[[["c"]]]],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,[[["cb"]]]],[11,"drive","rayon::option","",81,[[["c"]]]],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,[[["cb"]]]],[11,"drive","","",82,[[["c"]]]],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,[[["cb"]]]],[11,"drive","","",83,[[["c"]]]],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,[[["cb"]]]],[11,"drive","rayon::range","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","rayon::range_inclusive","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","rayon::result","",86,[[["c"]]]],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,[[["cb"]]]],[11,"drive","","",87,[[["c"]]]],[11,"len","","",87,[[["self"]],["usize"]]],[11,"with_producer","","",87,[[["cb"]]]],[11,"drive","","",88,[[["c"]]]],[11,"len","","",88,[[["self"]],["usize"]]],[11,"with_producer","","",88,[[["cb"]]]],[11,"drive","rayon::slice","",89,[[["c"]]]],[11,"len","","",89,[[["self"]],["usize"]]],[11,"with_producer","","",89,[[["cb"]]]],[11,"drive","","",90,[[["c"]]]],[11,"len","","",90,[[["self"]],["usize"]]],[11,"with_producer","","",90,[[["cb"]]]],[11,"drive","","",91,[[["c"]]]],[11,"len","","",91,[[["self"]],["usize"]]],[11,"with_producer","","",91,[[["cb"]]]],[11,"drive","","",92,[[["c"]]]],[11,"len","","",92,[[["self"]],["usize"]]],[11,"with_producer","","",92,[[["cb"]]]],[11,"drive","","",93,[[["c"]]]],[11,"len","","",93,[[["self"]],["usize"]]],[11,"with_producer","","",93,[[["cb"]]]],[11,"drive","rayon::vec","",106,[[["c"]]]],[11,"len","","",106,[[["self"]],["usize"]]],[11,"with_producer","","",106,[[["cb"]]]],[11,"drive","rayon::iter","",0,[[["c"]]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,[[["cb"]]]],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",27,[[["self"]],["intoiter"]]],[11,"clone","","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",30,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",35,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",39,[[["self"]],["intoiter"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",42,[[["self"]],["intoiter"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","rayon::iter","",45,[[["self"]],["iterbridge"]]],[11,"clone","","",46,[[["self"]],["chain"]]],[11,"clone","","",47,[[["self"]],["chunks"]]],[11,"clone","","",48,[[["self"]],["enumerate"]]],[11,"clone","","",49,[[["self"]],["filter"]]],[11,"clone","","",50,[[["self"]],["filtermap"]]],[11,"clone","","",51,[[["self"]],["flatmap"]]],[11,"clone","","",52,[[["self"]],["flatten"]]],[11,"clone","","",53,[[["self"]],["fold"]]],[11,"clone","","",54,[[["self"]],["foldwith"]]],[11,"clone","","",55,[[["self"]],["tryfold"]]],[11,"clone","","",56,[[["self"]],["tryfoldwith"]]],[11,"clone","","",57,[[["self"]],["skip"]]],[11,"clone","","",58,[[["self"]],["split"]]],[11,"clone","","",59,[[["self"]],["take"]]],[11,"clone","","",60,[[["self"]],["map"]]],[11,"clone","","",62,[[["self"]],["mapwith"]]],[11,"clone","","",61,[[["self"]],["mapinit"]]],[11,"clone","","",63,[[["self"]],["zip"]]],[11,"clone","","",64,[[["self"]],["zipeq"]]],[11,"clone","","",65,[[["self"]],["multizip"]]],[11,"clone","","",66,[[["self"]],["interleave"]]],[11,"clone","","",67,[[["self"]],["interleaveshortest"]]],[11,"clone","","",68,[[["self"]],["intersperse"]]],[11,"clone","","",69,[[["self"]],["update"]]],[11,"clone","","",70,[[["self"]],["rev"]]],[11,"clone","","",72,[[["self"]],["minlen"]]],[11,"clone","","",71,[[["self"]],["maxlen"]]],[11,"clone","","",73,[[["self"]],["cloned"]]],[11,"clone","","",74,[[["self"]],["copied"]]],[11,"clone","","",75,[[["self"]],["inspect"]]],[11,"clone","","",76,[[["self"]],["panicfuse"]]],[11,"clone","","",77,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",78,[[["self"]],["repeatn"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["once"]]],[11,"clone","rayon::option","",81,[[["self"]],["intoiter"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","rayon::range","",84,[[["self"]],["iter"]]],[11,"clone","rayon::range_inclusive","",85,[[["self"]],["iter"]]],[11,"clone","rayon::result","",86,[[["self"]],["intoiter"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"clone","rayon::slice","",89,[[["self"]],["self"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"clone","","",91,[[["self"]],["self"]]],[11,"clone","","",94,[[["self"]],["self"]]],[11,"clone","rayon::str","",96,[[["self"]],["chars"]]],[11,"clone","","",97,[[["self"]],["charindices"]]],[11,"clone","","",98,[[["self"]],["bytes"]]],[11,"clone","","",99,[[["self"]],["encodeutf16"]]],[11,"clone","","",100,[[["self"]],["split"]]],[11,"clone","","",101,[[["self"]],["splitterminator"]]],[11,"clone","","",102,[[["self"]],["lines"]]],[11,"clone","","",103,[[["self"]],["splitwhitespace"]]],[11,"clone","","",104,[[["self"]],["matches"]]],[11,"clone","","",105,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",106,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::iter","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::option","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::range","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::range_inclusive","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::result","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::slice","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::str","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::vec","",106,[[["formatter"],["self"]],["result"]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",20,[[["self"]],["bool"]]],[11,"index","","Get the index of this thread in the pool, within…",21,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",21,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",21,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",22,[[["configuration"]],[["threadpool"],["result",["threadpool","box"]],["box",["error"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",22,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",22,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",22,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",22,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",24,[[],[["defaultspawn"],["threadpoolbuilder",["defaultspawn"]]]]],[11,"build","","Create a new `ThreadPool` initialized using this…",24,[[],[["result",["threadpool","threadpoolbuilderror"]],["threadpool"],["threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",24,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",24,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",24,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",24,[[["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",24,[[["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",24,[[["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",24,[[["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",24,[[],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",24,[[["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",24,[[["h"]],["threadpoolbuilder"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",25,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",26,[[["self"],["body"]]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["r"],["either"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"] = {"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],[["bool"],["option",["bool"]]]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration"]],[["result",["box"]],["box",["error"]]]]],[11,"index","","Get the index of this thread in the pool, within…",0,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration"]],[["result",["threadpool","box"]],["threadpool"],["box",["error"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[],["self"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",4,[[],[["result",["threadpool","threadpoolbuilderror"]],["threadpool"],["threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",4,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",4,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",4,[[["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",4,[[["usize"]],["self"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[["h"]],["self"]]],[11,"stack_size","","Set the stack size of the worker threads",4,[[["usize"]],["self"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",4,[[["h"]],["self"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",4,[[["h"]],["self"]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["result",["threadpool","box"]],["threadpool"],["box",["error"]]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[["t"],["f"]],[["always"],["scopeguard",["always"]]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[],["t"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["shred"] = {"doc":"Shared resource dispatcher","i":[[24,"SystemData","shred","A reexport of the `#[derive(SystemData]` macro provided by…",null,null],[3,"AsyncDispatcher","","Like, `Dispatcher` but works asynchronously.",null,null],[3,"Par","","Runs two tasks in parallel. These two tasks are called…",null,null],[3,"ParSeq","","A dispatcher intended to be used with `Par` and `Seq`…",null,null],[3,"Seq","","Runs two tasks sequentially. These two tasks are called…",null,null],[3,"BatchAccessor","","The `BatchAccessor` is used to notify the main dispatcher…",null,null],[3,"BatchUncheckedWorld","","The `BatchUncheckedWorld` wraps an instance of the world.…",null,null],[12,"0","","",0,null],[3,"DefaultBatchControllerSystem","","The `DefaultBatchControllerSystem` is a simple…",null,null],[3,"Dispatcher","","The dispatcher struct, allowing systems to be executed in…",null,null],[3,"DispatcherBuilder","","Builder for the [`Dispatcher`].",null,null],[3,"MetaIter","","An iterator for the `MetaTable`.",null,null],[3,"MetaIterMut","","A mutable iterator for the `MetaTable`.",null,null],[3,"MetaTable","","The `MetaTable` which allows to store object-safe trait…",null,null],[3,"StaticAccessor","","The static accessor that is used for `SystemData`.",null,null],[3,"DefaultProvider","","A `SetupHandler` that simply uses the default…",null,null],[3,"Entry","","An entry to a resource of the `World` struct. This is…",null,null],[3,"Fetch","","Allows to fetch a resource in a system immutably.",null,null],[3,"FetchMut","","Allows to fetch a resource in a system mutably.",null,null],[3,"PanicHandler","","A setup handler that simply does nothing and thus will…",null,null],[3,"Read","","Allows to fetch a resource in a system immutably.",null,null],[3,"ResourceId","","The id of a [`Resource`], which simply wraps a type id and…",null,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[3,"Write","","Allows to fetch a resource in a system mutably.",null,null],[4,"AccessorCow","","Either an `Accessor` of the system `T` or a reference to it.",null,null],[13,"Ref","","A reference to an accessor.",1,null],[13,"Owned","","An owned accessor.",1,null],[4,"RunningTime","","",null,null],[13,"VeryShort","","",2,null],[13,"Short","","",2,null],[13,"Average","","",2,null],[13,"Long","","",2,null],[13,"VeryLong","","",2,null],[0,"cell","","Helper module for some internals, most users don't need to…",null,null],[3,"InvalidBorrow","shred::cell","Marker struct for an invalid borrow error",null,null],[3,"Ref","","An immutable reference to data in a `TrustCell`.",null,null],[3,"RefMut","","A mutable reference to data in a `TrustCell`.",null,null],[3,"TrustCell","","A custom cell container that is a `RefCell` with…",null,null],[11,"map","","Makes a new `Ref` for a component of the borrowed data…",3,[[["f"]],["ref"]]],[11,"map","","Makes a new `RefMut` for a component of the borrowed data…",4,[[["f"]],["refmut"]]],[11,"new","","Create a new cell, similar to `RefCell::new`",5,[[["t"]],["self"]]],[11,"into_inner","","Consumes this cell and returns ownership of `T`.",5,[[],["t"]]],[11,"borrow","","Get an immutable reference to the inner data.",5,[[["self"]],["ref"]]],[11,"try_borrow","","Get an immutable reference to the inner data.",5,[[["self"]],[["invalidborrow"],["ref"],["result",["ref","invalidborrow"]]]]],[11,"borrow_mut","","Get a mutable reference to the inner data.",5,[[["self"]],["refmut"]]],[11,"try_borrow_mut","","Get a mutable reference to the inner data.",5,[[["self"]],[["invalidborrow"],["refmut"],["result",["refmut","invalidborrow"]]]]],[11,"get_mut","","Gets exclusive access to the inner value, bypassing the…",5,[[["self"]],["t"]]],[11,"setup","shred","Sets up all the systems which means they are gonna add…",6,[[["self"]]]],[11,"dispatch","","Dispatches the systems asynchronously. Does not execute…",6,[[["self"]]]],[11,"wait","","Waits for all the asynchronously dispatched systems to…",6,[[["self"]]]],[11,"wait_without_tl","","Waits for all the asynchronously dispatched systems to…",6,[[["self"]]]],[11,"running","","Checks if any of the asynchronously dispatched systems are…",6,[[["self"]],["bool"]]],[11,"res","","Returns the `World`.",6,[[["self"]],["r"]]],[11,"world","","Returns the `World`.",6,[[["self"]],["r"]]],[11,"mut_res","","Borrows the `World` mutably.",6,[[["self"]],["r"]]],[11,"world_mut","","Borrows the `World` mutably.",6,[[["self"]],["r"]]],[11,"new","","Creates a `BatchAccessor`",7,[[["resourceid"],["vec",["resourceid"]]],["self"]]],[11,"new","","Creates a new `DispatcherBuilder` by using the `Default`…",8,[[],["self"]]],[11,"with","","Adds a new system with a given name and a list of…",8,[[["str"],["t"]],["self"]]],[11,"add","","Adds a new system with a given name and a list of…",8,[[["str"],["self"],["t"]]]],[11,"with_batch","","The `Batch` is a `System` which contains a `Dispatcher`.…",8,[[["str"],["dispatcherbuilder"]],["self"]]],[11,"add_batch","","The `Batch` is a `System` which contains a `Dispatcher`.…",8,[[["str"],["dispatcherbuilder"],["self"]]]],[11,"with_thread_local","","Adds a new thread local system.",8,[[["t"]],["self"]]],[11,"add_thread_local","","Adds a new thread local system.",8,[[["self"],["t"]]]],[11,"with_barrier","","Inserts a barrier which assures that all systems added…",8,[[],["self"]]],[11,"add_barrier","","Inserts a barrier which assures that all systems added…",8,[[["self"]]]],[11,"with_pool","","Attach a rayon thread pool to the builder and use that…",8,[[["arc",["threadpool"]],["threadpool"]],["self"]]],[11,"add_pool","","Attach a rayon thread pool to the builder and use that…",8,[[["self"],["arc",["threadpool"]],["threadpool"]]]],[11,"print_par_seq","","Prints the equivalent system graph that can be easily used…",8,[[["self"]]]],[11,"build","","Builds the `Dispatcher`.",8,[[],["dispatcher"]]],[11,"build_async","","Builds an async dispatcher.",8,[[["r"]],["asyncdispatcher"]]],[11,"setup","","Sets up all the systems which means they are gonna add…",9,[[["world"],["self"]]]],[11,"dispose","","Calls the `dispose` method of all systems and allows them…",9,[[["world"]]]],[11,"dispatch","","Dispatch all the systems with given resources and context…",9,[[["self"],["world"]]]],[11,"dispatch_par","","Dispatches the systems (except thread local systems) in…",9,[[["self"],["world"]]]],[11,"dispatch_seq","","Dispatches the systems (except thread local systems)…",9,[[["self"],["world"]]]],[11,"dispatch_thread_local","","Dispatch only thread local systems sequentially.",9,[[["self"],["world"]]]],[11,"max_threads","","This method returns the largest amount of threads this…",9,[[["self"]],["usize"]]],[11,"new","","Creates a new `Par` struct, with the tail being a no-op.",10,[[["h"]],["self"]]],[11,"with","","Adds `sys` as the second job and returns a new `Par`…",10,[[["t"]],[["nil"],["par",["par","nil"]],["par"]]]],[11,"new","","Creates a new `ParSeq` dispatcher. `run` is usually…",11,[[["t"],["p"]],["self"]]],[11,"setup","","Sets up `world` for `dispatch`ing. This will add default…",11,[[["world"],["self"]]]],[11,"dispatch","","Dispatches the systems using `world`. This doesn't call…",11,[[["self"],["world"]]]],[11,"new","","Creates a new `Seq` struct, with the tail being a no-op.",12,[[["h"]],["self"]]],[11,"with","","Adds `sys` as the second job and returns a new `Seq`…",12,[[["t"]],[["nil"],["seq",["seq","nil"]],["seq"]]]],[11,"new","","Creates a new `MetaTable`.",13,[[],["self"]]],[11,"register","","Registers a resource `R` that implements the trait `T`.…",13,[[["self"],["r"]]]],[11,"get","","Tries to convert `world` to a trait object of type `&T`.…",13,[[["resource"],["self"]],[["t"],["option"]]]],[11,"get_mut","","Tries to convert `world` to a trait object of type `&mut…",13,[[["resource"],["self"]],[["option"],["t"]]]],[11,"iter","","Iterates all resources that implement `T` and were…",13,[[["world"],["self"]],["metaiter"]]],[11,"iter_mut","","Iterates all resources that implement `T` and were…",13,[[["world"],["self"]],["metaitermut"]]],[11,"or_insert","","Returns this entry's value, inserts and returns `v`…",14,[[["t"]],["fetchmut"]]],[11,"or_insert_with","","Returns this entry's value, inserts and returns the return…",14,[[["f"]],["fetchmut"]]],[11,"new","","Creates a new resource id from a given type.",15,[[],["self"]]],[11,"from_type_id","","Create a new resource id from a raw type ID.",15,[[["typeid"]],["self"]]],[11,"new_with_dynamic_id","","Creates a new resource id from a given type and a…",15,[[["u64"]],["self"]]],[11,"from_type_id_and_dynamic_id","","Create a new resource id from a raw type ID and a \"dynamic…",15,[[["typeid"],["u64"]],["self"]]],[11,"empty","","Creates a new, empty resource container.",16,[[],["self"]]],[11,"insert","","Inserts a resource into this container. If the resource…",16,[[["self"],["r"]]]],[11,"remove","","Removes a resource of type `R` from the `World` and…",16,[[["self"]],["option"]]],[11,"has_value","","Returns true if the specified resource type `R` exists in…",16,[[["self"]],["bool"]]],[11,"has_value_raw","","Returns true if the specified resource type exists in…",16,[[["resourceid"],["self"]],["bool"]]],[11,"entry","","Returns an entry for the resource with type `R`.",16,[[["self"]],["entry"]]],[11,"system_data","","Gets `SystemData` `T` from the `World`. This can be used…",16,[[["self"]],["t"]]],[11,"setup","","Sets up system data `T` for fetching afterwards.",16,[[["self"]]]],[11,"exec","","Executes `f` once, right now and with the specified system…",16,[[["self"],["f"]],["r"]]],[11,"fetch","","Fetches the resource with the specified type `T` or panics…",16,[[["self"]],["fetch"]]],[11,"try_fetch","","Like `fetch`, but returns an `Option` instead of inserting…",16,[[["self"]],[["fetch"],["option",["fetch"]]]]],[11,"try_fetch_by_id","","Like `try_fetch`, but fetches the resource by its…",16,[[["resourceid"],["self"]],[["fetch"],["option",["fetch"]]]]],[11,"fetch_mut","","Fetches the resource with the specified type `T` mutably.",16,[[["self"]],["fetchmut"]]],[11,"try_fetch_mut","","Like `fetch_mut`, but returns an `Option` instead of…",16,[[["self"]],[["fetchmut"],["option",["fetchmut"]]]]],[11,"try_fetch_mut_by_id","","Like `try_fetch_mut`, but fetches the resource by its…",16,[[["resourceid"],["self"]],[["fetchmut"],["option",["fetchmut"]]]]],[11,"insert_by_id","","Internal function for inserting resources, should only be…",16,[[["resourceid"],["self"],["r"]]]],[11,"remove_by_id","","Internal function for removing resources, should only be…",16,[[["resourceid"],["self"]],["option"]]],[11,"try_fetch_internal","","Internal function for fetching resources, should only be…",16,[[["resourceid"],["self"]],[["option",["trustcell"]],["trustcell"]]]],[11,"get_mut","","Retrieves a resource without fetching, which is cheaper,…",16,[[["self"]],[["t"],["option"]]]],[11,"get_mut_raw","","Retrieves a resource without fetching, which is cheaper,…",16,[[["resourceid"],["self"]],[["option",["resource"]],["resource"]]]],[6,"ReadExpect","","Allows to fetch a resource in a system immutably. This…",null,null],[6,"WriteExpect","","Allows to fetch a resource in a system mutably. This will…",null,null],[6,"Resources","","Alias for `World` for easier migration to the new version.…",null,null],[8,"RunWithPool","","Similar to `RunNow` except additionally taking in a…",null,null],[10,"setup","","Sets up `World` for a later call to `run`.",17,[[["world"],["self"]]]],[10,"run","","Runs the system/group of systems. Possibly in parallel…",17,[[["threadpool"],["self"],["world"]]]],[10,"reads","","Accumulates the necessary read/shared resources from the…",17,[[["vec"],["self"]]]],[10,"writes","","Accumulates the necessary write/exclusive resources from…",17,[[["vec"],["self"]]]],[8,"BatchController","","The `BatchController` is the additional trait that a…",null,null],[16,"BatchSystemData","","This associated type has to contain all resources batch…",18,null],[10,"create","","Creates an instance of the `BatchControllerSystem`.",18,[[["dispatcher"],["batchaccessor"]],["self"]]],[8,"CastFrom","","Helper trait for the `MetaTable`. This trait is required…",null,null],[10,"cast","","Casts an immutable `T` reference to a trait object.",19,[[["t"]],["self"]]],[10,"cast_mut","","Casts a mutable `T` reference to a trait object.",19,[[["t"]],["self"]]],[8,"Accessor","","A trait for accessing read/write multiple resources from a…",null,null],[10,"try_new","","Tries to create a new instance of this type. This one…",20,[[],["option"]]],[10,"reads","","A list of [`ResourceId`]s the bundle needs read access to…",20,[[["self"]],[["resourceid"],["vec",["resourceid"]]]]],[10,"writes","","A list of [`ResourceId`]s the bundle needs write access to…",20,[[["self"]],[["resourceid"],["vec",["resourceid"]]]]],[8,"DynamicSystemData","","A struct implementing system data indicates that it…",null,null],[16,"Accessor","","The accessor of the `SystemData`, which specifies the read…",21,null],[10,"setup","","Sets up `World` for fetching this system data.",21,[[["world"]]]],[10,"fetch","","Creates a new resource bundle by fetching the required…",21,[[["world"]],["self"]]],[8,"RunNow","","Trait for fetching data and running systems. Automatically…",null,null],[10,"run_now","","Runs the system now.",22,[[["self"],["world"]]]],[10,"setup","","Sets up `World` for a later call to `run_now`.",22,[[["world"],["self"]]]],[11,"dispose","","Performs clean up that requires resources from the…",22,[[["world"],["box"]]]],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",23,null],[10,"run","","Executes the system with the required system data.",23,[[["self"]]]],[11,"running_time","","Returns a hint how long the system needs for running. This…",23,[[["self"]],["runningtime"]]],[11,"accessor","","Return the accessor from the [`SystemData`].",23,[[["self"]],["accessorcow"]]],[11,"setup","","Sets up the `World` using `Self::SystemData::setup`.",23,[[["world"],["self"]]]],[11,"dispose","","Performs clean up that requires resources from the…",23,[[["world"]]]],[8,"SystemData","","A static system data that can specify its dependencies at…",null,null],[10,"setup","","Sets up the system data for fetching it from the `World`.",24,[[["world"]]]],[10,"fetch","","Fetches the system data from `World`. Note that this is…",24,[[["world"]],["self"]]],[10,"reads","","Returns all read dependencies as fetched from `Self::fetch`.",24,[[],[["resourceid"],["vec",["resourceid"]]]]],[10,"writes","","Returns all write dependencies as fetched from…",24,[[],[["resourceid"],["vec",["resourceid"]]]]],[8,"Resource","","A resource is a data slot which lives in the `World` can…",null,null],[8,"SetupHandler","","A setup handler performing the fetching of `T`.",null,null],[10,"setup","","Sets up `World` for fetching `T`.",25,[[["world"]]]],[14,"par","","The `par!` macro may be used to easily create a structure…",null,null],[14,"seq","","The `seq!` macro may be used to easily create a structure…",null,null],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"par_bridge","","",27,[[],["iterbridge"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"par_bridge","","",28,[[],["iterbridge"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","shred::cell","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"create","shred","",26,[[["dispatcher"],["batchaccessor"]],["self"]]],[11,"setup","","",10,[[["world"],["self"]]]],[11,"run","","",10,[[["threadpool"],["self"],["world"]]]],[11,"reads","","",10,[[["vec"],["self"]]]],[11,"writes","","",10,[[["vec"],["self"]]]],[11,"setup","","",12,[[["world"],["self"]]]],[11,"run","","",12,[[["threadpool"],["self"],["world"]]]],[11,"reads","","",12,[[["vec"],["self"]]]],[11,"writes","","",12,[[["vec"],["self"]]]],[11,"try_new","","",7,[[],["option"]]],[11,"reads","","",7,[[["self"]],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",7,[[["self"]],[["resourceid"],["vec",["resourceid"]]]]],[11,"try_new","","",29,[[],["option"]]],[11,"reads","","",29,[[["self"]],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",29,[[["self"]],[["resourceid"],["vec",["resourceid"]]]]],[11,"run_now","","",9,[[["self"],["world"]]]],[11,"setup","","",9,[[["world"],["self"]]]],[11,"dispose","","",9,[[["world"],["box"]]]],[11,"run_now","","",11,[[["self"],["world"]]]],[11,"setup","","",11,[[["world"],["self"]]]],[11,"run","","",26,[[["self"]]]],[11,"running_time","","",26,[[["self"]],["runningtime"]]],[11,"accessor","","",26,[[["self"]],["accessorcow"]]],[11,"setup","","",26,[[["world"],["self"]]]],[11,"setup","","",34,[[["world"]]]],[11,"fetch","","",34,[[["world"]],["self"]]],[11,"reads","","",34,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",34,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"setup","","",35,[[["world"]]]],[11,"fetch","","",35,[[["world"]],["self"]]],[11,"reads","","",35,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"writes","","",35,[[],[["resourceid"],["vec",["resourceid"]]]]],[11,"setup","","",0,[[["world"]]]],[11,"fetch","","",0,[[["world"]],["self"]]],[11,"setup","","",30,[[["world"]]]],[11,"setup","","",33,[[["world"]]]],[11,"drop","shred::cell","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"from","shred","",34,[[["fetch"]],["self"]]],[11,"from","","",35,[[["fetchmut"]],["self"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"clone","shred::cell","",36,[[["self"]],["invalidborrow"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","shred","",2,[[["self"]],["runningtime"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["resourceid"]]],[11,"default","shred::cell","",5,[[],["self"]]],[11,"default","shred","",8,[[],["dispatcherbuilder"]]],[11,"default","","",13,[[],["self"]]],[11,"default","","",29,[[],["staticaccessor"]]],[11,"default","","",16,[[],["world"]]],[11,"cmp","shred::cell","",36,[[["self"],["invalidborrow"]],["ordering"]]],[11,"cmp","shred","",15,[[["resourceid"],["self"]],["ordering"]]],[11,"eq","shred::cell","",36,[[["self"],["invalidborrow"]],["bool"]]],[11,"eq","shred","",15,[[["resourceid"],["self"]],["bool"]]],[11,"ne","","",15,[[["resourceid"],["self"]],["bool"]]],[11,"partial_cmp","shred::cell","",36,[[["self"],["invalidborrow"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","shred","",15,[[["resourceid"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",15,[[["resourceid"],["self"]],["bool"]]],[11,"le","","",15,[[["resourceid"],["self"]],["bool"]]],[11,"gt","","",15,[[["resourceid"],["self"]],["bool"]]],[11,"ge","","",15,[[["resourceid"],["self"]],["bool"]]],[11,"deref","shred::cell","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","shred","",1,[[["self"]]]],[11,"deref","","",34,[[["self"]],["t"]]],[11,"deref","","",35,[[["self"]],["t"]]],[11,"deref","","",31,[[["self"]],["t"]]],[11,"deref","","",32,[[["self"]],["t"]]],[11,"deref_mut","shred::cell","",4,[[["self"]],["t"]]],[11,"deref_mut","shred","",35,[[["self"]],["t"]]],[11,"deref_mut","","",32,[[["self"]],["t"]]],[11,"fmt","shred::cell","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","shred","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","shred::cell","",36,[[["formatter"],["self"]],[["formaterror"],["result",["formaterror"]]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","shred","",15,[[["self"],["__h"]]]],[11,"description","shred::cell","",36,[[["self"]],["str"]]],[11,"dispose","shred","Performs clean up that requires resources from the…",22,[[["world"],["box"]]]],[11,"running_time","","Returns a hint how long the system needs for running. This…",23,[[["self"]],["runningtime"]]],[11,"accessor","","Return the accessor from the [`SystemData`].",23,[[["self"]],["accessorcow"]]],[11,"setup","","Sets up the `World` using `Self::SystemData::setup`.",23,[[["world"],["self"]]]],[11,"dispose","","Performs clean up that requires resources from the…",23,[[["world"]]]],[11,"is","","Returns true if the boxed type is the same as `T`",37,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type…",37,[[["self"]],[["t"],["option"]]]],[11,"downcast_ref_unchecked","","Returns a reference to the boxed value, blindly assuming…",37,[[["self"]],["t"]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is…",37,[[["self"]],[["option"],["t"]]]],[11,"downcast_mut_unchecked","","Returns a mutable reference to the boxed value, blindly…",37,[[["self"]],["t"]]],[11,"downcast","","Returns the boxed value if it is of type `T`, or…",37,[[["box"]],[["result",["box","box"]],["box"],["box"]]]],[11,"downcast_unchecked","","Returns the boxed value, blindly assuming it to be of type…",37,[[["box"]],[["box"],["resource"]]]]],"p":[[3,"BatchUncheckedWorld"],[4,"AccessorCow"],[4,"RunningTime"],[3,"Ref"],[3,"RefMut"],[3,"TrustCell"],[3,"AsyncDispatcher"],[3,"BatchAccessor"],[3,"DispatcherBuilder"],[3,"Dispatcher"],[3,"Par"],[3,"ParSeq"],[3,"Seq"],[3,"MetaTable"],[3,"Entry"],[3,"ResourceId"],[3,"World"],[8,"RunWithPool"],[8,"BatchController"],[8,"CastFrom"],[8,"Accessor"],[8,"DynamicSystemData"],[8,"RunNow"],[8,"System"],[8,"SystemData"],[8,"SetupHandler"],[3,"DefaultBatchControllerSystem"],[3,"MetaIter"],[3,"MetaIterMut"],[3,"StaticAccessor"],[3,"DefaultProvider"],[3,"Fetch"],[3,"FetchMut"],[3,"PanicHandler"],[3,"Read"],[3,"Write"],[3,"InvalidBorrow"],[8,"Resource"]]};
searchIndex["shred_derive"] = {"doc":"","i":[[24,"SystemData","shred_derive","Used to `#[derive]` the trait `SystemData`.",null,null]],"p":[]};
searchIndex["shrev"] = {"doc":"Event channel, pull based, that use a ringbuffer for…","i":[[3,"ReaderId","shrev","A reader ID which represents a subscription to the events…",null,null],[3,"EventIterator","","Iterator over a slice of data in `RingBufferStorage`.",null,null],[3,"EventChannel","","The `EventChannel`, which is the central component of…",null,null],[8,"Event","","Marker trait for data to use with the EventChannel.",null,null],[11,"new","","Create a new `EventChannel` with a default size of 64.",0,[[],["self"]]],[11,"with_capacity","","Create a new `EventChannel` with the given starting…",0,[[["usize"]],["self"]]],[11,"would_write","","Returns `true` if any reader would observe an additional…",0,[[["self"]],["bool"]]],[11,"register_reader","","Register a new reader.",0,[[["self"]],["readerid"]]],[11,"slice_write","","Write a slice of events into storage",0,[[["self"]]]],[11,"iter_write","","Write an iterator of events into storage",0,[[["self"],["i"]]]],[11,"drain_vec_write","","Drain a vector of events into storage.",0,[[["self"],["vec"]]]],[11,"single_write","","Write a single event into storage.",0,[[["self"],["e"]]]],[11,"read","","Read any events that have been written to storage since…",0,[[["self"],["readerid"]],["eventiterator"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"next","","",2,[[["self"]],[["t"],["option"]]]],[11,"size_hint","","",2,[[["self"]]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"EventChannel"],[3,"ReaderId"],[3,"EventIterator"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[5,"unreachable","","Hint to the optimizer that any code path which calls this…",null,[[]]],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",null,null],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,[[["self"]]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",2,null],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,[[["self"]]]],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,[[["self"]]]],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,[[["self"]]]],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,[[["self"]]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,[[["self"],["usize"]]]],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,[[["self"],["usize"]]]],[11,"insert","","Insert an element at position `index`, shifting all…",3,[[["self"],["usize"]]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["intoiterator"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["fnmut"],["self"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,[[["usize"]],["smallvec"]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,[[["self"],["usize"]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,[[["self"],["usize"]]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[["usize"]],["self"]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[],["t"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,[[["self"]]]],[11,"extend_from_slice","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"as_mut","","",3,[[["self"]]]],[11,"as_ref","","",3,[[["self"]]]],[11,"from","","",3,[[],["smallvec"]]],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"default","","",3,[[],["smallvec"]]],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"eq","","",3,[[["smallvec"],["self"]],["bool"]]],[11,"ne","","",3,[[["smallvec"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","","",3,[[["self"]]]],[11,"deref_mut","","",3,[[["self"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"index","","",3,[[["self"],["usize"]]]],[11,"index","","",3,[[["usize"],["self"],["range",["usize"]]]]],[11,"index","","",3,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["self"],["rangefull"]]]],[11,"index_mut","","",3,[[["self"],["usize"]]]],[11,"index_mut","","",3,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",3,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",3,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index_mut","","",3,[[["self"],["rangefull"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["smallvec"]]],[11,"borrow","","",3,[[["self"]]]],[11,"borrow_mut","","",3,[[["self"]]]],[11,"write","","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_all","","",3,[[["self"]],["result"]]],[11,"flush","","",3,[[["self"]],["result"]]]],"p":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["specs"] = {"doc":"SPECS Parallel ECS","i":[[3,"BitSet","specs","A `BitSet` is a simple set designed to track which indices…",null,null],[8,"Accessor","","A trait for accessing read/write multiple resources from a…",null,null],[10,"try_new","","Tries to create a new instance of this type. This one…",0,[[],["option"]]],[10,"reads","","A list of [`ResourceId`]s the bundle needs read access to…",0,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[10,"writes","","A list of [`ResourceId`]s the bundle needs write access to…",0,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[4,"AccessorCow","","Either an `Accessor` of the system `T` or a reference to it.",null,null],[13,"Ref","","A reference to an accessor.",1,null],[13,"Owned","","An owned accessor.",1,null],[3,"BatchAccessor","","The `BatchAccessor` is used to notify the main dispatcher…",null,null],[8,"BatchController","","The `BatchController` is the additional trait that a…",null,null],[16,"BatchSystemData","","This associated type has to contain all resources batch…",2,null],[10,"create","","Creates an instance of the `BatchControllerSystem`.",2,[[["dispatcher"],["batchaccessor"]],["self"]]],[3,"BatchUncheckedWorld","","The `BatchUncheckedWorld` wraps an instance of the world.…",null,null],[12,"0","","",3,null],[3,"DefaultBatchControllerSystem","","The `DefaultBatchControllerSystem` is a simple…",null,null],[3,"Dispatcher","","The dispatcher struct, allowing systems to be executed in…",null,null],[3,"DispatcherBuilder","","Builder for the [`Dispatcher`].",null,null],[3,"Read","","Allows to fetch a resource in a system immutably.",null,null],[6,"ReadExpect","","Allows to fetch a resource in a system immutably. This…",null,null],[8,"RunNow","","Trait for fetching data and running systems. Automatically…",null,null],[10,"run_now","","Runs the system now.",4,[[["world"],["self"]]]],[10,"setup","","Sets up `World` for a later call to `run_now`.",4,[[["self"],["world"]]]],[11,"dispose","","Performs clean up that requires resources from the…",4,[[["box"],["world"]]]],[4,"RunningTime","","",null,null],[13,"VeryShort","","",5,null],[13,"Short","","",5,null],[13,"Average","","",5,null],[13,"Long","","",5,null],[13,"VeryLong","","",5,null],[3,"StaticAccessor","","The static accessor that is used for `SystemData`.",null,null],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",6,null],[10,"run","","Executes the system with the required system data.",6,[[["self"]]]],[11,"running_time","","Returns a hint how long the system needs for running. This…",6,[[["self"]],["runningtime"]]],[11,"accessor","","Return the accessor from the [`SystemData`].",6,[[["self"]],["accessorcow"]]],[11,"setup","","Sets up the `World` using `Self::SystemData::setup`.",6,[[["self"],["world"]]]],[11,"dispose","","Performs clean up that requires resources from the…",6,[[["world"]]]],[8,"SystemData","","A static system data that can specify its dependencies at…",null,null],[10,"setup","","Sets up the system data for fetching it from the `World`.",7,[[["world"]]]],[10,"fetch","","Fetches the system data from `World`. Note that this is…",7,[[["world"]],["self"]]],[10,"reads","","Returns all read dependencies as fetched from `Self::fetch`.",7,[[],[["vec",["resourceid"]],["resourceid"]]]],[10,"writes","","Returns all write dependencies as fetched from…",7,[[],[["vec",["resourceid"]],["resourceid"]]]],[24,"SystemData","","Used to `#[derive]` the trait `SystemData`.",null,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[3,"Write","","Allows to fetch a resource in a system mutably.",null,null],[6,"WriteExpect","","Allows to fetch a resource in a system mutably. This will…",null,null],[3,"ReaderId","","A reader ID which represents a subscription to the events…",null,null],[3,"AsyncDispatcher","","Like, `Dispatcher` but works asynchronously.",null,null],[3,"DenseVecStorage","","Dense vector storage. Has a redirection 2-way table…",null,null],[3,"FlaggedStorage","","Wrapper storage that tracks modifications, insertions, and…",null,null],[3,"HashMapStorage","","`HashMap`-based storage. Best suited for rare components.",null,null],[3,"NullStorage","","A null storage type, used for cases where the component…",null,null],[3,"VecStorage","","Vector storage. Uses a simple `Vec`. Supposed to have…",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[3,"LazyUpdate","","Lazy updates can be used for world updates that need to…",null,null],[0,"changeset","","Provides a changeset that can be collected from an iterator.",null,null],[3,"ChangeSet","specs::changeset","Change set that can be collected from an iterator, and…",null,null],[11,"new","","Create a new change set",8,[[],["self"]]],[11,"add","","Add a value to the change set. If the entity already have…",8,[[["entity"],["self"],["t"]]]],[11,"clear","","Clear the changeset",8,[[["self"]]]],[0,"error","specs","Specs errors",null,null],[3,"BoxedErr","specs::error","A boxed error implementing `Debug`, `Display` and `Error`.",null,null],[12,"0","","",9,null],[3,"WrongGeneration","","Wrong generation error.",null,null],[12,"action","","The action that failed because of the wrong generation.",10,null],[12,"actual_gen","","The actual generation of this id.",10,null],[12,"entity","","The entity that has been passed, containing the id and the…",10,null],[4,"Error","","The Specs error type. This is an enum which is able to…",null,null],[13,"Custom","","A custom, boxed error.",11,null],[13,"WrongGeneration","","Wrong generation error.",11,null],[4,"NoError","","An error type which cannot be instantiated. Used as a…",null,null],[11,"new","","Creates a new boxed error.",9,[[["t"]],["self"]]],[0,"join","specs","Joining of components for iteration over entities with…",null,null],[3,"JoinParIter","specs::join","`JoinParIter` is a `ParallelIterator` over a group of…",null,null],[3,"MaybeJoin","","A `Join`-able structure that yields all indices, returning…",null,null],[12,"0","","",12,null],[3,"JoinIter","","`JoinIter` is an `Iterator` over a group of `Storages`.",null,null],[8,"ParJoin","","The purpose of the `ParJoin` trait is to provide a way to…",null,null],[11,"par_join","","Create a joined parallel iterator over the contents.",13,[[],["joinpariter"]]],[8,"BitAnd","","`BitAnd` is a helper method to & bitsets together…",null,null],[16,"Value","","The combined bitsets.",14,null],[10,"and","","Combines `Self` into a single `BitSetLike` through…",14,[[]]],[8,"Join","","The purpose of the `Join` trait is to provide a way to…",null,null],[16,"Type","","Type of joined components.",15,null],[16,"Value","","Type of joined storages.",15,null],[16,"Mask","","Type of joined bit mask.",15,null],[11,"join","","Create a joined iterator over the contents.",15,[[],["joiniter"]]],[11,"maybe","","Returns a `Join`-able structure that yields all indices,…",15,[[],["maybejoin"]]],[10,"open","","Open this join by returning the mask and the storages.",15,[[]]],[10,"get","","Get a joined component value by a given index.",15,[[["index"]]]],[11,"is_unconstrained","","If this `Join` typically returns all indices in the mask,…",15,[[],["bool"]]],[11,"new","","Create a new join iterator.",16,[[["j"]],["self"]]],[11,"get","","Allows getting joined values for specific entity.",16,[[["entity"],["self"],["entities"]],["option"]]],[11,"get_unchecked","","Allows getting joined values for specific raw index.",16,[[["self"],["index"]],["option"]]],[0,"prelude","specs","Prelude module",null,null],[3,"BitSet","specs::prelude","A `BitSet` is a simple set designed to track which indices…",null,null],[8,"Accessor","","A trait for accessing read/write multiple resources from a…",null,null],[10,"try_new","","Tries to create a new instance of this type. This one…",0,[[],["option"]]],[10,"reads","","A list of [`ResourceId`]s the bundle needs read access to…",0,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[10,"writes","","A list of [`ResourceId`]s the bundle needs write access to…",0,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[3,"Dispatcher","","The dispatcher struct, allowing systems to be executed in…",null,null],[3,"DispatcherBuilder","","Builder for the [`Dispatcher`].",null,null],[3,"Read","","Allows to fetch a resource in a system immutably.",null,null],[6,"ReadExpect","","Allows to fetch a resource in a system immutably. This…",null,null],[8,"Resource","","A resource is a data slot which lives in the `World` can…",null,null],[3,"ResourceId","","The id of a [`Resource`], which simply wraps a type id and…",null,null],[8,"RunNow","","Trait for fetching data and running systems. Automatically…",null,null],[10,"run_now","","Runs the system now.",4,[[["world"],["self"]]]],[10,"setup","","Sets up `World` for a later call to `run_now`.",4,[[["self"],["world"]]]],[11,"dispose","","Performs clean up that requires resources from the…",4,[[["box"],["world"]]]],[3,"StaticAccessor","","The static accessor that is used for `SystemData`.",null,null],[8,"System","","A `System`, executed with a set of required [`Resource`]s.",null,null],[16,"SystemData","","The resource bundle required to execute this system.",6,null],[10,"run","","Executes the system with the required system data.",6,[[["self"]]]],[11,"running_time","","Returns a hint how long the system needs for running. This…",6,[[["self"]],["runningtime"]]],[11,"accessor","","Return the accessor from the [`SystemData`].",6,[[["self"]],["accessorcow"]]],[11,"setup","","Sets up the `World` using `Self::SystemData::setup`.",6,[[["self"],["world"]]]],[11,"dispose","","Performs clean up that requires resources from the…",6,[[["world"]]]],[8,"SystemData","","A static system data that can specify its dependencies at…",null,null],[10,"setup","","Sets up the system data for fetching it from the `World`.",7,[[["world"]]]],[10,"fetch","","Fetches the system data from `World`. Note that this is…",7,[[["world"]],["self"]]],[10,"reads","","Returns all read dependencies as fetched from `Self::fetch`.",7,[[],[["vec",["resourceid"]],["resourceid"]]]],[10,"writes","","Returns all write dependencies as fetched from…",7,[[],[["vec",["resourceid"]],["resourceid"]]]],[24,"SystemData","","Used to `#[derive]` the trait `SystemData`.",null,null],[3,"World","","A [Resource] container, which provides methods to insert,…",null,null],[3,"Write","","Allows to fetch a resource in a system mutably.",null,null],[6,"WriteExpect","","Allows to fetch a resource in a system mutably. This will…",null,null],[3,"ReaderId","","A reader ID which represents a subscription to the events…",null,null],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",17,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",17,[[["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",17,[[["op"],["t"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",17,[[["op"],["init"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",17,[[["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",17,[[["op"],["t"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",17,[[["op"],["init"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",17,[[],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",17,[[["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",17,[[["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",17,[[["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",17,[[],["cloned"]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",17,[[],["copied"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",17,[[["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",17,[[["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",17,[[["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",17,[[["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",17,[[["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",17,[[],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",17,[[["op"],["id"]]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",17,[[["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",17,[[["op"],["id"]]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",17,[[["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",17,[[["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",17,[[["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",17,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",17,[[["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",17,[[],["s"]]],[11,"product","","Multiplies all the items in the iterator.",17,[[],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",17,[[],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",17,[[["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",17,[[["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",17,[[],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",17,[[["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",17,[[["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",17,[[["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",17,[[["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",17,[[["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",17,[[["p"]],["option"]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",17,[[["p"]],["option"]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",17,[[["p"]],["option"]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",17,[[["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",17,[[["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",17,[[["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",17,[[],["whilesome"]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",17,[[],["panicfuse"]]],[11,"collect","","Create a fresh collection containing all the element…",17,[[],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",17,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",17,[[["p"]]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",17,[[["p"]]]],[11,"intersperse","","Intersperses clones of an element between items of this…",17,[[],["intersperse"]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",17,[[["c"]]]],[11,"opt_len","","Internal method used to define the behavior of this…",17,[[["self"]],[["option",["usize"]],["usize"]]]],[3,"AsyncDispatcher","","Like, `Dispatcher` but works asynchronously.",null,null],[3,"DenseVecStorage","","Dense vector storage. Has a redirection 2-way table…",null,null],[3,"FlaggedStorage","","Wrapper storage that tracks modifications, insertions, and…",null,null],[3,"HashMapStorage","","`HashMap`-based storage. Best suited for rare components.",null,null],[3,"NullStorage","","A null storage type, used for cases where the component…",null,null],[3,"VecStorage","","Vector storage. Uses a simple `Vec`. Supposed to have…",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[3,"LazyUpdate","","Lazy updates can be used for world updates that need to…",null,null],[4,"ComponentEvent","","Component storage events received from a `FlaggedStorage`…",null,null],[13,"Inserted","","An insertion event, note that a modification event will be…",18,null],[13,"Modified","","A modification event, this will be sent any time a…",18,null],[13,"Removed","","A removal event.",18,null],[6,"ReadStorage","","A storage with read access.",null,null],[6,"WriteStorage","","A storage with read and write access.",null,null],[6,"Entities","","A wrapper for a read `Entities` resource. Note that this…",null,null],[8,"ParJoin","","The purpose of the `ParJoin` trait is to provide a way to…",null,null],[11,"par_join","specs::join","Create a joined parallel iterator over the contents.",13,[[],["joinpariter"]]],[8,"Tracked","specs::prelude","`UnprotectedStorage`s that track modifications,…",null,null],[10,"channel","","Event channel tracking modified/inserted/removed components.",19,[[["self"]],["eventchannel"]]],[10,"channel_mut","","Mutable event channel tracking modified/inserted/removed…",19,[[["self"]],["eventchannel"]]],[8,"Component","","Abstract component type. Doesn't have to be Copy or even…",null,null],[16,"Storage","","Associated storage type for this component.",20,null],[8,"WorldExt","","This trait provides some extension methods to make working…",null,null],[10,"new","","Constructs a new World instance.",21,[[],["self"]]],[10,"register","","Registers a new component, adding the component storage.",21,[[["self"]]]],[10,"register_with_storage","","Registers a new component with a given storage.",21,[[["self"],["f"]]]],[10,"add_resource","","Adds a resource to the world.",21,[[["self"],["resource"]]]],[10,"read_component","","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[10,"write_component","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[11,"read_storage","","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[11,"write_storage","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[10,"read_resource","","Fetches a resource for reading.",21,[[["self"]],[["fetch"],["resource"]]]],[10,"write_resource","","Fetches a resource for writing.",21,[[["self"]],[["fetchmut"],["resource"]]]],[10,"entities","","Convenience method for fetching entities.",21,[[["self"]],[["entitiesres"],["read",["entitiesres"]]]]],[10,"entities_mut","","Convenience method for fetching entities.",21,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[10,"create_entity","","Allows building an entity with its components.",21,[[["self"]],["entitybuilder"]]],[10,"create_entity_unchecked","","Allows building an entity with its components.",21,[[["self"]],["entitybuilder"]]],[10,"create_iter","","Returns an iterator for entity creation. This makes it…",21,[[["self"]],["createiter"]]],[10,"delete_entity","","Deletes an entity and its components.",21,[[["entity"],["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_entities","","Deletes the specified entities and their components.",21,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_all","","Deletes all entities and their components.",21,[[["self"]]]],[10,"is_alive","","Checks if an entity is alive. Please note that atomically…",21,[[["entity"],["self"]],["bool"]]],[10,"maintain","","Merges in the appendix, recording all the dynamically…",21,[[["self"]]]],[0,"storage","specs","Component storage types, implementations for component…",null,null],[3,"Entries","specs::storage","`Join`-able structure that yields all indices, returning…",null,null],[3,"OccupiedEntry","","An entry to a storage which has a component associated to…",null,null],[3,"VacantEntry","","An entry to a storage which does not have a component…",null,null],[3,"FlaggedStorage","","Wrapper storage that tracks modifications, insertions, and…",null,null],[3,"RestrictedStorage","","Similar to a `MaskedStorage` and a `Storage` combined, but…",null,null],[3,"BTreeStorage","","BTreeMap-based storage.",null,null],[3,"DenseVecStorage","","Dense vector storage. Has a redirection 2-way table…",null,null],[3,"HashMapStorage","","`HashMap`-based storage. Best suited for rare components.",null,null],[3,"NullStorage","","A null storage type, used for cases where the component…",null,null],[3,"VecStorage","","Vector storage. Uses a simple `Vec`. Supposed to have…",null,null],[3,"AntiStorage","","An inverted storage type, only useful to iterate entities…",null,null],[12,"0","","",22,null],[3,"MaskedStorage","","The `UnprotectedStorage` together with the `BitSet` that…",null,null],[3,"Storage","","A wrapper around the masked storage and the generations…",null,null],[4,"StorageEntry","","Entry to a storage for convenient filling of components or…",null,null],[13,"Occupied","","Entry variant that is returned if the entity has a…",23,null],[13,"Vacant","","Entry variant that is returned if the entity does not have…",23,null],[4,"ImmutableParallelRestriction","","Specifies that the `RestrictedStorage` can run in parallel…",null,null],[4,"MutableParallelRestriction","","Specifies that the `RestrictedStorage` can run in parallel…",null,null],[4,"SequentialRestriction","","Specifies that the `RestrictedStorage` cannot run in…",null,null],[4,"ComponentEvent","","Component storage events received from a `FlaggedStorage`…",null,null],[13,"Inserted","","An insertion event, note that a modification event will be…",18,null],[13,"Modified","","A modification event, this will be sent any time a…",18,null],[13,"Removed","","A removal event.",18,null],[11,"entry","","Returns an entry to the component associated to the entity.",24,[[["entity"],["self"]],[["result",["storageentry","wronggeneration"]],["storageentry"],["wronggeneration"]]]],[11,"entries","","Returns a `Join`-able structure that yields all indices,…",24,[[["self"]],["entries"]]],[11,"get","","Get a reference to the component associated with the entity.",25,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the component associated with…",25,[[["self"]],["t"]]],[11,"into_mut","","Converts the `OccupiedEntry` into a mutable reference…",25,[[],["t"]]],[11,"insert","","Inserts a value into the storage and returns the old one.",25,[[["self"],["t"]],["t"]]],[11,"remove","","Removes the component from the storage and returns it.",25,[[],["t"]]],[11,"insert","","Inserts a value into the storage.",26,[[["t"]],["t"]]],[11,"or_insert","","Inserts a component if the entity does not have it already.",23,[[["t"]],["t"]]],[11,"or_insert_with","","Inserts a component using a lazily called function that is…",23,[[["f"]],["t"]]],[11,"restrict","","Builds an immutable `RestrictedStorage` out of a…",24,[[["self"]],[["bitset"],["restrictedstorage",["bitset","immutableparallelrestriction"]],["immutableparallelrestriction"]]]],[11,"restrict_mut","","Builds a mutable `RestrictedStorage` out of a `Storage`.…",24,[[["self"]],[["bitset"],["sequentialrestriction"],["restrictedstorage",["bitset","sequentialrestriction"]]]]],[11,"par_restrict_mut","","Builds a mutable, parallel `RestrictedStorage`, does not…",24,[[["self"]],[["bitset"],["mutableparallelrestriction"],["restrictedstorage",["bitset","mutableparallelrestriction"]]]]],[11,"channel","","Returns the event channel tracking modified components.",24,[[["self"]],["eventchannel"]]],[11,"channel_mut","","Returns the event channel for…",24,[[["self"]],["eventchannel"]]],[11,"register_reader","","Starts tracking component events. Note that this reader id…",24,[[["self"]],[["readerid",["componentevent"]],["componentevent"]]]],[11,"flag","","Flags an index with a `ComponentEvent`.",24,[[["self"],["componentevent"]]]],[6,"ReadStorage","","A storage with read access.",null,null],[6,"WriteStorage","","A storage with read and write access.",null,null],[6,"InsertResult","","The status of an `insert()`ion into a storage. If the…",null,null],[8,"GenericReadStorage","","Provides generic read access to both `ReadStorage` and…",null,null],[16,"Component","","The component type of the storage",27,null],[10,"get","","Get immutable access to an `Entity`s component",27,[[["entity"],["self"]],["option"]]],[10,"_private","","Private function to seal the trait",27,[[],["seal"]]],[8,"GenericWriteStorage","","Provides generic write access to `WriteStorage`, both as a…",null,null],[16,"Component","","The component type of the storage",28,null],[10,"get_mut","","Get mutable access to an `Entity`s component",28,[[["entity"],["self"]],["option"]]],[10,"get_mut_or_default","","Get mutable access to an `Entity`s component. If the…",28,[[["entity"],["self"]],["option"]]],[10,"insert","","Insert a component for an `Entity`",28,[[["entity"],["self"]],["insertresult"]]],[10,"remove","","Remove the component for an `Entity`",28,[[["entity"],["self"]]]],[10,"_private","","Private function to seal the trait",28,[[],["seal"]]],[8,"Tracked","","`UnprotectedStorage`s that track modifications,…",null,null],[10,"channel","","Event channel tracking modified/inserted/removed components.",19,[[["self"]],["eventchannel"]]],[10,"channel_mut","","Mutable event channel tracking modified/inserted/removed…",19,[[["self"]],["eventchannel"]]],[8,"AnyStorage","","A dynamic storage.",null,null],[10,"drop","","Drop components of given entities.",29,[[["self"]]]],[8,"DistinctStorage","","This is a marker trait which requires you to uphold the…",null,null],[8,"TryDefault","","Tries to create a default value, returns an `Err` with the…",null,null],[10,"try_default","","Tries to create the default.",30,[[],[["result",["string"]],["string"]]]],[11,"unwrap_default","","Calls `try_default` and panics on an error case.",30,[[],["self"]]],[8,"UnprotectedStorage","","Used by the framework to quickly join components.",null,null],[10,"clean","","Clean the storage given a bitset with bits set for valid…",31,[[["self"],["b"]]]],[10,"get","","Tries reading the data associated with an `Index`. This is…",31,[[["self"],["index"]],["t"]]],[10,"get_mut","","Tries mutating the data associated with an `Index`. This…",31,[[["self"],["index"]],["t"]]],[10,"insert","","Inserts new data for a given `Index`.",31,[[["self"],["t"],["index"]]]],[10,"remove","","Removes the data associated with an `Index`.",31,[[["self"],["index"]],["t"]]],[11,"drop","","Drops the data associated with an `Index`. This is simply…",31,[[["self"],["index"]]]],[11,"new","","Creates a new `MaskedStorage`. This is called when you…",32,[[],["maskedstorage"]]],[11,"clear","","Clear the contents of this storage.",32,[[["self"]]]],[11,"remove","","Remove an element by a given index.",32,[[["self"],["index"]],["option"]]],[11,"drop","","Drop an element by a given index.",32,[[["self"],["index"]]]],[11,"new","","Creates a new `Storage` from a fetched allocator and a…",24,[[["fetch",["entitiesres"]],["d"],["entitiesres"]],["storage"]]],[11,"unprotected_storage","","Gets the wrapped storage.",24,[[["self"]]]],[11,"fetched_entities","","Returns the `EntitiesRes` resource fetched by this…",24,[[["self"]],["entitiesres"]]],[11,"get","","Tries to read the data associated with an `Entity`.",24,[[["entity"],["self"]],[["option"],["t"]]]],[11,"count","","Computes the number of elements this `Storage` contains by…",24,[[["self"]],["usize"]]],[11,"is_empty","","Checks whether this `Storage` is empty. This operation is…",24,[[["self"]],["bool"]]],[11,"contains","","Returns true if the storage has a component for this…",24,[[["entity"],["self"]],["bool"]]],[11,"mask","","Returns a reference to the bitset of this storage which…",24,[[["self"]],["bitset"]]],[11,"unprotected_storage_mut","","Gets mutable access to the wrapped storage.",24,[[["self"]]]],[11,"get_mut","","Tries to mutate the data associated with an `Entity`.",24,[[["entity"],["self"]],[["t"],["option"]]]],[11,"insert","","Inserts new data for a given `Entity`. Returns the result…",24,[[["entity"],["self"],["t"]],["insertresult"]]],[11,"remove","","Removes the data associated with an `Entity`.",24,[[["entity"],["self"]],["option"]]],[11,"clear","","Clears the contents of the storage.",24,[[["self"]]]],[11,"drain","","Creates a draining storage wrapper which can be `.join`ed…",24,[[["self"]],["drain"]]],[0,"world","specs","Entities, resources, components, and general world…",null,null],[3,"World","specs::world","A [Resource] container, which provides methods to insert,…",null,null],[3,"CreateIterAtomic","","An iterator for entity creation. Please note that you have…",null,null],[3,"EntitiesRes","","The entities of this ECS. This is a resource, stored in…",null,null],[3,"Entity","","`Entity` type, as seen by the user.",null,null],[3,"EntityResBuilder","","An entity builder from `EntitiesRes`. Allows building an…",null,null],[12,"entity","","The entity being built",33,null],[12,"entities","","The active borrow to `EntitiesRes`, used to delete the…",33,null],[3,"Generation","","Index generation. When a new entity is placed at an old…",null,null],[3,"LazyBuilder","","Like `EntityBuilder`, but inserts the component lazily,…",null,null],[12,"entity","","The entity that we're inserting components for.",34,null],[12,"lazy","","The lazy update reference.",34,null],[3,"LazyUpdate","","Lazy updates can be used for world updates that need to…",null,null],[3,"CreateIter","","An iterator for entity creation. Please note that you have…",null,null],[3,"EntityBuilder","","The entity builder, allowing to build an entity together…",null,null],[12,"entity","","The (already created) entity for which components will be…",35,null],[12,"world","","A reference to the `World` for component insertions.",35,null],[11,"id","specs","Returns the index of the `Entity`.",36,[[],["index"]]],[11,"gen","","Returns the `Generation` of the `Entity`.",36,[[],["generation"]]],[11,"create","specs::world","Creates a new entity atomically. This will be persistent…",37,[[["self"]],["entity"]]],[11,"create_iter","","Returns an iterator which creates new entities atomically.…",37,[[["self"]],["createiteratomic"]]],[11,"build_entity","","Similar to the `create` method above this creates an…",37,[[["self"]],["entityresbuilder"]]],[11,"delete","","Deletes an entity atomically. The associated components…",37,[[["entity"],["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"entity","","Returns an entity with a given `id`. There's no guarantee…",37,[[["self"],["index"]],["entity"]]],[11,"is_alive","","Returns `true` if the specified entity is alive.",37,[[["entity"],["self"]],["bool"]]],[11,"with","","Appends a component and associates it with the entity.",33,[[["component"],["writestorage"]],["self"]]],[11,"build","","Finishes the building and returns the entity.",33,[[],["entity"]]],[11,"id","","Returns the id of the generation.",38,[[],["i32"]]],[11,"is_alive","","Returns `true` if entities of this `Generation` are alive.",38,[[],["bool"]]],[11,"create_entity","specs","Creates a new `LazyBuilder` which inserts components using…",39,[[["entitiesres"],["self"]],["lazybuilder"]]],[11,"insert","","Lazily inserts a component for an entity.",39,[[["entity"],["c"],["self"]]]],[11,"insert_all","","Lazily inserts components for entities.",39,[[["i"],["self"]]]],[11,"remove","","Lazily removes a component.",39,[[["entity"],["self"]]]],[11,"exec","","Lazily executes a closure with world access.",39,[[["self"],["f"]]]],[11,"exec_mut","","Lazily executes a closure with mutable world access.",39,[[["self"],["f"]]]],[11,"read_storage","specs::prelude","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[11,"write_storage","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[6,"Entities","specs::world","A wrapper for a read `Entities` resource. Note that this…",null,null],[6,"Index","","An index is basically the id of an `Entity`.",null,null],[8,"Component","","Abstract component type. Doesn't have to be Copy or even…",null,null],[16,"Storage","","Associated storage type for this component.",20,null],[8,"WorldExt","","This trait provides some extension methods to make working…",null,null],[10,"new","","Constructs a new World instance.",21,[[],["self"]]],[10,"register","","Registers a new component, adding the component storage.",21,[[["self"]]]],[10,"register_with_storage","","Registers a new component with a given storage.",21,[[["self"],["f"]]]],[10,"add_resource","","Adds a resource to the world.",21,[[["self"],["resource"]]]],[10,"read_component","","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[10,"write_component","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[11,"read_storage","specs::prelude","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[11,"write_storage","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[10,"read_resource","specs::world","Fetches a resource for reading.",21,[[["self"]],[["fetch"],["resource"]]]],[10,"write_resource","","Fetches a resource for writing.",21,[[["self"]],[["fetchmut"],["resource"]]]],[10,"entities","","Convenience method for fetching entities.",21,[[["self"]],[["entitiesres"],["read",["entitiesres"]]]]],[10,"entities_mut","","Convenience method for fetching entities.",21,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[10,"create_entity","","Allows building an entity with its components.",21,[[["self"]],["entitybuilder"]]],[10,"create_entity_unchecked","","Allows building an entity with its components.",21,[[["self"]],["entitybuilder"]]],[10,"create_iter","","Returns an iterator for entity creation. This makes it…",21,[[["self"]],["createiter"]]],[10,"delete_entity","","Deletes an entity and its components.",21,[[["entity"],["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_entities","","Deletes the specified entities and their components.",21,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_all","","Deletes all entities and their components.",21,[[["self"]]]],[10,"is_alive","","Checks if an entity is alive. Please note that atomically…",21,[[["entity"],["self"]],["bool"]]],[10,"maintain","","Merges in the appendix, recording all the dynamically…",21,[[["self"]]]],[8,"Builder","","A common trait for `EntityBuilder` and `LazyBuilder`,…",null,null],[10,"with","","Appends a component and associates it with the entity.",40,[[["send"],["component"],["sync"]],["self"]]],[10,"build","","Finishes the building and returns the entity.",40,[[],["entity"]]],[6,"ReadStorage","specs","A storage with read access.",null,null],[6,"WriteStorage","","A storage with read and write access.",null,null],[6,"Entities","","A wrapper for a read `Entities` resource. Note that this…",null,null],[8,"ParJoin","","The purpose of the `ParJoin` trait is to provide a way to…",null,null],[11,"par_join","specs::join","Create a joined parallel iterator over the contents.",13,[[],["joinpariter"]]],[8,"Tracked","specs","`UnprotectedStorage`s that track modifications,…",null,null],[10,"channel","","Event channel tracking modified/inserted/removed components.",19,[[["self"]],["eventchannel"]]],[10,"channel_mut","","Mutable event channel tracking modified/inserted/removed…",19,[[["self"]],["eventchannel"]]],[8,"Component","","Abstract component type. Doesn't have to be Copy or even…",null,null],[16,"Storage","","Associated storage type for this component.",20,null],[8,"WorldExt","","This trait provides some extension methods to make working…",null,null],[10,"new","","Constructs a new World instance.",21,[[],["self"]]],[10,"register","","Registers a new component, adding the component storage.",21,[[["self"]]]],[10,"register_with_storage","","Registers a new component with a given storage.",21,[[["self"],["f"]]]],[10,"add_resource","","Adds a resource to the world.",21,[[["self"],["resource"]]]],[10,"read_component","","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[10,"write_component","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[11,"read_storage","specs::prelude","Fetches a component storage for reading.",21,[[["self"]],[["readstorage"],["component"]]]],[11,"write_storage","","Fetches a component storage for writing.",21,[[["self"]],[["component"],["writestorage"]]]],[10,"read_resource","specs","Fetches a resource for reading.",21,[[["self"]],[["fetch"],["resource"]]]],[10,"write_resource","","Fetches a resource for writing.",21,[[["self"]],[["fetchmut"],["resource"]]]],[10,"entities","","Convenience method for fetching entities.",21,[[["self"]],[["entitiesres"],["read",["entitiesres"]]]]],[10,"entities_mut","","Convenience method for fetching entities.",21,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[10,"create_entity","","Allows building an entity with its components.",21,[[["self"]],["entitybuilder"]]],[10,"create_entity_unchecked","","Allows building an entity with its components.",21,[[["self"]],["entitybuilder"]]],[10,"create_iter","","Returns an iterator for entity creation. This makes it…",21,[[["self"]],["createiter"]]],[10,"delete_entity","","Deletes an entity and its components.",21,[[["entity"],["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_entities","","Deletes the specified entities and their components.",21,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[10,"delete_all","","Deletes all entities and their components.",21,[[["self"]]]],[10,"is_alive","","Checks if an entity is alive. Please note that atomically…",21,[[["entity"],["self"]],["bool"]]],[10,"maintain","","Merges in the appendix, recording all the dynamically…",21,[[["self"]]]],[11,"try_default","specs::prelude","",41,[[],[["result",["string"]],["string"]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","specs","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"setup","","",3,[[["staticaccessor"],["world"]]]],[11,"fetch","","",3,[[["staticaccessor"],["world"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"run_now","","",43,[[["world"],["self"]]]],[11,"setup","","",43,[[["self"],["world"]]]],[11,"dispose","","",43,[[["box"],["world"]]]],[11,"setup","","",43,[[["self"],["world"]]]],[11,"run","","",43,[[["world"],["self"],["threadpool"]]]],[11,"reads","","",43,[[["self"],["vec"]]]],[11,"writes","","",43,[[["self"],["vec"]]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","specs::prelude","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"run_now","","",44,[[["world"],["self"]]]],[11,"setup","","",44,[[["self"],["world"]]]],[11,"dispose","","",44,[[["box"],["world"]]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_default","","",45,[[],[["result",["string"]],["string"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"setup","","",46,[[["staticaccessor"],["world"]]]],[11,"fetch","","",46,[[["staticaccessor"],["world"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","specs","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_default","specs::prelude","",47,[[],[["result",["string"]],["string"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"try_default","specs::world","",48,[[],[["result",["string"]],["string"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","specs::prelude","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"setup","","",49,[[["staticaccessor"],["world"]]]],[11,"fetch","","",49,[[["staticaccessor"],["world"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_default","specs","",52,[[],[["result",["string"]],["string"]]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_default","","",53,[[],[["result",["string"]],["string"]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_default","","",54,[[],[["result",["string"]],["string"]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"try_default","","",55,[[],[["result",["string"]],["string"]]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_default","","",56,[[],[["result",["string"]],["string"]]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_default","","",39,[[],[["result",["string"]],["string"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_default","specs::changeset","",8,[[],[["result",["string"]],["string"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","specs::error","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","specs::join","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[],["t"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"par_bridge","","",16,[[],["iterbridge"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","specs::prelude","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","specs::storage","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_default","","",62,[[],[["result",["string"]],["string"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_default","","",32,[[],[["result",["string"]],["string"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"setup","","",24,[[["staticaccessor"],["world"]]]],[11,"fetch","","",24,[[["staticaccessor"],["world"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","specs::world","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"into_iter","","",66,[[],["i"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"par_bridge","","",66,[[],["iterbridge"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_default","","",37,[[],[["result",["string"]],["string"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"into_iter","","",67,[[],["i"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"par_bridge","","",67,[[],["iterbridge"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"layer3","specs::prelude","",41,[[["self"]],["usize"]]],[11,"layer2","","",41,[[["self"],["usize"]],["usize"]]],[11,"layer1","","",41,[[["self"],["usize"]],["usize"]]],[11,"layer0","","",41,[[["self"],["usize"]],["usize"]]],[11,"contains","","",41,[[["u32"],["self"]],["bool"]]],[11,"bitxor_assign","","",41,[[["self"],["b"]]]],[11,"into_iter","","",41,[[]]],[11,"from_iter","","",41,[[["t"]],["bitset"]]],[11,"from_iter","","",41,[[["t"]],["bitset"]]],[11,"remove","","",41,[[["self"],["u32"]],["bool"]]],[11,"bitand","","",41,[[["t"]]]],[11,"bitor","","",41,[[["t"]]]],[11,"clone","","",41,[[["self"]],["bitset"]]],[11,"not","","",41,[[]]],[11,"eq","","",41,[[["self"],["bitset"]],["bool"]]],[11,"fmt","","",41,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"default","","",41,[[],["bitset"]]],[11,"bitand_assign","","",41,[[["self"],["b"]]]],[11,"extend","","",41,[[["self"],["t"]]]],[11,"extend","","",41,[[["self"],["t"]]]],[11,"bitor_assign","","",41,[[["self"],["b"]]]],[11,"bitxor","","",41,[[["t"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"create","specs","",43,[[["dispatcher"],["batchaccessor"]],["defaultbatchcontrollersystem"]]],[11,"run_now","specs::prelude","",44,[[["self"],["world"]]]],[11,"setup","","",44,[[["self"],["world"]]]],[11,"dispose","","",44,[[["box",["dispatcher"]],["world"],["dispatcher"]]]],[11,"clone","","",59,[[["self"]],["resourceid"]]],[11,"clone","specs","",5,[[["self"]],["runningtime"]]],[11,"eq","specs::prelude","",59,[[["self"],["resourceid"]],["bool"]]],[11,"ne","","",59,[[["self"],["resourceid"]],["bool"]]],[11,"fmt","","",45,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","specs","",5,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",42,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","specs::prelude","",59,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"cmp","","",59,[[["self"],["resourceid"]],["ordering"]]],[11,"deref_mut","","",49,[[["self"]],["t"]]],[11,"deref","","",49,[[["self"]],["t"]]],[11,"deref","","",46,[[["self"]],["t"]]],[11,"deref","specs","",1,[[["self"]]]],[11,"setup","","",3,[[["world"]]]],[11,"fetch","","",3,[[["world"]],["batchuncheckedworld"]]],[11,"try_new","specs::prelude","",47,[[],[["option",["staticaccessor"]],["staticaccessor"]]]],[11,"reads","","",47,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",47,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[11,"try_new","specs","",42,[[],[["option",["batchaccessor"]],["batchaccessor"]]]],[11,"reads","","",42,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",42,[[["self"]],[["vec",["resourceid"]],["resourceid"]]]],[11,"setup","specs::prelude","",49,[[["world"]]]],[11,"fetch","","",49,[[["world"]],["write"]]],[11,"reads","","",49,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",49,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"setup","","",46,[[["world"]]]],[11,"fetch","","",46,[[["world"]],["read"]]],[11,"reads","","",46,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",46,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"run","specs","",43,[[["self"]]]],[11,"running_time","","",43,[[["self"]],["runningtime"]]],[11,"accessor","","",43,[[["self"]],[["accessorcow",["defaultbatchcontrollersystem"]],["defaultbatchcontrollersystem"]]]],[11,"setup","","",43,[[["self"],["world"]]]],[11,"partial_cmp","specs::prelude","",59,[[["self"],["resourceid"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",59,[[["self"],["resourceid"]],["bool"]]],[11,"le","","",59,[[["self"],["resourceid"]],["bool"]]],[11,"gt","","",59,[[["self"],["resourceid"]],["bool"]]],[11,"ge","","",59,[[["self"],["resourceid"]],["bool"]]],[11,"default","","",45,[[],["dispatcherbuilder"]]],[11,"default","specs::world","",48,[[],["world"]]],[11,"default","specs::prelude","",47,[[],["staticaccessor"]]],[11,"from","","",49,[[["fetchmut"]],["write"]]],[11,"from","","",46,[[["fetch"]],["read"]]],[11,"drop","","",50,[[["self"]]]],[11,"fmt","","",50,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"open","","",41,[[]]],[11,"get","","",41,[[["index"]]]],[11,"open","specs::changeset","",8,[[]]],[11,"get","","",8,[[["index"]]]],[11,"open","specs::join","",12,[[]]],[11,"get","","",12,[[["index"]]]],[11,"is_unconstrained","","",12,[[],["bool"]]],[11,"open","specs::storage","",60,[[]]],[11,"get","","",60,[[["index"]]]],[11,"is_unconstrained","","",60,[[],["bool"]]],[11,"open","","",22,[[]]],[11,"get","","",22,[[["index"]]]],[11,"get","specs","",68,[[["entity"],["self"]],["option"]]],[11,"_private","","",68,[[],["seal"]]],[11,"get","","",69,[[["entity"],["self"]],["option"]]],[11,"_private","","",69,[[],["seal"]]],[11,"get_mut","","",69,[[["entity"],["self"]],["option"]]],[11,"get_mut_or_default","","",69,[[["entity"],["self"]],["option"]]],[11,"insert","","",69,[[["entity"],["self"]],["insertresult"]]],[11,"remove","","",69,[[["entity"],["self"]]]],[11,"_private","","",69,[[],["seal"]]],[11,"channel","","",53,[[["self"]],["eventchannel"]]],[11,"channel_mut","","",53,[[["self"]],["eventchannel"]]],[11,"drop","specs::storage","",32,[[["self"]]]],[11,"clean","specs","",53,[[["self"],["b"]]]],[11,"get","","",53,[[["self"],["index"]],["c"]]],[11,"get_mut","","",53,[[["self"],["index"]],["c"]]],[11,"insert","","",53,[[["c"],["self"],["index"]]]],[11,"remove","","",53,[[["self"],["index"]],["c"]]],[11,"clean","specs::storage","",62,[[["self"],["b"]]]],[11,"get","","",62,[[["self"],["index"]],["t"]]],[11,"get_mut","","",62,[[["self"],["index"]],["t"]]],[11,"insert","","",62,[[["self"],["t"],["index"]]]],[11,"remove","","",62,[[["self"],["index"]],["t"]]],[11,"clean","specs","",54,[[["self"],["b"]]]],[11,"get","","",54,[[["self"],["index"]],["t"]]],[11,"get_mut","","",54,[[["self"],["index"]],["t"]]],[11,"insert","","",54,[[["self"],["t"],["index"]]]],[11,"remove","","",54,[[["self"],["index"]],["t"]]],[11,"clean","","",52,[[["self"],["b"]]]],[11,"get","","",52,[[["self"],["index"]],["t"]]],[11,"get_mut","","",52,[[["self"],["index"]],["t"]]],[11,"insert","","",52,[[["self"],["t"],["index"]]]],[11,"remove","","",52,[[["self"],["index"]],["t"]]],[11,"clean","","",55,[[["self"],["b"]]]],[11,"get","","",55,[[["self"],["index"]],["t"]]],[11,"get_mut","","",55,[[["self"],["index"]],["t"]]],[11,"insert","","",55,[[["self"],["t"],["index"]]]],[11,"remove","","",55,[[["self"],["index"]],["t"]]],[11,"clean","","",56,[[["self"],["b"]]]],[11,"get","","",56,[[["self"],["index"]],["t"]]],[11,"get_mut","","",56,[[["self"],["index"]],["t"]]],[11,"insert","","",56,[[["self"],["t"],["index"]]]],[11,"remove","","",56,[[["self"],["index"]],["t"]]],[11,"new","specs::world","",48,[[],["self"]]],[11,"register","","",48,[[["self"]]]],[11,"register_with_storage","","",48,[[["self"],["f"]]]],[11,"add_resource","","",48,[[["self"],["resource"]]]],[11,"read_component","","",48,[[["self"]],[["readstorage"],["component"]]]],[11,"write_component","","",48,[[["self"]],[["component"],["writestorage"]]]],[11,"read_resource","","",48,[[["self"]],[["fetch"],["resource"]]]],[11,"write_resource","","",48,[[["self"]],[["fetchmut"],["resource"]]]],[11,"entities","","",48,[[["self"]],[["entitiesres"],["read",["entitiesres"]]]]],[11,"entities_mut","","",48,[[["self"]],[["fetchmut",["entitiesres"]],["entitiesres"]]]],[11,"create_entity","","",48,[[["self"]],["entitybuilder"]]],[11,"create_entity_unchecked","","",48,[[["self"]],["entitybuilder"]]],[11,"create_iter","","",48,[[["self"]],["createiter"]]],[11,"delete_entity","","",48,[[["entity"],["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"delete_entities","","",48,[[["self"]],[["result",["wronggeneration"]],["wronggeneration"]]]],[11,"delete_all","","",48,[[["self"]]]],[11,"is_alive","","",48,[[["entity"],["self"]],["bool"]]],[11,"maintain","","",48,[[["self"]]]],[11,"delete_components","","",48,[[["self"]]]],[11,"with","","Inserts a component using [LazyUpdate].",34,[[["c"]],["self"]]],[11,"build","","Finishes the building and returns the built entity. Please…",34,[[],["entity"]]],[11,"with","","Inserts a component for this entity.",35,[[["component"]],["self"]]],[11,"build","","Finishes the building and returns the entity. As opposed…",35,[[],["entity"]]],[11,"drop","specs::storage","",32,[[["self"]]]],[11,"drop","specs::world","",33,[[["self"]]]],[11,"drop","specs","",39,[[["self"]]]],[11,"drop","specs::world","",35,[[["self"]]]],[11,"as_ref","specs::error","",9,[[["self"]],["stderror"]]],[11,"from","","",11,[[["noerror"]],["self"]]],[11,"from","","",11,[[["wronggeneration"]],["self"]]],[11,"extend","specs::changeset","",8,[[["self"],["intoiterator"]]]],[11,"next","specs::join","",16,[[["self"]],["option"]]],[11,"next","specs::world","",66,[[["self"]],[["entity"],["option",["entity"]]]]],[11,"next","","",67,[[["self"]],[["entity"],["option",["entity"]]]]],[11,"clone","specs::prelude","",18,[[["self"]],["componentevent"]]],[11,"clone","specs","",36,[[["self"]],["entity"]]],[11,"clone","specs::world","",38,[[["self"]],["generation"]]],[11,"default","specs::changeset","",8,[[],["self"]]],[11,"default","specs","",53,[[],["self"]]],[11,"default","specs::storage","",62,[[],["self"]]],[11,"default","specs","",54,[[],["self"]]],[11,"default","","",52,[[],["self"]]],[11,"default","","",55,[[],["self"]]],[11,"default","","",56,[[],["self"]]],[11,"default","specs::storage","",32,[[],["self"]]],[11,"default","specs::world","",37,[[],["entitiesres"]]],[11,"default","specs","",39,[[],["self"]]],[11,"cmp","","",36,[[["self"],["entity"]],["ordering"]]],[11,"cmp","specs::world","",38,[[["self"],["generation"]],["ordering"]]],[11,"eq","specs::error","",10,[[["self"],["wronggeneration"]],["bool"]]],[11,"ne","","",10,[[["self"],["wronggeneration"]],["bool"]]],[11,"eq","","",57,[[["self"],["noerror"]],["bool"]]],[11,"eq","specs::prelude","",18,[[["self"],["componentevent"]],["bool"]]],[11,"ne","","",18,[[["self"],["componentevent"]],["bool"]]],[11,"eq","specs","",36,[[["self"],["entity"]],["bool"]]],[11,"ne","","",36,[[["self"],["entity"]],["bool"]]],[11,"eq","specs::world","",38,[[["self"],["generation"]],["bool"]]],[11,"ne","","",38,[[["self"],["generation"]],["bool"]]],[11,"partial_cmp","specs","",36,[[["self"],["entity"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",36,[[["self"],["entity"]],["bool"]]],[11,"le","","",36,[[["self"],["entity"]],["bool"]]],[11,"gt","","",36,[[["self"],["entity"]],["bool"]]],[11,"ge","","",36,[[["self"],["entity"]],["bool"]]],[11,"partial_cmp","specs::world","",38,[[["self"],["generation"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",38,[[["self"],["generation"]],["bool"]]],[11,"le","","",38,[[["self"],["generation"]],["bool"]]],[11,"gt","","",38,[[["self"],["generation"]],["bool"]]],[11,"ge","","",38,[[["self"],["generation"]],["bool"]]],[11,"fmt","specs::error","",9,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","specs::prelude","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","specs","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","specs::world","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","specs::error","",9,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["fmtresult"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["fmtresult"]]],[11,"hash","specs","",36,[[["self"],["__h"]]]],[11,"hash","specs::world","",38,[[["self"],["__h"]]]],[11,"from_iter","specs::changeset","",8,[[["intoiterator"]],["self"]]],[11,"description","specs::error","",9,[[["self"]],["str"]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"cause","","",11,[[["self"]],[["stderror"],["option",["stderror"]]]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"description","","",57,[[["self"]],["str"]]],[11,"drive_unindexed","specs::join","",58,[[["c"]]]],[11,"setup","specs","",68,[[["world"]]]],[11,"fetch","","",68,[[["world"]],["self"]]],[11,"reads","","",68,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",68,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"setup","","",69,[[["world"]]]],[11,"fetch","","",69,[[["world"]],["self"]]],[11,"reads","","",69,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"writes","","",69,[[],[["vec",["resourceid"]],["resourceid"]]]],[11,"cast","specs::storage","",29,[[["t"]],["self"]]],[11,"cast_mut","","",29,[[["t"]],["self"]]],[11,"new","specs::prelude","Creates an empty `BitSet`.",41,[[],["bitset"]]],[11,"with_capacity","","Creates an empty `BitSet`, preallocated for up to `max`…",41,[[["u32"]],["bitset"]]],[11,"add","","Adds `id` to the `BitSet`. Returns `true` if the value was…",41,[[["self"],["u32"]],["bool"]]],[11,"remove","","Removes `id` from the set, returns `true` if the value was…",41,[[["self"],["u32"]],["bool"]]],[11,"contains","","Returns `true` if `id` is in the set.",41,[[["u32"],["self"]],["bool"]]],[11,"contains_set","","Returns `true` if all ids in `other` are contained in this…",41,[[["self"],["bitset"]],["bool"]]],[11,"clear","","Completely wipes out the bit set.",41,[[["self"]]]],[18,"BITS_PER_USIZE","","How many bits are in a `usize`.",41,null],[11,"layer0_as_slice","","Returns the bottom layer of the bitset as a slice. Each…",41,[[["self"]]]],[18,"LAYER1_GRANULARITY","","How many `Index`es are described by as single layer 1 bit,…",41,null],[11,"layer1_as_slice","","Returns the second layer of the bitset as a slice. Each…",41,[[["self"]]]],[18,"LAYER2_GRANULARITY","","How many `Index`es are described by as single layer 2 bit,…",41,null],[11,"layer2_as_slice","","Returns the third layer of the bitset as a slice. Each bit…",41,[[["self"]]]],[11,"new","specs","Creates a `BatchAccessor`",42,[[["vec",["resourceid"]],["resourceid"]],["batchaccessor"]]],[11,"setup","specs::prelude","Sets up all the systems which means they are gonna add…",44,[[["self"],["world"]]]],[11,"dispose","","Calls the `dispose` method of all systems and allows them…",44,[[["world"]]]],[11,"dispatch","","Dispatch all the systems with given resources and context…",44,[[["self"],["world"]]]],[11,"dispatch_par","","Dispatches the systems (except thread local systems) in…",44,[[["self"],["world"]]]],[11,"dispatch_seq","","Dispatches the systems (except thread local systems)…",44,[[["self"],["world"]]]],[11,"dispatch_thread_local","","Dispatch only thread local systems sequentially.",44,[[["self"],["world"]]]],[11,"max_threads","","This method returns the largest amount of threads this…",44,[[["self"]],["usize"]]],[11,"new","","Creates a new `DispatcherBuilder` by using the `Default`…",45,[[],["dispatcherbuilder"]]],[11,"with","","Adds a new system with a given name and a list of…",45,[[["str"],["t"]],["dispatcherbuilder"]]],[11,"add","","Adds a new system with a given name and a list of…",45,[[["str"],["self"],["t"]]]],[11,"with_batch","","The `Batch` is a `System` which contains a `Dispatcher`.…",45,[[["str"],["dispatcherbuilder"]],["dispatcherbuilder"]]],[11,"add_batch","","The `Batch` is a `System` which contains a `Dispatcher`.…",45,[[["str"],["dispatcherbuilder"],["self"]]]],[11,"with_thread_local","","Adds a new thread local system.",45,[[["t"]],["dispatcherbuilder"]]],[11,"add_thread_local","","Adds a new thread local system.",45,[[["self"],["t"]]]],[11,"with_barrier","","Inserts a barrier which assures that all systems added…",45,[[],["dispatcherbuilder"]]],[11,"add_barrier","","Inserts a barrier which assures that all systems added…",45,[[["self"]]]],[11,"with_pool","","Attach a rayon thread pool to the builder and use that…",45,[[["threadpool"],["arc",["threadpool"]]],["dispatcherbuilder"]]],[11,"add_pool","","Attach a rayon thread pool to the builder and use that…",45,[[["self"],["threadpool"],["arc",["threadpool"]]]]],[11,"print_par_seq","","Prints the equivalent system graph that can be easily used…",45,[[["self"]]]],[11,"build","","Builds the `Dispatcher`.",45,[[],["dispatcher"]]],[11,"build_async","","Builds an async dispatcher.",45,[[["r"]],["asyncdispatcher"]]],[11,"empty","specs::world","Creates a new, empty resource container.",48,[[],["world"]]],[11,"insert","","Inserts a resource into this container. If the resource…",48,[[["self"],["r"]]]],[11,"remove","","Removes a resource of type `R` from the `World` and…",48,[[["self"]],["option"]]],[11,"has_value","","Returns true if the specified resource type `R` exists in…",48,[[["self"]],["bool"]]],[11,"has_value_raw","","Returns true if the specified resource type exists in…",48,[[["self"],["resourceid"]],["bool"]]],[11,"entry","","Returns an entry for the resource with type `R`.",48,[[["self"]],["entry"]]],[11,"system_data","","Gets `SystemData` `T` from the `World`. This can be used…",48,[[["self"]],["t"]]],[11,"setup","","Sets up system data `T` for fetching afterwards.",48,[[["self"]]]],[11,"exec","","Executes `f` once, right now and with the specified system…",48,[[["self"],["f"]],["r"]]],[11,"fetch","","Fetches the resource with the specified type `T` or panics…",48,[[["self"]],["fetch"]]],[11,"try_fetch","","Like `fetch`, but returns an `Option` instead of inserting…",48,[[["self"]],[["option",["fetch"]],["fetch"]]]],[11,"try_fetch_by_id","","Like `try_fetch`, but fetches the resource by its…",48,[[["self"],["resourceid"]],[["option",["fetch"]],["fetch"]]]],[11,"fetch_mut","","Fetches the resource with the specified type `T` mutably.",48,[[["self"]],["fetchmut"]]],[11,"try_fetch_mut","","Like `fetch_mut`, but returns an `Option` instead of…",48,[[["self"]],[["fetchmut"],["option",["fetchmut"]]]]],[11,"try_fetch_mut_by_id","","Like `try_fetch_mut`, but fetches the resource by its…",48,[[["self"],["resourceid"]],[["fetchmut"],["option",["fetchmut"]]]]],[11,"insert_by_id","","Internal function for inserting resources, should only be…",48,[[["self"],["resourceid"],["r"]]]],[11,"remove_by_id","","Internal function for removing resources, should only be…",48,[[["self"],["resourceid"]],["option"]]],[11,"try_fetch_internal","","Internal function for fetching resources, should only be…",48,[[["self"],["resourceid"]],[["option",["trustcell"]],["trustcell"]]]],[11,"get_mut","","Retrieves a resource without fetching, which is cheaper,…",48,[[["self"]],[["t"],["option"]]]],[11,"get_mut_raw","","Retrieves a resource without fetching, which is cheaper,…",48,[[["self"],["resourceid"]],[["option",["resource"]],["resource"]]]],[11,"setup","specs::prelude","Sets up all the systems which means they are gonna add…",51,[[["self"]]]],[11,"dispatch","","Dispatches the systems asynchronously. Does not execute…",51,[[["self"]]]],[11,"wait","","Waits for all the asynchronously dispatched systems to…",51,[[["self"]]]],[11,"wait_without_tl","","Waits for all the asynchronously dispatched systems to…",51,[[["self"]]]],[11,"running","","Checks if any of the asynchronously dispatched systems are…",51,[[["self"]],["bool"]]],[11,"res","","Returns the `World`.",51,[[["self"]],["r"]]],[11,"world","","Returns the `World`.",51,[[["self"]],["r"]]],[11,"mut_res","","Borrows the `World` mutably.",51,[[["self"]],["r"]]],[11,"world_mut","","Borrows the `World` mutably.",51,[[["self"]],["r"]]],[11,"par_join","specs::join","Create a joined parallel iterator over the contents.",13,[[],["joinpariter"]]],[11,"downcast","specs::prelude","Returns the boxed value if it is of type `T`, or…",70,[[["resource"],["box",["resource"]]],[["result",["box","box"]],["box"],["box",["resource"]]]]],[11,"downcast_unchecked","","Returns the boxed value, blindly assuming it to be of type…",70,[[["resource"],["box",["resource"]]],["box"]]],[11,"is","","Returns true if the boxed type is the same as `T`",70,[[["self"]],["bool"]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type…",70,[[["self"]],[["t"],["option"]]]],[11,"downcast_ref_unchecked","","Returns a reference to the boxed value, blindly assuming…",70,[[["self"]],["t"]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is…",70,[[["self"]],[["t"],["option"]]]],[11,"downcast_mut_unchecked","","Returns a mutable reference to the boxed value, blindly…",70,[[["self"]],["t"]]],[11,"new","","Creates a new resource id from a given type.",59,[[],["resourceid"]]],[11,"from_type_id","","Create a new resource id from a raw type ID.",59,[[["typeid"]],["resourceid"]]],[11,"new_with_dynamic_id","","Creates a new resource id from a given type and a…",59,[[["u64"]],["resourceid"]]],[11,"from_type_id_and_dynamic_id","","Create a new resource id from a raw type ID and a \"dynamic…",59,[[["typeid"],["u64"]],["resourceid"]]]],"p":[[8,"Accessor"],[4,"AccessorCow"],[8,"BatchController"],[3,"BatchUncheckedWorld"],[8,"RunNow"],[4,"RunningTime"],[8,"System"],[8,"SystemData"],[3,"ChangeSet"],[3,"BoxedErr"],[3,"WrongGeneration"],[4,"Error"],[3,"MaybeJoin"],[8,"ParJoin"],[8,"BitAnd"],[8,"Join"],[3,"JoinIter"],[8,"ParallelIterator"],[4,"ComponentEvent"],[8,"Tracked"],[8,"Component"],[8,"WorldExt"],[3,"AntiStorage"],[4,"StorageEntry"],[3,"Storage"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"GenericReadStorage"],[8,"GenericWriteStorage"],[8,"AnyStorage"],[8,"TryDefault"],[8,"UnprotectedStorage"],[3,"MaskedStorage"],[3,"EntityResBuilder"],[3,"LazyBuilder"],[3,"EntityBuilder"],[3,"Entity"],[3,"EntitiesRes"],[3,"Generation"],[3,"LazyUpdate"],[8,"Builder"],[3,"BitSet"],[3,"BatchAccessor"],[3,"DefaultBatchControllerSystem"],[3,"Dispatcher"],[3,"DispatcherBuilder"],[3,"Read"],[3,"StaticAccessor"],[3,"World"],[3,"Write"],[3,"ReaderId"],[3,"AsyncDispatcher"],[3,"DenseVecStorage"],[3,"FlaggedStorage"],[3,"HashMapStorage"],[3,"NullStorage"],[3,"VecStorage"],[4,"NoError"],[3,"JoinParIter"],[3,"ResourceId"],[3,"Entries"],[3,"RestrictedStorage"],[3,"BTreeStorage"],[4,"ImmutableParallelRestriction"],[4,"MutableParallelRestriction"],[4,"SequentialRestriction"],[3,"CreateIterAtomic"],[3,"CreateIter"],[6,"ReadStorage"],[6,"WriteStorage"],[8,"Resource"]]};
searchIndex["specs_derive"] = {"doc":"Implements the `#[derive(Component)]`,…","i":[[24,"Component","specs_derive","Custom derive macro for the `Component` trait.",null,null],[24,"ConvertSaveload","","Custom derive macro for the `ConvertSaveload` trait.",null,null]],"p":[]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",61,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \"C\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",168,null],[13,"Byte","","A byte literal: `b'f'`.",168,null],[13,"Char","","A character literal: `'a'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",169,null],[13,"Raw","","A raw string like `r##\"data\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str"]],[["file"],["result",["file"]]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",280,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",281,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",282,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["result",["meta"]],["meta"]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["result"],["parse"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"len","","Returns the number of fields.",152,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[["self"]],["bool"]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",56,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",283,[[["self"]],["turbofish"]]],[11,"new","","",57,[[["lifetime"]],["self"]]],[11,"receiver","","A method's `self` receiver, such as `&self` or `self:…",89,[[["self"]],[["option",["fnarg"]],["fnarg"]]]],[11,"lifetime","","",88,[[["self"]],[["lifetime"],["option",["lifetime"]]]]],[11,"new","","Panics",100,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal"]],["self"]]],[11,"new","","",284,[[["str"],["span"]],["self"]]],[11,"value","","",284,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[["self"]],[["result"],["parse"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["self"],["parser"]],["result"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"set_span","","",284,[[["self"],["span"]]]],[11,"suffix","","",284,[[["self"]],["str"]]],[11,"new","","",285,[[["span"]],["self"]]],[11,"value","","",285,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"set_span","","",285,[[["self"],["span"]]]],[11,"new","","",286,[[["span"],["u8"]],["self"]]],[11,"value","","",286,[[["self"]],["u8"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"set_span","","",286,[[["self"],["span"]]]],[11,"new","","",287,[[["char"],["span"]],["self"]]],[11,"value","","",287,[[["self"]],["char"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"set_span","","",287,[[["self"],["span"]]]],[11,"new","","",288,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",288,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[["self"]],["result"]]],[11,"suffix","","",288,[[["self"]],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"set_span","","",288,[[["self"],["span"]]]],[11,"new","","",289,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",289,[[["self"]],["str"]]],[11,"base10_parse","","",289,[[["self"]],["result"]]],[11,"suffix","","",289,[[["self"]],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"set_span","","",289,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",102,[[["self"]],[["result"],["parse"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",102,[[["self"],["parser"]],["result"]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream"]],[["vec",["stmt"]],["result",["vec"]]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream"]],["result"]]],[11,"without_plus","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[["self"]],[["option",["ident"]],["ident"]]]],[11,"is_empty","","",179,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"last","","Borrows the last element in this sequence.",294,[[["self"]],[["option"],["t"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[["self"]],[["t"],["option"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[["self"]],[["pair"],["option",["pair"]]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",294,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["option"],["t"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi"],["v"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_arm","","",null,[[["arm"],["v"]]]],[5,"visit_attr_style","","",null,[[["attrstyle"],["v"]]]],[5,"visit_attribute","","",null,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg"],["v"]]]],[5,"visit_bin_op","","",null,[[["binop"],["v"]]]],[5,"visit_binding","","",null,[[["v"],["binding"]]]],[5,"visit_block","","",null,[[["block"],["v"]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes"],["v"]]]],[5,"visit_const_param","","",null,[[["constparam"],["v"]]]],[5,"visit_constraint","","",null,[[["v"],["constraint"]]]],[5,"visit_data","","",null,[[["data"],["v"]]]],[5,"visit_data_enum","","",null,[[["dataenum"],["v"]]]],[5,"visit_data_struct","","",null,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",null,[[["dataunion"],["v"]]]],[5,"visit_derive_input","","",null,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",null,[[["v"],["expr"]]]],[5,"visit_expr_array","","",null,[[["v"],["exprarray"]]]],[5,"visit_expr_assign","","",null,[[["v"],["exprassign"]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop"],["v"]]]],[5,"visit_expr_async","","",null,[[["v"],["exprasync"]]]],[5,"visit_expr_await","","",null,[[["exprawait"],["v"]]]],[5,"visit_expr_binary","","",null,[[["v"],["exprbinary"]]]],[5,"visit_expr_block","","",null,[[["v"],["exprblock"]]]],[5,"visit_expr_box","","",null,[[["v"],["exprbox"]]]],[5,"visit_expr_break","","",null,[[["exprbreak"],["v"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["exprcast"],["v"]]]],[5,"visit_expr_closure","","",null,[[["exprclosure"],["v"]]]],[5,"visit_expr_continue","","",null,[[["v"],["exprcontinue"]]]],[5,"visit_expr_field","","",null,[[["v"],["exprfield"]]]],[5,"visit_expr_for_loop","","",null,[[["v"],["exprforloop"]]]],[5,"visit_expr_group","","",null,[[["exprgroup"],["v"]]]],[5,"visit_expr_if","","",null,[[["v"],["exprif"]]]],[5,"visit_expr_index","","",null,[[["v"],["exprindex"]]]],[5,"visit_expr_let","","",null,[[["v"],["exprlet"]]]],[5,"visit_expr_lit","","",null,[[["v"],["exprlit"]]]],[5,"visit_expr_loop","","",null,[[["exprloop"],["v"]]]],[5,"visit_expr_macro","","",null,[[["v"],["exprmacro"]]]],[5,"visit_expr_match","","",null,[[["exprmatch"],["v"]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall"],["v"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["exprpath"],["v"]]]],[5,"visit_expr_range","","",null,[[["exprrange"],["v"]]]],[5,"visit_expr_reference","","",null,[[["v"],["exprreference"]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat"],["v"]]]],[5,"visit_expr_return","","",null,[[["exprreturn"],["v"]]]],[5,"visit_expr_struct","","",null,[[["exprstruct"],["v"]]]],[5,"visit_expr_try","","",null,[[["exprtry"],["v"]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock"],["v"]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple"],["v"]]]],[5,"visit_expr_type","","",null,[[["v"],["exprtype"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_expr_unsafe","","",null,[[["v"],["exprunsafe"]]]],[5,"visit_expr_while","","",null,[[["exprwhile"],["v"]]]],[5,"visit_expr_yield","","",null,[[["expryield"],["v"]]]],[5,"visit_field","","",null,[[["v"],["field"]]]],[5,"visit_field_pat","","",null,[[["fieldpat"],["v"]]]],[5,"visit_field_value","","",null,[[["v"],["fieldvalue"]]]],[5,"visit_fields","","",null,[[["v"],["fields"]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed"],["v"]]]],[5,"visit_fields_unnamed","","",null,[[["v"],["fieldsunnamed"]]]],[5,"visit_file","","",null,[[["v"],["file"]]]],[5,"visit_fn_arg","","",null,[[["v"],["fnarg"]]]],[5,"visit_foreign_item","","",null,[[["v"],["foreignitem"]]]],[5,"visit_foreign_item_fn","","",null,[[["v"],["foreignitemfn"]]]],[5,"visit_foreign_item_macro","","",null,[[["v"],["foreignitemmacro"]]]],[5,"visit_foreign_item_static","","",null,[[["v"],["foreignitemstatic"]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype"],["v"]]]],[5,"visit_generic_argument","","",null,[[["genericargument"],["v"]]]],[5,"visit_generic_method_argument","","",null,[[["v"],["genericmethodargument"]]]],[5,"visit_generic_param","","",null,[[["v"],["genericparam"]]]],[5,"visit_generics","","",null,[[["v"],["generics"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[5,"visit_impl_item","","",null,[[["implitem"],["v"]]]],[5,"visit_impl_item_const","","",null,[[["v"],["implitemconst"]]]],[5,"visit_impl_item_macro","","",null,[[["v"],["implitemmacro"]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod"],["v"]]]],[5,"visit_impl_item_type","","",null,[[["v"],["implitemtype"]]]],[5,"visit_index","","",null,[[["index"],["v"]]]],[5,"visit_item","","",null,[[["item"],["v"]]]],[5,"visit_item_const","","",null,[[["itemconst"],["v"]]]],[5,"visit_item_enum","","",null,[[["v"],["itemenum"]]]],[5,"visit_item_extern_crate","","",null,[[["v"],["itemexterncrate"]]]],[5,"visit_item_fn","","",null,[[["itemfn"],["v"]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod"],["v"]]]],[5,"visit_item_impl","","",null,[[["v"],["itemimpl"]]]],[5,"visit_item_macro","","",null,[[["itemmacro"],["v"]]]],[5,"visit_item_macro2","","",null,[[["v"],["itemmacro2"]]]],[5,"visit_item_mod","","",null,[[["itemmod"],["v"]]]],[5,"visit_item_static","","",null,[[["v"],["itemstatic"]]]],[5,"visit_item_struct","","",null,[[["itemstruct"],["v"]]]],[5,"visit_item_trait","","",null,[[["itemtrait"],["v"]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias"],["v"]]]],[5,"visit_item_type","","",null,[[["itemtype"],["v"]]]],[5,"visit_item_union","","",null,[[["v"],["itemunion"]]]],[5,"visit_item_use","","",null,[[["itemuse"],["v"]]]],[5,"visit_label","","",null,[[["v"],["label"]]]],[5,"visit_lifetime","","",null,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["litbool"],["v"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",null,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",null,[[["litfloat"],["v"]]]],[5,"visit_lit_int","","",null,[[["v"],["litint"]]]],[5,"visit_lit_str","","",null,[[["v"],["litstr"]]]],[5,"visit_local","","",null,[[["local"],["v"]]]],[5,"visit_macro","","",null,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",null,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",null,[[["member"],["v"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue"],["v"]]]],[5,"visit_method_turbofish","","",null,[[["v"],["methodturbofish"]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta"],["v"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_pat","","",null,[[["pat"],["v"]]]],[5,"visit_pat_box","","",null,[[["patbox"],["v"]]]],[5,"visit_pat_ident","","",null,[[["v"],["patident"]]]],[5,"visit_pat_lit","","",null,[[["patlit"],["v"]]]],[5,"visit_pat_macro","","",null,[[["v"],["patmacro"]]]],[5,"visit_pat_or","","",null,[[["pator"],["v"]]]],[5,"visit_pat_path","","",null,[[["v"],["patpath"]]]],[5,"visit_pat_range","","",null,[[["patrange"],["v"]]]],[5,"visit_pat_reference","","",null,[[["patreference"],["v"]]]],[5,"visit_pat_rest","","",null,[[["patrest"],["v"]]]],[5,"visit_pat_slice","","",null,[[["v"],["patslice"]]]],[5,"visit_pat_struct","","",null,[[["patstruct"],["v"]]]],[5,"visit_pat_tuple","","",null,[[["v"],["pattuple"]]]],[5,"visit_pat_tuple_struct","","",null,[[["v"],["pattuplestruct"]]]],[5,"visit_pat_type","","",null,[[["pattype"],["v"]]]],[5,"visit_pat_wild","","",null,[[["patwild"],["v"]]]],[5,"visit_path","","",null,[[["path"],["v"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",null,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["qself"],["v"]]]],[5,"visit_range_limits","","",null,[[["rangelimits"],["v"]]]],[5,"visit_receiver","","",null,[[["receiver"],["v"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_signature","","",null,[[["v"],["signature"]]]],[5,"visit_span","","",null,[[["span"],["v"]]]],[5,"visit_stmt","","",null,[[["stmt"],["v"]]]],[5,"visit_trait_bound","","",null,[[["traitbound"],["v"]]]],[5,"visit_trait_bound_modifier","","",null,[[["v"],["traitboundmodifier"]]]],[5,"visit_trait_item","","",null,[[["v"],["traititem"]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst"],["v"]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro"],["v"]]]],[5,"visit_trait_item_method","","",null,[[["v"],["traititemmethod"]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype"],["v"]]]],[5,"visit_type","","",null,[[["v"],["type"]]]],[5,"visit_type_array","","",null,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn"],["v"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",null,[[["typeinfer"],["v"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["typenever"],["v"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",null,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",null,[[["typepath"],["v"]]]],[5,"visit_type_ptr","","",null,[[["typeptr"],["v"]]]],[5,"visit_type_reference","","",null,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",null,[[["typeslice"],["v"]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject"],["v"]]]],[5,"visit_type_tuple","","",null,[[["typetuple"],["v"]]]],[5,"visit_un_op","","",null,[[["v"],["unop"]]]],[5,"visit_use_glob","","",null,[[["v"],["useglob"]]]],[5,"visit_use_group","","",null,[[["usegroup"],["v"]]]],[5,"visit_use_name","","",null,[[["v"],["usename"]]]],[5,"visit_use_path","","",null,[[["v"],["usepath"]]]],[5,"visit_use_rename","","",null,[[["v"],["userename"]]]],[5,"visit_use_tree","","",null,[[["usetree"],["v"]]]],[5,"visit_variadic","","",null,[[["v"],["variadic"]]]],[5,"visit_variant","","",null,[[["variant"],["v"]]]],[5,"visit_vis_crate","","",null,[[["viscrate"],["v"]]]],[5,"visit_vis_public","","",null,[[["vispublic"],["v"]]]],[5,"visit_vis_restricted","","",null,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["whereclause"],["v"]]]],[5,"visit_where_predicate","","",null,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arm","","",296,[[["arm"],["self"]]]],[11,"visit_attr_style","","",296,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",296,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg"],["self"]]]],[11,"visit_bin_op","","",296,[[["binop"],["self"]]]],[11,"visit_binding","","",296,[[["self"],["binding"]]]],[11,"visit_block","","",296,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes"],["self"]]]],[11,"visit_const_param","","",296,[[["self"],["constparam"]]]],[11,"visit_constraint","","",296,[[["self"],["constraint"]]]],[11,"visit_data","","",296,[[["self"],["data"]]]],[11,"visit_data_enum","","",296,[[["dataenum"],["self"]]]],[11,"visit_data_struct","","",296,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",296,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",296,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",296,[[["self"],["expr"]]]],[11,"visit_expr_array","","",296,[[["self"],["exprarray"]]]],[11,"visit_expr_assign","","",296,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",296,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",296,[[["self"],["exprasync"]]]],[11,"visit_expr_await","","",296,[[["self"],["exprawait"]]]],[11,"visit_expr_binary","","",296,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",296,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",296,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",296,[[["exprbreak"],["self"]]]],[11,"visit_expr_call","","",296,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",296,[[["exprcast"],["self"]]]],[11,"visit_expr_closure","","",296,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",296,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",296,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",296,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",296,[[["exprgroup"],["self"]]]],[11,"visit_expr_if","","",296,[[["self"],["exprif"]]]],[11,"visit_expr_index","","",296,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",296,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",296,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",296,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",296,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",296,[[["exprmatch"],["self"]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",296,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",296,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",296,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",296,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",296,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",296,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",296,[[["exprstruct"],["self"]]]],[11,"visit_expr_try","","",296,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock"],["self"]]]],[11,"visit_expr_tuple","","",296,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",296,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",296,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",296,[[["self"],["exprunsafe"]]]],[11,"visit_expr_while","","",296,[[["exprwhile"],["self"]]]],[11,"visit_expr_yield","","",296,[[["self"],["expryield"]]]],[11,"visit_field","","",296,[[["self"],["field"]]]],[11,"visit_field_pat","","",296,[[["fieldpat"],["self"]]]],[11,"visit_field_value","","",296,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",296,[[["self"],["fields"]]]],[11,"visit_fields_named","","",296,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",296,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",296,[[["self"],["file"]]]],[11,"visit_fn_arg","","",296,[[["self"],["fnarg"]]]],[11,"visit_foreign_item","","",296,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",296,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",296,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",296,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype"],["self"]]]],[11,"visit_generic_argument","","",296,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",296,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",296,[[["self"],["genericparam"]]]],[11,"visit_generics","","",296,[[["self"],["generics"]]]],[11,"visit_ident","","",296,[[["self"],["ident"]]]],[11,"visit_impl_item","","",296,[[["implitem"],["self"]]]],[11,"visit_impl_item_const","","",296,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_macro","","",296,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",296,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",296,[[["self"],["implitemtype"]]]],[11,"visit_index","","",296,[[["index"],["self"]]]],[11,"visit_item","","",296,[[["self"],["item"]]]],[11,"visit_item_const","","",296,[[["itemconst"],["self"]]]],[11,"visit_item_enum","","",296,[[["self"],["itemenum"]]]],[11,"visit_item_extern_crate","","",296,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",296,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod"],["self"]]]],[11,"visit_item_impl","","",296,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",296,[[["itemmacro"],["self"]]]],[11,"visit_item_macro2","","",296,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",296,[[["itemmod"],["self"]]]],[11,"visit_item_static","","",296,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",296,[[["itemstruct"],["self"]]]],[11,"visit_item_trait","","",296,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias"],["self"]]]],[11,"visit_item_type","","",296,[[["itemtype"],["self"]]]],[11,"visit_item_union","","",296,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",296,[[["itemuse"],["self"]]]],[11,"visit_label","","",296,[[["self"],["label"]]]],[11,"visit_lifetime","","",296,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",296,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",296,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",296,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",296,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",296,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",296,[[["litfloat"],["self"]]]],[11,"visit_lit_int","","",296,[[["self"],["litint"]]]],[11,"visit_lit_str","","",296,[[["self"],["litstr"]]]],[11,"visit_local","","",296,[[["self"],["local"]]]],[11,"visit_macro","","",296,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",296,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",296,[[["self"],["member"]]]],[11,"visit_meta","","",296,[[["meta"],["self"]]]],[11,"visit_meta_list","","",296,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue"],["self"]]]],[11,"visit_method_turbofish","","",296,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",296,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",296,[[["self"],["pat"]]]],[11,"visit_pat_box","","",296,[[["patbox"],["self"]]]],[11,"visit_pat_ident","","",296,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",296,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",296,[[["self"],["patmacro"]]]],[11,"visit_pat_or","","",296,[[["pator"],["self"]]]],[11,"visit_pat_path","","",296,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",296,[[["patrange"],["self"]]]],[11,"visit_pat_reference","","",296,[[["patreference"],["self"]]]],[11,"visit_pat_rest","","",296,[[["self"],["patrest"]]]],[11,"visit_pat_slice","","",296,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",296,[[["patstruct"],["self"]]]],[11,"visit_pat_tuple","","",296,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",296,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_type","","",296,[[["self"],["pattype"]]]],[11,"visit_pat_wild","","",296,[[["patwild"],["self"]]]],[11,"visit_path","","",296,[[["self"],["path"]]]],[11,"visit_path_arguments","","",296,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",296,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",296,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",296,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",296,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",296,[[["self"],["qself"]]]],[11,"visit_range_limits","","",296,[[["rangelimits"],["self"]]]],[11,"visit_receiver","","",296,[[["self"],["receiver"]]]],[11,"visit_return_type","","",296,[[["returntype"],["self"]]]],[11,"visit_signature","","",296,[[["self"],["signature"]]]],[11,"visit_span","","",296,[[["self"],["span"]]]],[11,"visit_stmt","","",296,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",296,[[["traitbound"],["self"]]]],[11,"visit_trait_bound_modifier","","",296,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",296,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",296,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",296,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",296,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",296,[[["self"],["traititemtype"]]]],[11,"visit_type","","",296,[[["self"],["type"]]]],[11,"visit_type_array","","",296,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",296,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",296,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",296,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",296,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",296,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",296,[[["self"],["typenever"]]]],[11,"visit_type_param","","",296,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",296,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",296,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",296,[[["typepath"],["self"]]]],[11,"visit_type_ptr","","",296,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",296,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",296,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject"],["self"]]]],[11,"visit_type_tuple","","",296,[[["typetuple"],["self"]]]],[11,"visit_un_op","","",296,[[["self"],["unop"]]]],[11,"visit_use_glob","","",296,[[["self"],["useglob"]]]],[11,"visit_use_group","","",296,[[["usegroup"],["self"]]]],[11,"visit_use_name","","",296,[[["self"],["usename"]]]],[11,"visit_use_path","","",296,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",296,[[["self"],["userename"]]]],[11,"visit_use_tree","","",296,[[["usetree"],["self"]]]],[11,"visit_variadic","","",296,[[["self"],["variadic"]]]],[11,"visit_variant","","",296,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",296,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",296,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",296,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",296,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",296,[[["whereclause"],["self"]]]],[11,"visit_where_predicate","","",296,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[["self"]],[["result"],["parse"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["display"],["self"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[["self"],["f"]],["result"]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[["self"]],["span"]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",302,[[["display"],["span"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["display"],["totokens"]],["self"]]],[11,"span","","The source location of the error.",302,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",302,[[["error"],["self"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor"]],["bool"]]],[11,"display","","",303,[[],["str"]]],[11,"span","","",303,[[["self"]],["span"]]],[11,"from","","",303,[[["t"]],["t"]]],[11,"into","","",303,[[],["u"]]],[11,"to_owned","","",303,[[["self"]],["t"]]],[11,"clone_into","","",303,[[["self"],["t"]]]],[11,"to_string","","",303,[[["self"]],["string"]]],[11,"try_from","","",303,[[["u"]],["result"]]],[11,"try_into","","",303,[[],["result"]]],[11,"borrow","","",303,[[["self"]],["t"]]],[11,"borrow_mut","","",303,[[["self"]],["t"]]],[11,"type_id","","",303,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"span","","",34,[[["self"]],["span"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"span","","",35,[[["self"]],["span"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"span","","",60,[[["self"]],["span"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"span","","",61,[[["self"]],["span"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",304,[[["self"]],["span"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[],["u"]]],[11,"to_owned","","",304,[[["self"]],["t"]]],[11,"clone_into","","",304,[[["self"],["t"]]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"try_into","","",304,[[],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"type_id","","",304,[[["self"]],["typeid"]]],[11,"span","","",305,[[["self"]],["span"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[],["u"]]],[11,"to_owned","","",305,[[["self"]],["t"]]],[11,"clone_into","","",305,[[["self"],["t"]]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"try_into","","",305,[[],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"type_id","","",305,[[["self"]],["typeid"]]],[11,"span","","",283,[[["self"]],["span"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[],["u"]]],[11,"to_owned","","",283,[[["self"]],["t"]]],[11,"clone_into","","",283,[[["self"],["t"]]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"try_into","","",283,[[],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"type_id","","",283,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"span","","",73,[[["self"]],["span"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"span","","",74,[[["self"]],["span"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"span","","",75,[[["self"]],["span"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"to_string","","",100,[[["self"]],["string"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"span","","",286,[[["self"]],["span"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[],["u"]]],[11,"to_owned","","",286,[[["self"]],["t"]]],[11,"clone_into","","",286,[[["self"],["t"]]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"try_into","","",286,[[],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"type_id","","",286,[[["self"]],["typeid"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"span","","",285,[[["self"]],["span"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[],["u"]]],[11,"to_owned","","",285,[[["self"]],["t"]]],[11,"clone_into","","",285,[[["self"],["t"]]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"try_into","","",285,[[],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"type_id","","",285,[[["self"]],["typeid"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"span","","",287,[[["self"]],["span"]]],[11,"from","","",287,[[["t"]],["t"]]],[11,"into","","",287,[[],["u"]]],[11,"to_owned","","",287,[[["self"]],["t"]]],[11,"clone_into","","",287,[[["self"],["t"]]]],[11,"try_from","","",287,[[["u"]],["result"]]],[11,"try_into","","",287,[[],["result"]]],[11,"borrow","","",287,[[["self"]],["t"]]],[11,"borrow_mut","","",287,[[["self"]],["t"]]],[11,"type_id","","",287,[[["self"]],["typeid"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"span","","",289,[[["self"]],["span"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[],["u"]]],[11,"to_owned","","",289,[[["self"]],["t"]]],[11,"clone_into","","",289,[[["self"],["t"]]]],[11,"to_string","","",289,[[["self"]],["string"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"try_into","","",289,[[],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"type_id","","",289,[[["self"]],["typeid"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"span","","",288,[[["self"]],["span"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[],["u"]]],[11,"to_owned","","",288,[[["self"]],["t"]]],[11,"clone_into","","",288,[[["self"],["t"]]]],[11,"to_string","","",288,[[["self"]],["string"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"try_into","","",288,[[],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"type_id","","",288,[[["self"]],["typeid"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"span","","",284,[[["self"]],["span"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[],["u"]]],[11,"to_owned","","",284,[[["self"]],["t"]]],[11,"clone_into","","",284,[[["self"],["t"]]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"try_into","","",284,[[],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"type_id","","",284,[[["self"]],["typeid"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[],["u"]]],[11,"into_iter","","",302,[[],["i"]]],[11,"to_owned","","",302,[[["self"]],["t"]]],[11,"clone_into","","",302,[[["self"],["t"]]]],[11,"to_string","","",302,[[["self"]],["string"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"try_into","","",302,[[],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"type_id","","",302,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"into_iter","","",152,[[],["i"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"span","","",181,[[["self"]],["span"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"span","","",182,[[["self"]],["span"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"span","","",183,[[["self"]],["span"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"span","","",184,[[["self"]],["span"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"to_owned","","",192,[[["self"]],["t"]]],[11,"clone_into","","",192,[[["self"],["t"]]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"span","","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"span","","",197,[[["self"]],["span"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"to_owned","","",197,[[["self"]],["t"]]],[11,"clone_into","","",197,[[["self"],["t"]]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"span","","",198,[[["self"]],["span"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"to_owned","","",198,[[["self"]],["t"]]],[11,"clone_into","","",198,[[["self"],["t"]]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"span","","",199,[[["self"]],["span"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"to_owned","","",199,[[["self"]],["t"]]],[11,"clone_into","","",199,[[["self"],["t"]]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"span","","",200,[[["self"]],["span"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"to_owned","","",200,[[["self"]],["t"]]],[11,"clone_into","","",200,[[["self"],["t"]]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"span","","",201,[[["self"]],["span"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,[[["self"],["t"]]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"span","","",202,[[["self"]],["span"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"span","","",203,[[["self"]],["span"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_owned","","",203,[[["self"]],["t"]]],[11,"clone_into","","",203,[[["self"],["t"]]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"span","","",204,[[["self"]],["span"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"span","","",238,[[["self"]],["span"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"span","","",239,[[["self"]],["span"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"to_owned","","",239,[[["self"]],["t"]]],[11,"clone_into","","",239,[[["self"],["t"]]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"span","","",240,[[["self"]],["span"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"span","","",241,[[["self"]],["span"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"span","","",242,[[["self"]],["span"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"span","","",243,[[["self"]],["span"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"to_owned","","",243,[[["self"]],["t"]]],[11,"clone_into","","",243,[[["self"],["t"]]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"span","","",244,[[["self"]],["span"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,[[["self"],["t"]]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"span","","",245,[[["self"]],["span"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,[[["self"],["t"]]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"span","","",246,[[["self"]],["span"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[],["u"]]],[11,"to_owned","","",246,[[["self"]],["t"]]],[11,"clone_into","","",246,[[["self"],["t"]]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"try_into","","",246,[[],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"type_id","","",246,[[["self"]],["typeid"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[],["u"]]],[11,"to_owned","","",247,[[["self"]],["t"]]],[11,"clone_into","","",247,[[["self"],["t"]]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"try_into","","",247,[[],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"type_id","","",247,[[["self"]],["typeid"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"span","","",248,[[["self"]],["span"]]],[11,"from","","",248,[[["t"]],["t"]]],[11,"into","","",248,[[],["u"]]],[11,"to_owned","","",248,[[["self"]],["t"]]],[11,"clone_into","","",248,[[["self"],["t"]]]],[11,"try_from","","",248,[[["u"]],["result"]]],[11,"try_into","","",248,[[],["result"]]],[11,"borrow","","",248,[[["self"]],["t"]]],[11,"borrow_mut","","",248,[[["self"]],["t"]]],[11,"type_id","","",248,[[["self"]],["typeid"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"span","","",249,[[["self"]],["span"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[],["u"]]],[11,"to_owned","","",249,[[["self"]],["t"]]],[11,"clone_into","","",249,[[["self"],["t"]]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"try_into","","",249,[[],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"type_id","","",249,[[["self"]],["typeid"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"span","","",250,[[["self"]],["span"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,[[["self"],["t"]]]],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"try_into","","",250,[[],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"type_id","","",250,[[["self"]],["typeid"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"span","","",251,[[["self"]],["span"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,[[["self"],["t"]]]],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"try_into","","",251,[[],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"type_id","","",251,[[["self"]],["typeid"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"span","","",252,[[["self"]],["span"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[],["u"]]],[11,"to_owned","","",252,[[["self"]],["t"]]],[11,"clone_into","","",252,[[["self"],["t"]]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"try_into","","",252,[[],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"type_id","","",252,[[["self"]],["typeid"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"span","","",253,[[["self"]],["span"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[],["u"]]],[11,"to_owned","","",253,[[["self"]],["t"]]],[11,"clone_into","","",253,[[["self"],["t"]]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"try_into","","",253,[[],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"type_id","","",253,[[["self"]],["typeid"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"span","","",254,[[["self"]],["span"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[],["u"]]],[11,"to_owned","","",254,[[["self"]],["t"]]],[11,"clone_into","","",254,[[["self"],["t"]]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"try_into","","",254,[[],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"type_id","","",254,[[["self"]],["typeid"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"span","","",255,[[["self"]],["span"]]],[11,"from","","",255,[[["t"]],["t"]]],[11,"into","","",255,[[],["u"]]],[11,"to_owned","","",255,[[["self"]],["t"]]],[11,"clone_into","","",255,[[["self"],["t"]]]],[11,"try_from","","",255,[[["u"]],["result"]]],[11,"try_into","","",255,[[],["result"]]],[11,"borrow","","",255,[[["self"]],["t"]]],[11,"borrow_mut","","",255,[[["self"]],["t"]]],[11,"type_id","","",255,[[["self"]],["typeid"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"span","","",256,[[["self"]],["span"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[],["u"]]],[11,"to_owned","","",256,[[["self"]],["t"]]],[11,"clone_into","","",256,[[["self"],["t"]]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"try_into","","",256,[[],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"type_id","","",256,[[["self"]],["typeid"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"span","","",257,[[["self"]],["span"]]],[11,"from","","",257,[[["t"]],["t"]]],[11,"into","","",257,[[],["u"]]],[11,"to_owned","","",257,[[["self"]],["t"]]],[11,"clone_into","","",257,[[["self"],["t"]]]],[11,"try_from","","",257,[[["u"]],["result"]]],[11,"try_into","","",257,[[],["result"]]],[11,"borrow","","",257,[[["self"]],["t"]]],[11,"borrow_mut","","",257,[[["self"]],["t"]]],[11,"type_id","","",257,[[["self"]],["typeid"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"span","","",258,[[["self"]],["span"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[],["u"]]],[11,"to_owned","","",258,[[["self"]],["t"]]],[11,"clone_into","","",258,[[["self"],["t"]]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"try_into","","",258,[[],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"type_id","","",258,[[["self"]],["typeid"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"span","","",259,[[["self"]],["span"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[],["u"]]],[11,"to_owned","","",259,[[["self"]],["t"]]],[11,"clone_into","","",259,[[["self"],["t"]]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"try_into","","",259,[[],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"type_id","","",259,[[["self"]],["typeid"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"span","","",260,[[["self"]],["span"]]],[11,"from","","",260,[[["t"]],["t"]]],[11,"into","","",260,[[],["u"]]],[11,"to_owned","","",260,[[["self"]],["t"]]],[11,"clone_into","","",260,[[["self"],["t"]]]],[11,"try_from","","",260,[[["u"]],["result"]]],[11,"try_into","","",260,[[],["result"]]],[11,"borrow","","",260,[[["self"]],["t"]]],[11,"borrow_mut","","",260,[[["self"]],["t"]]],[11,"type_id","","",260,[[["self"]],["typeid"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"span","","",261,[[["self"]],["span"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[],["u"]]],[11,"to_owned","","",261,[[["self"]],["t"]]],[11,"clone_into","","",261,[[["self"],["t"]]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"try_into","","",261,[[],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"type_id","","",261,[[["self"]],["typeid"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"span","","",262,[[["self"]],["span"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[],["u"]]],[11,"to_owned","","",262,[[["self"]],["t"]]],[11,"clone_into","","",262,[[["self"],["t"]]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"try_into","","",262,[[],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"type_id","","",262,[[["self"]],["typeid"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"span","","",263,[[["self"]],["span"]]],[11,"from","","",263,[[["t"]],["t"]]],[11,"into","","",263,[[],["u"]]],[11,"to_owned","","",263,[[["self"]],["t"]]],[11,"clone_into","","",263,[[["self"],["t"]]]],[11,"try_from","","",263,[[["u"]],["result"]]],[11,"try_into","","",263,[[],["result"]]],[11,"borrow","","",263,[[["self"]],["t"]]],[11,"borrow_mut","","",263,[[["self"]],["t"]]],[11,"type_id","","",263,[[["self"]],["typeid"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"span","","",264,[[["self"]],["span"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[],["u"]]],[11,"to_owned","","",264,[[["self"]],["t"]]],[11,"clone_into","","",264,[[["self"],["t"]]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"try_into","","",264,[[],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"type_id","","",264,[[["self"]],["typeid"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"span","","",265,[[["self"]],["span"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[],["u"]]],[11,"to_owned","","",265,[[["self"]],["t"]]],[11,"clone_into","","",265,[[["self"],["t"]]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"try_into","","",265,[[],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"type_id","","",265,[[["self"]],["typeid"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"span","","",266,[[["self"]],["span"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[],["u"]]],[11,"to_owned","","",266,[[["self"]],["t"]]],[11,"clone_into","","",266,[[["self"],["t"]]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"try_into","","",266,[[],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"type_id","","",266,[[["self"]],["typeid"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"span","","",267,[[["self"]],["span"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[],["u"]]],[11,"to_owned","","",267,[[["self"]],["t"]]],[11,"clone_into","","",267,[[["self"],["t"]]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"try_into","","",267,[[],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"type_id","","",267,[[["self"]],["typeid"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"span","","",268,[[["self"]],["span"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[],["u"]]],[11,"to_owned","","",268,[[["self"]],["t"]]],[11,"clone_into","","",268,[[["self"],["t"]]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"try_into","","",268,[[],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"type_id","","",268,[[["self"]],["typeid"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"span","","",269,[[["self"]],["span"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[],["u"]]],[11,"to_owned","","",269,[[["self"]],["t"]]],[11,"clone_into","","",269,[[["self"],["t"]]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"try_into","","",269,[[],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"type_id","","",269,[[["self"]],["typeid"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"span","","",270,[[["self"]],["span"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[],["u"]]],[11,"to_owned","","",270,[[["self"]],["t"]]],[11,"clone_into","","",270,[[["self"],["t"]]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"try_into","","",270,[[],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"type_id","","",270,[[["self"]],["typeid"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"span","","",271,[[["self"]],["span"]]],[11,"from","","",271,[[["t"]],["t"]]],[11,"into","","",271,[[],["u"]]],[11,"to_owned","","",271,[[["self"]],["t"]]],[11,"clone_into","","",271,[[["self"],["t"]]]],[11,"try_from","","",271,[[["u"]],["result"]]],[11,"try_into","","",271,[[],["result"]]],[11,"borrow","","",271,[[["self"]],["t"]]],[11,"borrow_mut","","",271,[[["self"]],["t"]]],[11,"type_id","","",271,[[["self"]],["typeid"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"span","","",272,[[["self"]],["span"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[],["u"]]],[11,"to_owned","","",272,[[["self"]],["t"]]],[11,"clone_into","","",272,[[["self"],["t"]]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"try_into","","",272,[[],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"type_id","","",272,[[["self"]],["typeid"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"span","","",273,[[["self"]],["span"]]],[11,"from","","",273,[[["t"]],["t"]]],[11,"into","","",273,[[],["u"]]],[11,"to_owned","","",273,[[["self"]],["t"]]],[11,"clone_into","","",273,[[["self"],["t"]]]],[11,"try_from","","",273,[[["u"]],["result"]]],[11,"try_into","","",273,[[],["result"]]],[11,"borrow","","",273,[[["self"]],["t"]]],[11,"borrow_mut","","",273,[[["self"]],["t"]]],[11,"type_id","","",273,[[["self"]],["typeid"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"span","","",274,[[["self"]],["span"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[],["u"]]],[11,"to_owned","","",274,[[["self"]],["t"]]],[11,"clone_into","","",274,[[["self"],["t"]]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"try_into","","",274,[[],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"type_id","","",274,[[["self"]],["typeid"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"span","","",275,[[["self"]],["span"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[],["u"]]],[11,"to_owned","","",275,[[["self"]],["t"]]],[11,"clone_into","","",275,[[["self"],["t"]]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"try_into","","",275,[[],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"type_id","","",275,[[["self"]],["typeid"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"span","","",276,[[["self"]],["span"]]],[11,"from","","",276,[[["t"]],["t"]]],[11,"into","","",276,[[],["u"]]],[11,"to_owned","","",276,[[["self"]],["t"]]],[11,"clone_into","","",276,[[["self"],["t"]]]],[11,"try_from","","",276,[[["u"]],["result"]]],[11,"try_into","","",276,[[],["result"]]],[11,"borrow","","",276,[[["self"]],["t"]]],[11,"borrow_mut","","",276,[[["self"]],["t"]]],[11,"type_id","","",276,[[["self"]],["typeid"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"span","","",277,[[["self"]],["span"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[],["u"]]],[11,"to_owned","","",277,[[["self"]],["t"]]],[11,"clone_into","","",277,[[["self"],["t"]]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"try_into","","",277,[[],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"type_id","","",277,[[["self"]],["typeid"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"span","","",278,[[["self"]],["span"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[],["u"]]],[11,"to_owned","","",278,[[["self"]],["t"]]],[11,"clone_into","","",278,[[["self"],["t"]]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"try_into","","",278,[[],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"type_id","","",278,[[["self"]],["typeid"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"from","","",279,[[["t"]],["t"]]],[11,"into","","",279,[[],["u"]]],[11,"to_owned","","",279,[[["self"]],["t"]]],[11,"clone_into","","",279,[[["self"],["t"]]]],[11,"try_from","","",279,[[["u"]],["result"]]],[11,"try_into","","",279,[[],["result"]]],[11,"borrow","","",279,[[["self"]],["t"]]],[11,"borrow_mut","","",279,[[["self"]],["t"]]],[11,"type_id","","",279,[[["self"]],["typeid"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[],["u"]]],[11,"to_owned","","",280,[[["self"]],["t"]]],[11,"clone_into","","",280,[[["self"],["t"]]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"try_into","","",280,[[],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"type_id","","",280,[[["self"]],["typeid"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[],["u"]]],[11,"to_owned","","",281,[[["self"]],["t"]]],[11,"clone_into","","",281,[[["self"],["t"]]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"try_into","","",281,[[],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"type_id","","",281,[[["self"]],["typeid"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[],["u"]]],[11,"to_owned","","",282,[[["self"]],["t"]]],[11,"clone_into","","",282,[[["self"],["t"]]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"try_into","","",282,[[],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"type_id","","",282,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",290,[[["t"]],["t"]]],[11,"into","","",290,[[],["u"]]],[11,"try_from","","",290,[[["u"]],["result"]]],[11,"try_into","","",290,[[],["result"]]],[11,"borrow","","",290,[[["self"]],["t"]]],[11,"borrow_mut","","",290,[[["self"]],["t"]]],[11,"type_id","","",290,[[["self"]],["typeid"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[],["u"]]],[11,"to_owned","","",291,[[["self"]],["t"]]],[11,"clone_into","","",291,[[["self"],["t"]]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"try_into","","",291,[[],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"type_id","","",291,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",294,[[["self"]],["span"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[],["u"]]],[11,"into_iter","","",294,[[],["i"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,[[["self"],["t"]]]],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"try_into","","",294,[[],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"type_id","","",294,[[["self"]],["typeid"]]],[11,"from","","",306,[[["t"]],["t"]]],[11,"into","","",306,[[],["u"]]],[11,"into_iter","","",306,[[],["i"]]],[11,"to_owned","","",306,[[["self"]],["t"]]],[11,"clone_into","","",306,[[["self"],["t"]]]],[11,"try_from","","",306,[[["u"]],["result"]]],[11,"try_into","","",306,[[],["result"]]],[11,"borrow","","",306,[[["self"]],["t"]]],[11,"borrow_mut","","",306,[[["self"]],["t"]]],[11,"type_id","","",306,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[],["u"]]],[11,"into_iter","","",307,[[],["i"]]],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"try_into","","",307,[[],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"type_id","","",307,[[["self"]],["typeid"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[],["u"]]],[11,"into_iter","","",308,[[],["i"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,[[["self"],["t"]]]],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"try_into","","",308,[[],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"type_id","","",308,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[],["u"]]],[11,"into_iter","","",309,[[],["i"]]],[11,"to_owned","","",309,[[["self"]],["t"]]],[11,"clone_into","","",309,[[["self"],["t"]]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"try_into","","",309,[[],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[],["u"]]],[11,"into_iter","","",310,[[],["i"]]],[11,"to_owned","","",310,[[["self"]],["t"]]],[11,"clone_into","","",310,[[["self"],["t"]]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"try_into","","",310,[[],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"type_id","","",310,[[["self"]],["typeid"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[],["u"]]],[11,"into_iter","","",311,[[],["i"]]],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"try_into","","",311,[[],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"type_id","","",311,[[["self"]],["typeid"]]],[11,"span","","",293,[[["self"]],["span"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[],["u"]]],[11,"to_owned","","",293,[[["self"]],["t"]]],[11,"clone_into","","",293,[[["self"],["t"]]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"try_into","","",293,[[],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"type_id","","",293,[[["self"]],["typeid"]]],[11,"from","syn::parse","",312,[[["t"]],["t"]]],[11,"into","","",312,[[],["u"]]],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"try_into","","",312,[[],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"type_id","","",312,[[["self"]],["typeid"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[],["u"]]],[11,"to_string","","",301,[[["self"]],["string"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"try_into","","",301,[[],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"type_id","","",301,[[["self"]],["typeid"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,[[["self"],["t"]]]],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"try_into","","",300,[[],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"type_id","","",300,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"try_into","","",313,[[],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"type_id","","",313,[[["self"]],["typeid"]]],[11,"hash","syn","",303,[[["self"],["h"]]]],[11,"fmt","","",303,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",303,[[["self"]],["ident"]]],[11,"eq","","",303,[[["self"],["ident"]],["bool"]]],[11,"eq","","",303,[[["t"],["self"]],["bool"]]],[11,"fmt","","",303,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"cmp","","",303,[[["self"],["ident"]],["ordering"]]],[11,"partial_cmp","","",303,[[["self"],["ident"]],[["ordering"],["option",["ordering"]]]]],[11,"to_tokens","","",303,[[["self"],["tokenstream"]]]],[11,"span","","",303,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",303,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",284,[[["cursor"]],["bool"]]],[11,"display","","",284,[[],["str"]]],[11,"peek","","",285,[[["cursor"]],["bool"]]],[11,"display","","",285,[[],["str"]]],[11,"peek","","",286,[[["cursor"]],["bool"]]],[11,"display","","",286,[[],["str"]]],[11,"peek","","",287,[[["cursor"]],["bool"]]],[11,"display","","",287,[[],["str"]]],[11,"peek","","",288,[[["cursor"]],["bool"]]],[11,"display","","",288,[[],["str"]]],[11,"peek","","",289,[[["cursor"]],["bool"]]],[11,"display","","",289,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","syn::token","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","","",281,[[["cursor"]],["bool"]]],[11,"display","","",281,[[],["str"]]],[11,"peek","","",279,[[["cursor"]],["bool"]]],[11,"display","","",279,[[],["str"]]],[11,"peek","","",280,[[["cursor"]],["bool"]]],[11,"display","","",280,[[],["str"]]],[11,"peek","","",282,[[["cursor"]],["bool"]]],[11,"display","","",282,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"peek","","",197,[[["cursor"]],["bool"]]],[11,"display","","",197,[[],["str"]]],[11,"peek","","",198,[[["cursor"]],["bool"]]],[11,"display","","",198,[[],["str"]]],[11,"peek","","",199,[[["cursor"]],["bool"]]],[11,"display","","",199,[[],["str"]]],[11,"peek","","",200,[[["cursor"]],["bool"]]],[11,"display","","",200,[[],["str"]]],[11,"peek","","",201,[[["cursor"]],["bool"]]],[11,"display","","",201,[[],["str"]]],[11,"peek","","",202,[[["cursor"]],["bool"]]],[11,"display","","",202,[[],["str"]]],[11,"peek","","",203,[[["cursor"]],["bool"]]],[11,"display","","",203,[[],["str"]]],[11,"peek","","",204,[[["cursor"]],["bool"]]],[11,"display","","",204,[[],["str"]]],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"peek","","",206,[[["cursor"]],["bool"]]],[11,"display","","",206,[[],["str"]]],[11,"peek","","",207,[[["cursor"]],["bool"]]],[11,"display","","",207,[[],["str"]]],[11,"peek","","",208,[[["cursor"]],["bool"]]],[11,"display","","",208,[[],["str"]]],[11,"peek","","",209,[[["cursor"]],["bool"]]],[11,"display","","",209,[[],["str"]]],[11,"peek","","",210,[[["cursor"]],["bool"]]],[11,"display","","",210,[[],["str"]]],[11,"peek","","",211,[[["cursor"]],["bool"]]],[11,"display","","",211,[[],["str"]]],[11,"peek","","",212,[[["cursor"]],["bool"]]],[11,"display","","",212,[[],["str"]]],[11,"peek","","",213,[[["cursor"]],["bool"]]],[11,"display","","",213,[[],["str"]]],[11,"peek","","",214,[[["cursor"]],["bool"]]],[11,"display","","",214,[[],["str"]]],[11,"peek","","",215,[[["cursor"]],["bool"]]],[11,"display","","",215,[[],["str"]]],[11,"peek","","",216,[[["cursor"]],["bool"]]],[11,"display","","",216,[[],["str"]]],[11,"peek","","",217,[[["cursor"]],["bool"]]],[11,"display","","",217,[[],["str"]]],[11,"peek","","",218,[[["cursor"]],["bool"]]],[11,"display","","",218,[[],["str"]]],[11,"peek","","",219,[[["cursor"]],["bool"]]],[11,"display","","",219,[[],["str"]]],[11,"peek","","",220,[[["cursor"]],["bool"]]],[11,"display","","",220,[[],["str"]]],[11,"peek","","",221,[[["cursor"]],["bool"]]],[11,"display","","",221,[[],["str"]]],[11,"peek","","",222,[[["cursor"]],["bool"]]],[11,"display","","",222,[[],["str"]]],[11,"peek","","",223,[[["cursor"]],["bool"]]],[11,"display","","",223,[[],["str"]]],[11,"peek","","",224,[[["cursor"]],["bool"]]],[11,"display","","",224,[[],["str"]]],[11,"peek","","",225,[[["cursor"]],["bool"]]],[11,"display","","",225,[[],["str"]]],[11,"peek","","",226,[[["cursor"]],["bool"]]],[11,"display","","",226,[[],["str"]]],[11,"peek","","",227,[[["cursor"]],["bool"]]],[11,"display","","",227,[[],["str"]]],[11,"peek","","",228,[[["cursor"]],["bool"]]],[11,"display","","",228,[[],["str"]]],[11,"peek","","",229,[[["cursor"]],["bool"]]],[11,"display","","",229,[[],["str"]]],[11,"peek","","",230,[[["cursor"]],["bool"]]],[11,"display","","",230,[[],["str"]]],[11,"peek","","",231,[[["cursor"]],["bool"]]],[11,"display","","",231,[[],["str"]]],[11,"peek","","",232,[[["cursor"]],["bool"]]],[11,"display","","",232,[[],["str"]]],[11,"peek","","",233,[[["cursor"]],["bool"]]],[11,"display","","",233,[[],["str"]]],[11,"peek","","",234,[[["cursor"]],["bool"]]],[11,"display","","",234,[[],["str"]]],[11,"peek","","",235,[[["cursor"]],["bool"]]],[11,"display","","",235,[[],["str"]]],[11,"peek","","",236,[[["cursor"]],["bool"]]],[11,"display","","",236,[[],["str"]]],[11,"peek","","",237,[[["cursor"]],["bool"]]],[11,"display","","",237,[[],["str"]]],[11,"peek","","",238,[[["cursor"]],["bool"]]],[11,"display","","",238,[[],["str"]]],[11,"peek","","",239,[[["cursor"]],["bool"]]],[11,"display","","",239,[[],["str"]]],[11,"peek","","",240,[[["cursor"]],["bool"]]],[11,"display","","",240,[[],["str"]]],[11,"peek","","",241,[[["cursor"]],["bool"]]],[11,"display","","",241,[[],["str"]]],[11,"peek","","",242,[[["cursor"]],["bool"]]],[11,"display","","",242,[[],["str"]]],[11,"peek","","",243,[[["cursor"]],["bool"]]],[11,"display","","",243,[[],["str"]]],[11,"peek","","",244,[[["cursor"]],["bool"]]],[11,"display","","",244,[[],["str"]]],[11,"peek","","",245,[[["cursor"]],["bool"]]],[11,"display","","",245,[[],["str"]]],[11,"peek","","",246,[[["cursor"]],["bool"]]],[11,"display","","",246,[[],["str"]]],[11,"peek","","",247,[[["cursor"]],["bool"]]],[11,"display","","",247,[[],["str"]]],[11,"peek","","",248,[[["cursor"]],["bool"]]],[11,"display","","",248,[[],["str"]]],[11,"peek","","",249,[[["cursor"]],["bool"]]],[11,"display","","",249,[[],["str"]]],[11,"peek","","",250,[[["cursor"]],["bool"]]],[11,"display","","",250,[[],["str"]]],[11,"peek","","",251,[[["cursor"]],["bool"]]],[11,"display","","",251,[[],["str"]]],[11,"peek","","",252,[[["cursor"]],["bool"]]],[11,"display","","",252,[[],["str"]]],[11,"peek","","",253,[[["cursor"]],["bool"]]],[11,"display","","",253,[[],["str"]]],[11,"peek","","",254,[[["cursor"]],["bool"]]],[11,"display","","",254,[[],["str"]]],[11,"peek","","",255,[[["cursor"]],["bool"]]],[11,"display","","",255,[[],["str"]]],[11,"peek","","",256,[[["cursor"]],["bool"]]],[11,"display","","",256,[[],["str"]]],[11,"peek","","",257,[[["cursor"]],["bool"]]],[11,"display","","",257,[[],["str"]]],[11,"peek","","",258,[[["cursor"]],["bool"]]],[11,"display","","",258,[[],["str"]]],[11,"peek","","",259,[[["cursor"]],["bool"]]],[11,"display","","",259,[[],["str"]]],[11,"peek","","",260,[[["cursor"]],["bool"]]],[11,"display","","",260,[[],["str"]]],[11,"peek","","",261,[[["cursor"]],["bool"]]],[11,"display","","",261,[[],["str"]]],[11,"peek","","",262,[[["cursor"]],["bool"]]],[11,"display","","",262,[[],["str"]]],[11,"peek","","",263,[[["cursor"]],["bool"]]],[11,"display","","",263,[[],["str"]]],[11,"peek","","",264,[[["cursor"]],["bool"]]],[11,"display","","",264,[[],["str"]]],[11,"peek","","",265,[[["cursor"]],["bool"]]],[11,"display","","",265,[[],["str"]]],[11,"peek","","",266,[[["cursor"]],["bool"]]],[11,"display","","",266,[[],["str"]]],[11,"peek","","",267,[[["cursor"]],["bool"]]],[11,"display","","",267,[[],["str"]]],[11,"peek","","",268,[[["cursor"]],["bool"]]],[11,"display","","",268,[[],["str"]]],[11,"peek","","",269,[[["cursor"]],["bool"]]],[11,"display","","",269,[[],["str"]]],[11,"peek","","",270,[[["cursor"]],["bool"]]],[11,"display","","",270,[[],["str"]]],[11,"peek","","",271,[[["cursor"]],["bool"]]],[11,"display","","",271,[[],["str"]]],[11,"peek","","",272,[[["cursor"]],["bool"]]],[11,"display","","",272,[[],["str"]]],[11,"peek","","",273,[[["cursor"]],["bool"]]],[11,"display","","",273,[[],["str"]]],[11,"peek","","",274,[[["cursor"]],["bool"]]],[11,"display","","",274,[[],["str"]]],[11,"peek","","",275,[[["cursor"]],["bool"]]],[11,"display","","",275,[[],["str"]]],[11,"peek","","",276,[[["cursor"]],["bool"]]],[11,"display","","",276,[[],["str"]]],[11,"peek","","",277,[[["cursor"]],["bool"]]],[11,"display","","",277,[[],["str"]]],[11,"peek","","",278,[[["cursor"]],["bool"]]],[11,"display","","",278,[[],["str"]]],[11,"peek","syn","",303,[[["cursor"]],["bool"]]],[11,"display","","",303,[[],["str"]]],[11,"parse_any","","",303,[[["parsestream"]],["result"]]],[11,"unraw","","",303,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",301,[[["self"]]]],[11,"parse","syn::token","",180,[[["parsestream"]],["result"]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",196,[[["parsestream"]],["result"]]],[11,"parse","","",197,[[["parsestream"]],["result"]]],[11,"parse","","",198,[[["parsestream"]],["result"]]],[11,"parse","","",199,[[["parsestream"]],["result"]]],[11,"parse","","",200,[[["parsestream"]],["result"]]],[11,"parse","","",201,[[["parsestream"]],["result"]]],[11,"parse","","",202,[[["parsestream"]],["result"]]],[11,"parse","","",203,[[["parsestream"]],["result"]]],[11,"parse","","",204,[[["parsestream"]],["result"]]],[11,"parse","","",205,[[["parsestream"]],["result"]]],[11,"parse","","",206,[[["parsestream"]],["result"]]],[11,"parse","","",207,[[["parsestream"]],["result"]]],[11,"parse","","",208,[[["parsestream"]],["result"]]],[11,"parse","","",209,[[["parsestream"]],["result"]]],[11,"parse","","",210,[[["parsestream"]],["result"]]],[11,"parse","","",211,[[["parsestream"]],["result"]]],[11,"parse","","",212,[[["parsestream"]],["result"]]],[11,"parse","","",213,[[["parsestream"]],["result"]]],[11,"parse","","",214,[[["parsestream"]],["result"]]],[11,"parse","","",215,[[["parsestream"]],["result"]]],[11,"parse","","",216,[[["parsestream"]],["result"]]],[11,"parse","","",217,[[["parsestream"]],["result"]]],[11,"parse","","",218,[[["parsestream"]],["result"]]],[11,"parse","","",219,[[["parsestream"]],["result"]]],[11,"parse","","",220,[[["parsestream"]],["result"]]],[11,"parse","","",221,[[["parsestream"]],["result"]]],[11,"parse","","",222,[[["parsestream"]],["result"]]],[11,"parse","","",223,[[["parsestream"]],["result"]]],[11,"parse","","",224,[[["parsestream"]],["result"]]],[11,"parse","","",225,[[["parsestream"]],["result"]]],[11,"parse","","",226,[[["parsestream"]],["result"]]],[11,"parse","","",227,[[["parsestream"]],["result"]]],[11,"parse","","",228,[[["parsestream"]],["result"]]],[11,"parse","","",229,[[["parsestream"]],["result"]]],[11,"parse","","",230,[[["parsestream"]],["result"]]],[11,"parse","","",231,[[["parsestream"]],["result"]]],[11,"parse","","",232,[[["parsestream"]],["result"]]],[11,"parse","","",233,[[["parsestream"]],["result"]]],[11,"parse","","",234,[[["parsestream"]],["result"]]],[11,"parse","","",235,[[["parsestream"]],["result"]]],[11,"parse","","",236,[[["parsestream"]],["result"]]],[11,"parse","","",237,[[["parsestream"]],["result"]]],[11,"parse","","",238,[[["parsestream"]],["result"]]],[11,"parse","","",239,[[["parsestream"]],["result"]]],[11,"parse","","",240,[[["parsestream"]],["result"]]],[11,"parse","","",241,[[["parsestream"]],["result"]]],[11,"parse","","",242,[[["parsestream"]],["result"]]],[11,"parse","","",243,[[["parsestream"]],["result"]]],[11,"parse","","",244,[[["parsestream"]],["result"]]],[11,"parse","","",245,[[["parsestream"]],["result"]]],[11,"parse","","",246,[[["parsestream"]],["result"]]],[11,"parse","","",247,[[["parsestream"]],["result"]]],[11,"parse","","",248,[[["parsestream"]],["result"]]],[11,"parse","","",249,[[["parsestream"]],["result"]]],[11,"parse","","",250,[[["parsestream"]],["result"]]],[11,"parse","","",251,[[["parsestream"]],["result"]]],[11,"parse","","",252,[[["parsestream"]],["result"]]],[11,"parse","","",253,[[["parsestream"]],["result"]]],[11,"parse","","",254,[[["parsestream"]],["result"]]],[11,"parse","","",255,[[["parsestream"]],["result"]]],[11,"parse","","",256,[[["parsestream"]],["result"]]],[11,"parse","","",257,[[["parsestream"]],["result"]]],[11,"parse","","",258,[[["parsestream"]],["result"]]],[11,"parse","","",259,[[["parsestream"]],["result"]]],[11,"parse","","",260,[[["parsestream"]],["result"]]],[11,"parse","","",261,[[["parsestream"]],["result"]]],[11,"parse","","",262,[[["parsestream"]],["result"]]],[11,"parse","","",263,[[["parsestream"]],["result"]]],[11,"parse","","",264,[[["parsestream"]],["result"]]],[11,"parse","","",265,[[["parsestream"]],["result"]]],[11,"parse","","",266,[[["parsestream"]],["result"]]],[11,"parse","","",267,[[["parsestream"]],["result"]]],[11,"parse","","",268,[[["parsestream"]],["result"]]],[11,"parse","","",269,[[["parsestream"]],["result"]]],[11,"parse","","",270,[[["parsestream"]],["result"]]],[11,"parse","","",271,[[["parsestream"]],["result"]]],[11,"parse","","",272,[[["parsestream"]],["result"]]],[11,"parse","","",273,[[["parsestream"]],["result"]]],[11,"parse","","",274,[[["parsestream"]],["result"]]],[11,"parse","","",275,[[["parsestream"]],["result"]]],[11,"parse","","",276,[[["parsestream"]],["result"]]],[11,"parse","","",277,[[["parsestream"]],["result"]]],[11,"parse","","",278,[[["parsestream"]],["result"]]],[11,"parse","syn","",303,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",33,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",14,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",25,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",16,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",26,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",35,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",12,[[["parsestream"]],["result"]]],[11,"parse","","",11,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",10,[[["parsestream"]],[["arm"],["result",["arm"]]]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",74,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],[["usetree"],["result",["usetree"]]]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",75,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",284,[[["parsestream"]],["result"]]],[11,"parse","","",285,[[["parsestream"]],["result"]]],[11,"parse","","",286,[[["parsestream"]],["result"]]],[11,"parse","","",287,[[["parsestream"]],["result"]]],[11,"parse","","",288,[[["parsestream"]],["result"]]],[11,"parse","","",289,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",313,[[["parsestream"]],["result"]]],[11,"drop","","",301,[[["self"]]]],[11,"from","syn","",303,[[["selfvalue"]],["ident"]]],[11,"from","","",303,[[["selftype"]],["ident"]]],[11,"from","","",303,[[["super"]],["ident"]]],[11,"from","","",303,[[["crate"]],["ident"]]],[11,"from","","",303,[[["extern"]],["ident"]]],[11,"from","","",303,[[["underscore"]],["ident"]]],[11,"from","","",150,[[["path"]],["meta"]]],[11,"from","","",150,[[["metalist"]],["meta"]]],[11,"from","","",150,[[["metanamevalue"]],["meta"]]],[11,"from","","",151,[[["meta"]],["nestedmeta"]]],[11,"from","","",151,[[["lit"]],["nestedmeta"]]],[11,"from","","",152,[[["fieldsnamed"]],["fields"]]],[11,"from","","",152,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",153,[[["vispublic"]],["visibility"]]],[11,"from","","",153,[[["viscrate"]],["visibility"]]],[11,"from","","",153,[[["visrestricted"]],["visibility"]]],[11,"from","","",156,[[["exprarray"]],["expr"]]],[11,"from","","",156,[[["exprassign"]],["expr"]]],[11,"from","","",156,[[["exprassignop"]],["expr"]]],[11,"from","","",156,[[["exprasync"]],["expr"]]],[11,"from","","",156,[[["exprawait"]],["expr"]]],[11,"from","","",156,[[["exprbinary"]],["expr"]]],[11,"from","","",156,[[["exprblock"]],["expr"]]],[11,"from","","",156,[[["exprbox"]],["expr"]]],[11,"from","","",156,[[["exprbreak"]],["expr"]]],[11,"from","","",156,[[["exprcall"]],["expr"]]],[11,"from","","",156,[[["exprcast"]],["expr"]]],[11,"from","","",156,[[["exprclosure"]],["expr"]]],[11,"from","","",156,[[["exprcontinue"]],["expr"]]],[11,"from","","",156,[[["exprfield"]],["expr"]]],[11,"from","","",156,[[["exprforloop"]],["expr"]]],[11,"from","","",156,[[["exprgroup"]],["expr"]]],[11,"from","","",156,[[["exprif"]],["expr"]]],[11,"from","","",156,[[["exprindex"]],["expr"]]],[11,"from","","",156,[[["exprlet"]],["expr"]]],[11,"from","","",156,[[["exprlit"]],["expr"]]],[11,"from","","",156,[[["exprloop"]],["expr"]]],[11,"from","","",156,[[["exprmacro"]],["expr"]]],[11,"from","","",156,[[["exprmatch"]],["expr"]]],[11,"from","","",156,[[["exprmethodcall"]],["expr"]]],[11,"from","","",156,[[["exprparen"]],["expr"]]],[11,"from","","",156,[[["exprpath"]],["expr"]]],[11,"from","","",156,[[["exprrange"]],["expr"]]],[11,"from","","",156,[[["exprreference"]],["expr"]]],[11,"from","","",156,[[["exprrepeat"]],["expr"]]],[11,"from","","",156,[[["exprreturn"]],["expr"]]],[11,"from","","",156,[[["exprstruct"]],["expr"]]],[11,"from","","",156,[[["exprtry"]],["expr"]]],[11,"from","","",156,[[["exprtryblock"]],["expr"]]],[11,"from","","",156,[[["exprtuple"]],["expr"]]],[11,"from","","",156,[[["exprtype"]],["expr"]]],[11,"from","","",156,[[["exprunary"]],["expr"]]],[11,"from","","",156,[[["exprunsafe"]],["expr"]]],[11,"from","","",156,[[["exprwhile"]],["expr"]]],[11,"from","","",156,[[["expryield"]],["expr"]]],[11,"from","","",53,[[["usize"]],["index"]]],[11,"from","","",158,[[["typeparam"]],["genericparam"]]],[11,"from","","",158,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",158,[[["constparam"]],["genericparam"]]],[11,"from","","",62,[[["ident"]],["self"]]],[11,"from","","",160,[[["traitbound"]],["typeparambound"]]],[11,"from","","",160,[[["lifetime"]],["typeparambound"]]],[11,"from","","",161,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",161,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",161,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",165,[[["itemconst"]],["item"]]],[11,"from","","",165,[[["itemenum"]],["item"]]],[11,"from","","",165,[[["itemexterncrate"]],["item"]]],[11,"from","","",165,[[["itemfn"]],["item"]]],[11,"from","","",165,[[["itemforeignmod"]],["item"]]],[11,"from","","",165,[[["itemimpl"]],["item"]]],[11,"from","","",165,[[["itemmacro"]],["item"]]],[11,"from","","",165,[[["itemmacro2"]],["item"]]],[11,"from","","",165,[[["itemmod"]],["item"]]],[11,"from","","",165,[[["itemstatic"]],["item"]]],[11,"from","","",165,[[["itemstruct"]],["item"]]],[11,"from","","",165,[[["itemtrait"]],["item"]]],[11,"from","","",165,[[["itemtraitalias"]],["item"]]],[11,"from","","",165,[[["itemtype"]],["item"]]],[11,"from","","",165,[[["itemunion"]],["item"]]],[11,"from","","",165,[[["itemuse"]],["item"]]],[11,"from","","",165,[[["deriveinput"]],["item"]]],[11,"from","","",106,[[["itemstruct"]],["deriveinput"]]],[11,"from","","",106,[[["itemenum"]],["deriveinput"]]],[11,"from","","",106,[[["itemunion"]],["deriveinput"]]],[11,"from","","",167,[[["usepath"]],["usetree"]]],[11,"from","","",167,[[["usename"]],["usetree"]]],[11,"from","","",167,[[["userename"]],["usetree"]]],[11,"from","","",167,[[["useglob"]],["usetree"]]],[11,"from","","",167,[[["usegroup"]],["usetree"]]],[11,"from","","",163,[[["foreignitemfn"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemstatic"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemtype"]],["foreignitem"]]],[11,"from","","",163,[[["foreignitemmacro"]],["foreignitem"]]],[11,"from","","",166,[[["traititemconst"]],["traititem"]]],[11,"from","","",166,[[["traititemmethod"]],["traititem"]]],[11,"from","","",166,[[["traititemtype"]],["traititem"]]],[11,"from","","",166,[[["traititemmacro"]],["traititem"]]],[11,"from","","",164,[[["implitemconst"]],["implitem"]]],[11,"from","","",164,[[["implitemmethod"]],["implitem"]]],[11,"from","","",164,[[["implitemtype"]],["implitem"]]],[11,"from","","",164,[[["implitemmacro"]],["implitem"]]],[11,"from","","",162,[[["receiver"]],["fnarg"]]],[11,"from","","",162,[[["pattype"]],["fnarg"]]],[11,"from","","",168,[[["litstr"]],["lit"]]],[11,"from","","",168,[[["litbytestr"]],["lit"]]],[11,"from","","",168,[[["litbyte"]],["lit"]]],[11,"from","","",168,[[["litchar"]],["lit"]]],[11,"from","","",168,[[["litint"]],["lit"]]],[11,"from","","",168,[[["litfloat"]],["lit"]]],[11,"from","","",168,[[["litbool"]],["lit"]]],[11,"from","","",288,[[["literal"]],["self"]]],[11,"from","","",289,[[["literal"]],["self"]]],[11,"from","","",171,[[["datastruct"]],["data"]]],[11,"from","","",171,[[["dataenum"]],["data"]]],[11,"from","","",171,[[["dataunion"]],["data"]]],[11,"from","","",176,[[["typearray"]],["type"]]],[11,"from","","",176,[[["typebarefn"]],["type"]]],[11,"from","","",176,[[["typegroup"]],["type"]]],[11,"from","","",176,[[["typeimpltrait"]],["type"]]],[11,"from","","",176,[[["typeinfer"]],["type"]]],[11,"from","","",176,[[["typemacro"]],["type"]]],[11,"from","","",176,[[["typenever"]],["type"]]],[11,"from","","",176,[[["typeparen"]],["type"]]],[11,"from","","",176,[[["typepath"]],["type"]]],[11,"from","","",176,[[["typeptr"]],["type"]]],[11,"from","","",176,[[["typereference"]],["type"]]],[11,"from","","",176,[[["typeslice"]],["type"]]],[11,"from","","",176,[[["typetraitobject"]],["type"]]],[11,"from","","",176,[[["typetuple"]],["type"]]],[11,"from","","",177,[[["patbox"]],["pat"]]],[11,"from","","",177,[[["patident"]],["pat"]]],[11,"from","","",177,[[["patlit"]],["pat"]]],[11,"from","","",177,[[["patmacro"]],["pat"]]],[11,"from","","",177,[[["pator"]],["pat"]]],[11,"from","","",177,[[["patpath"]],["pat"]]],[11,"from","","",177,[[["patrange"]],["pat"]]],[11,"from","","",177,[[["patreference"]],["pat"]]],[11,"from","","",177,[[["patrest"]],["pat"]]],[11,"from","","",177,[[["patslice"]],["pat"]]],[11,"from","","",177,[[["patstruct"]],["pat"]]],[11,"from","","",177,[[["pattuple"]],["pat"]]],[11,"from","","",177,[[["pattuplestruct"]],["pat"]]],[11,"from","","",177,[[["pattype"]],["pat"]]],[11,"from","","",177,[[["patwild"]],["pat"]]],[11,"from","","",146,[[["t"]],["self"]]],[11,"from","","",147,[[["t"]],["self"]]],[11,"from","","",302,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",306,[[["self"]],["option"]]],[11,"next_back","","",307,[[["self"]],["option"]]],[11,"next_back","","",308,[[["self"]],["option"]]],[11,"next_back","","",309,[[["self"]],["option"]]],[11,"next_back","","",310,[[["self"]],["option"]]],[11,"next_back","","",311,[[["self"]],["option"]]],[11,"len","","",306,[[["self"]],["usize"]]],[11,"len","","",307,[[["self"]],["usize"]]],[11,"len","","",308,[[["self"]],["usize"]]],[11,"len","","",309,[[["self"]],["usize"]]],[11,"len","","",310,[[["self"]],["usize"]]],[11,"len","","",311,[[["self"]],["usize"]]],[11,"extend","","",294,[[["intoiterator"],["self"]]]],[11,"extend","","",294,[[["self"],["intoiterator"]]]],[11,"into_iter","syn","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[["self"]],["option"]]],[11,"size_hint","","",306,[[["self"]]]],[11,"next","","",307,[[["self"]],["option"]]],[11,"size_hint","","",307,[[["self"]]]],[11,"next","","",308,[[["self"]],["option"]]],[11,"size_hint","","",308,[[["self"]]]],[11,"next","","",309,[[["self"]],["option"]]],[11,"size_hint","","",309,[[["self"]]]],[11,"next","","",310,[[["self"]],["option"]]],[11,"size_hint","","",310,[[["self"]]]],[11,"next","","",311,[[["self"]],["option"]]],[11,"size_hint","","",311,[[["self"]]]],[11,"clone","syn::token","",180,[[["self"]],["underscore"]]],[11,"clone","","",181,[[["self"]],["abstract"]]],[11,"clone","","",182,[[["self"]],["as"]]],[11,"clone","","",183,[[["self"]],["async"]]],[11,"clone","","",184,[[["self"]],["auto"]]],[11,"clone","","",185,[[["self"]],["await"]]],[11,"clone","","",186,[[["self"]],["become"]]],[11,"clone","","",187,[[["self"]],["box"]]],[11,"clone","","",188,[[["self"]],["break"]]],[11,"clone","","",189,[[["self"]],["const"]]],[11,"clone","","",190,[[["self"]],["continue"]]],[11,"clone","","",191,[[["self"]],["crate"]]],[11,"clone","","",192,[[["self"]],["default"]]],[11,"clone","","",193,[[["self"]],["do"]]],[11,"clone","","",194,[[["self"]],["dyn"]]],[11,"clone","","",195,[[["self"]],["else"]]],[11,"clone","","",196,[[["self"]],["enum"]]],[11,"clone","","",197,[[["self"]],["extern"]]],[11,"clone","","",198,[[["self"]],["final"]]],[11,"clone","","",199,[[["self"]],["fn"]]],[11,"clone","","",200,[[["self"]],["for"]]],[11,"clone","","",201,[[["self"]],["if"]]],[11,"clone","","",202,[[["self"]],["impl"]]],[11,"clone","","",203,[[["self"]],["in"]]],[11,"clone","","",204,[[["self"]],["let"]]],[11,"clone","","",205,[[["self"]],["loop"]]],[11,"clone","","",206,[[["self"]],["macro"]]],[11,"clone","","",207,[[["self"]],["match"]]],[11,"clone","","",208,[[["self"]],["mod"]]],[11,"clone","","",209,[[["self"]],["move"]]],[11,"clone","","",210,[[["self"]],["mut"]]],[11,"clone","","",211,[[["self"]],["override"]]],[11,"clone","","",212,[[["self"]],["priv"]]],[11,"clone","","",213,[[["self"]],["pub"]]],[11,"clone","","",214,[[["self"]],["ref"]]],[11,"clone","","",215,[[["self"]],["return"]]],[11,"clone","","",216,[[["self"]],["selftype"]]],[11,"clone","","",217,[[["self"]],["selfvalue"]]],[11,"clone","","",218,[[["self"]],["static"]]],[11,"clone","","",219,[[["self"]],["struct"]]],[11,"clone","","",220,[[["self"]],["super"]]],[11,"clone","","",221,[[["self"]],["trait"]]],[11,"clone","","",222,[[["self"]],["try"]]],[11,"clone","","",223,[[["self"]],["type"]]],[11,"clone","","",224,[[["self"]],["typeof"]]],[11,"clone","","",225,[[["self"]],["union"]]],[11,"clone","","",226,[[["self"]],["unsafe"]]],[11,"clone","","",227,[[["self"]],["unsized"]]],[11,"clone","","",228,[[["self"]],["use"]]],[11,"clone","","",229,[[["self"]],["virtual"]]],[11,"clone","","",230,[[["self"]],["where"]]],[11,"clone","","",231,[[["self"]],["while"]]],[11,"clone","","",232,[[["self"]],["yield"]]],[11,"clone","","",233,[[["self"]],["add"]]],[11,"clone","","",234,[[["self"]],["addeq"]]],[11,"clone","","",235,[[["self"]],["and"]]],[11,"clone","","",236,[[["self"]],["andand"]]],[11,"clone","","",237,[[["self"]],["andeq"]]],[11,"clone","","",238,[[["self"]],["at"]]],[11,"clone","","",239,[[["self"]],["bang"]]],[11,"clone","","",240,[[["self"]],["caret"]]],[11,"clone","","",241,[[["self"]],["careteq"]]],[11,"clone","","",242,[[["self"]],["colon"]]],[11,"clone","","",243,[[["self"]],["colon2"]]],[11,"clone","","",244,[[["self"]],["comma"]]],[11,"clone","","",245,[[["self"]],["div"]]],[11,"clone","","",246,[[["self"]],["diveq"]]],[11,"clone","","",247,[[["self"]],["dollar"]]],[11,"clone","","",248,[[["self"]],["dot"]]],[11,"clone","","",249,[[["self"]],["dot2"]]],[11,"clone","","",250,[[["self"]],["dot3"]]],[11,"clone","","",251,[[["self"]],["dotdoteq"]]],[11,"clone","","",252,[[["self"]],["eq"]]],[11,"clone","","",253,[[["self"]],["eqeq"]]],[11,"clone","","",254,[[["self"]],["ge"]]],[11,"clone","","",255,[[["self"]],["gt"]]],[11,"clone","","",256,[[["self"]],["le"]]],[11,"clone","","",257,[[["self"]],["lt"]]],[11,"clone","","",258,[[["self"]],["muleq"]]],[11,"clone","","",259,[[["self"]],["ne"]]],[11,"clone","","",260,[[["self"]],["or"]]],[11,"clone","","",261,[[["self"]],["oreq"]]],[11,"clone","","",262,[[["self"]],["oror"]]],[11,"clone","","",263,[[["self"]],["pound"]]],[11,"clone","","",264,[[["self"]],["question"]]],[11,"clone","","",265,[[["self"]],["rarrow"]]],[11,"clone","","",266,[[["self"]],["larrow"]]],[11,"clone","","",267,[[["self"]],["rem"]]],[11,"clone","","",268,[[["self"]],["remeq"]]],[11,"clone","","",269,[[["self"]],["fatarrow"]]],[11,"clone","","",270,[[["self"]],["semi"]]],[11,"clone","","",271,[[["self"]],["shl"]]],[11,"clone","","",272,[[["self"]],["shleq"]]],[11,"clone","","",273,[[["self"]],["shr"]]],[11,"clone","","",274,[[["self"]],["shreq"]]],[11,"clone","","",275,[[["self"]],["star"]]],[11,"clone","","",276,[[["self"]],["sub"]]],[11,"clone","","",277,[[["self"]],["subeq"]]],[11,"clone","","",278,[[["self"]],["tilde"]]],[11,"clone","","",279,[[["self"]],["brace"]]],[11,"clone","","",280,[[["self"]],["bracket"]]],[11,"clone","","",281,[[["self"]],["paren"]]],[11,"clone","","",282,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",149,[[["self"]],["attrstyle"]]],[11,"clone","","",150,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",151,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",152,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",153,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",156,[[["self"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprarray"]]],[11,"clone","","",15,[[["self"]],["exprassign"]]],[11,"clone","","",16,[[["self"]],["exprassignop"]]],[11,"clone","","",17,[[["self"]],["exprasync"]]],[11,"clone","","",18,[[["self"]],["exprawait"]]],[11,"clone","","",19,[[["self"]],["exprbinary"]]],[11,"clone","","",20,[[["self"]],["exprblock"]]],[11,"clone","","",21,[[["self"]],["exprbox"]]],[11,"clone","","",22,[[["self"]],["exprbreak"]]],[11,"clone","","",23,[[["self"]],["exprcall"]]],[11,"clone","","",24,[[["self"]],["exprcast"]]],[11,"clone","","",25,[[["self"]],["exprclosure"]]],[11,"clone","","",26,[[["self"]],["exprcontinue"]]],[11,"clone","","",27,[[["self"]],["exprfield"]]],[11,"clone","","",28,[[["self"]],["exprforloop"]]],[11,"clone","","",29,[[["self"]],["exprgroup"]]],[11,"clone","","",30,[[["self"]],["exprif"]]],[11,"clone","","",31,[[["self"]],["exprindex"]]],[11,"clone","","",32,[[["self"]],["exprlet"]]],[11,"clone","","",33,[[["self"]],["exprlit"]]],[11,"clone","","",34,[[["self"]],["exprloop"]]],[11,"clone","","",35,[[["self"]],["exprmacro"]]],[11,"clone","","",36,[[["self"]],["exprmatch"]]],[11,"clone","","",37,[[["self"]],["exprmethodcall"]]],[11,"clone","","",38,[[["self"]],["exprparen"]]],[11,"clone","","",39,[[["self"]],["exprpath"]]],[11,"clone","","",40,[[["self"]],["exprrange"]]],[11,"clone","","",41,[[["self"]],["exprreference"]]],[11,"clone","","",42,[[["self"]],["exprrepeat"]]],[11,"clone","","",43,[[["self"]],["exprreturn"]]],[11,"clone","","",44,[[["self"]],["exprstruct"]]],[11,"clone","","",45,[[["self"]],["exprtry"]]],[11,"clone","","",46,[[["self"]],["exprtryblock"]]],[11,"clone","","",47,[[["self"]],["exprtuple"]]],[11,"clone","","",48,[[["self"]],["exprtype"]]],[11,"clone","","",49,[[["self"]],["exprunary"]]],[11,"clone","","",50,[[["self"]],["exprunsafe"]]],[11,"clone","","",51,[[["self"]],["exprwhile"]]],[11,"clone","","",52,[[["self"]],["expryield"]]],[11,"clone","","",157,[[["self"]],["member"]]],[11,"clone","","",53,[[["self"]],["index"]]],[11,"clone","","",13,[[["self"]],["methodturbofish"]]],[11,"clone","","",154,[[["self"]],["genericmethodargument"]]],[11,"clone","","",11,[[["self"]],["fieldvalue"]]],[11,"clone","","",12,[[["self"]],["label"]]],[11,"clone","","",10,[[["self"]],["arm"]]],[11,"clone","","",155,[[["self"]],["rangelimits"]]],[11,"clone","","",56,[[["self"]],["generics"]]],[11,"clone","","",158,[[["self"]],["genericparam"]]],[11,"clone","","",62,[[["self"]],["typeparam"]]],[11,"clone","","",57,[[["self"]],["lifetimedef"]]],[11,"clone","","",55,[[["self"]],["constparam"]]],[11,"clone","","",304,[[["self"]],["implgenerics"]]],[11,"clone","","",283,[[["self"]],["typegenerics"]]],[11,"clone","","",305,[[["self"]],["turbofish"]]],[11,"clone","","",54,[[["self"]],["boundlifetimes"]]],[11,"clone","","",160,[[["self"]],["typeparambound"]]],[11,"clone","","",61,[[["self"]],["traitbound"]]],[11,"clone","","",159,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",63,[[["self"]],["whereclause"]]],[11,"clone","","",161,[[["self"]],["wherepredicate"]]],[11,"clone","","",60,[[["self"]],["predicatetype"]]],[11,"clone","","",59,[[["self"]],["predicatelifetime"]]],[11,"clone","","",58,[[["self"]],["predicateeq"]]],[11,"clone","","",165,[[["self"]],["item"]]],[11,"clone","","",72,[[["self"]],["itemconst"]]],[11,"clone","","",73,[[["self"]],["itemenum"]]],[11,"clone","","",74,[[["self"]],["itemexterncrate"]]],[11,"clone","","",75,[[["self"]],["itemfn"]]],[11,"clone","","",76,[[["self"]],["itemforeignmod"]]],[11,"clone","","",77,[[["self"]],["itemimpl"]]],[11,"clone","","",78,[[["self"]],["itemmacro"]]],[11,"clone","","",79,[[["self"]],["itemmacro2"]]],[11,"clone","","",80,[[["self"]],["itemmod"]]],[11,"clone","","",81,[[["self"]],["itemstatic"]]],[11,"clone","","",82,[[["self"]],["itemstruct"]]],[11,"clone","","",83,[[["self"]],["itemtrait"]]],[11,"clone","","",84,[[["self"]],["itemtraitalias"]]],[11,"clone","","",85,[[["self"]],["itemtype"]]],[11,"clone","","",86,[[["self"]],["itemunion"]]],[11,"clone","","",87,[[["self"]],["itemuse"]]],[11,"clone","","",167,[[["self"]],["usetree"]]],[11,"clone","","",97,[[["self"]],["usepath"]]],[11,"clone","","",96,[[["self"]],["usename"]]],[11,"clone","","",98,[[["self"]],["userename"]]],[11,"clone","","",94,[[["self"]],["useglob"]]],[11,"clone","","",95,[[["self"]],["usegroup"]]],[11,"clone","","",163,[[["self"]],["foreignitem"]]],[11,"clone","","",64,[[["self"]],["foreignitemfn"]]],[11,"clone","","",66,[[["self"]],["foreignitemstatic"]]],[11,"clone","","",67,[[["self"]],["foreignitemtype"]]],[11,"clone","","",65,[[["self"]],["foreignitemmacro"]]],[11,"clone","","",166,[[["self"]],["traititem"]]],[11,"clone","","",90,[[["self"]],["traititemconst"]]],[11,"clone","","",92,[[["self"]],["traititemmethod"]]],[11,"clone","","",93,[[["self"]],["traititemtype"]]],[11,"clone","","",91,[[["self"]],["traititemmacro"]]],[11,"clone","","",164,[[["self"]],["implitem"]]],[11,"clone","","",68,[[["self"]],["implitemconst"]]],[11,"clone","","",70,[[["self"]],["implitemmethod"]]],[11,"clone","","",71,[[["self"]],["implitemtype"]]],[11,"clone","","",69,[[["self"]],["implitemmacro"]]],[11,"clone","","",89,[[["self"]],["signature"]]],[11,"clone","","",162,[[["self"]],["fnarg"]]],[11,"clone","","",88,[[["self"]],["receiver"]]],[11,"clone","","",99,[[["self"]],["file"]]],[11,"clone","","",100,[[["self"]],["lifetime"]]],[11,"clone","","",168,[[["self"]],["lit"]]],[11,"clone","","",284,[[["self"]],["litstr"]]],[11,"clone","","",285,[[["self"]],["litbytestr"]]],[11,"clone","","",286,[[["self"]],["litbyte"]]],[11,"clone","","",287,[[["self"]],["litchar"]]],[11,"clone","","",288,[[["self"]],["litint"]]],[11,"clone","","",289,[[["self"]],["litfloat"]]],[11,"clone","","",101,[[["self"]],["litbool"]]],[11,"clone","","",169,[[["self"]],["strstyle"]]],[11,"clone","","",102,[[["self"]],["macro"]]],[11,"clone","","",170,[[["self"]],["macrodelimiter"]]],[11,"clone","","",106,[[["self"]],["deriveinput"]]],[11,"clone","","",171,[[["self"]],["data"]]],[11,"clone","","",104,[[["self"]],["datastruct"]]],[11,"clone","","",103,[[["self"]],["dataenum"]]],[11,"clone","","",105,[[["self"]],["dataunion"]]],[11,"clone","","",172,[[["self"]],["binop"]]],[11,"clone","","",173,[[["self"]],["unop"]]],[11,"clone","","",107,[[["self"]],["block"]]],[11,"clone","","",174,[[["self"]],["stmt"]]],[11,"clone","","",108,[[["self"]],["local"]]],[11,"clone","","",176,[[["self"]],["type"]]],[11,"clone","","",111,[[["self"]],["typearray"]]],[11,"clone","","",112,[[["self"]],["typebarefn"]]],[11,"clone","","",113,[[["self"]],["typegroup"]]],[11,"clone","","",114,[[["self"]],["typeimpltrait"]]],[11,"clone","","",115,[[["self"]],["typeinfer"]]],[11,"clone","","",116,[[["self"]],["typemacro"]]],[11,"clone","","",117,[[["self"]],["typenever"]]],[11,"clone","","",118,[[["self"]],["typeparen"]]],[11,"clone","","",119,[[["self"]],["typepath"]]],[11,"clone","","",120,[[["self"]],["typeptr"]]],[11,"clone","","",121,[[["self"]],["typereference"]]],[11,"clone","","",122,[[["self"]],["typeslice"]]],[11,"clone","","",123,[[["self"]],["typetraitobject"]]],[11,"clone","","",124,[[["self"]],["typetuple"]]],[11,"clone","","",109,[[["self"]],["abi"]]],[11,"clone","","",110,[[["self"]],["barefnarg"]]],[11,"clone","","",125,[[["self"]],["variadic"]]],[11,"clone","","",175,[[["self"]],["returntype"]]],[11,"clone","","",177,[[["self"]],["pat"]]],[11,"clone","","",127,[[["self"]],["patbox"]]],[11,"clone","","",128,[[["self"]],["patident"]]],[11,"clone","","",129,[[["self"]],["patlit"]]],[11,"clone","","",130,[[["self"]],["patmacro"]]],[11,"clone","","",131,[[["self"]],["pator"]]],[11,"clone","","",132,[[["self"]],["patpath"]]],[11,"clone","","",133,[[["self"]],["patrange"]]],[11,"clone","","",134,[[["self"]],["patreference"]]],[11,"clone","","",135,[[["self"]],["patrest"]]],[11,"clone","","",136,[[["self"]],["patslice"]]],[11,"clone","","",137,[[["self"]],["patstruct"]]],[11,"clone","","",138,[[["self"]],["pattuple"]]],[11,"clone","","",139,[[["self"]],["pattuplestruct"]]],[11,"clone","","",140,[[["self"]],["pattype"]]],[11,"clone","","",141,[[["self"]],["patwild"]]],[11,"clone","","",126,[[["self"]],["fieldpat"]]],[11,"clone","","",146,[[["self"]],["path"]]],[11,"clone","","",147,[[["self"]],["pathsegment"]]],[11,"clone","","",179,[[["self"]],["patharguments"]]],[11,"clone","","",178,[[["self"]],["genericargument"]]],[11,"clone","","",142,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",143,[[["self"]],["binding"]]],[11,"clone","","",144,[[["self"]],["constraint"]]],[11,"clone","","",145,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",148,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",291,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",294,[[["self"]],["punctuated"]]],[11,"clone","","",306,[[["self"]],["self"]]],[11,"clone","","",308,[[["self"]],["intopairs"]]],[11,"clone","","",309,[[["self"]],["intoiter"]]],[11,"clone","","",310,[[["self"]],["self"]]],[11,"clone","","",293,[[["self"]],["pair"]]],[11,"clone","syn::parse","",300,[[["self"]],["stepcursor"]]],[11,"clone","syn","",302,[[["self"]],["error"]]],[11,"default","syn::token","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","","",185,[[],["self"]]],[11,"default","","",186,[[],["self"]]],[11,"default","","",187,[[],["self"]]],[11,"default","","",188,[[],["self"]]],[11,"default","","",189,[[],["self"]]],[11,"default","","",190,[[],["self"]]],[11,"default","","",191,[[],["self"]]],[11,"default","","",192,[[],["self"]]],[11,"default","","",193,[[],["self"]]],[11,"default","","",194,[[],["self"]]],[11,"default","","",195,[[],["self"]]],[11,"default","","",196,[[],["self"]]],[11,"default","","",197,[[],["self"]]],[11,"default","","",198,[[],["self"]]],[11,"default","","",199,[[],["self"]]],[11,"default","","",200,[[],["self"]]],[11,"default","","",201,[[],["self"]]],[11,"default","","",202,[[],["self"]]],[11,"default","","",203,[[],["self"]]],[11,"default","","",204,[[],["self"]]],[11,"default","","",205,[[],["self"]]],[11,"default","","",206,[[],["self"]]],[11,"default","","",207,[[],["self"]]],[11,"default","","",208,[[],["self"]]],[11,"default","","",209,[[],["self"]]],[11,"default","","",210,[[],["self"]]],[11,"default","","",211,[[],["self"]]],[11,"default","","",212,[[],["self"]]],[11,"default","","",213,[[],["self"]]],[11,"default","","",214,[[],["self"]]],[11,"default","","",215,[[],["self"]]],[11,"default","","",216,[[],["self"]]],[11,"default","","",217,[[],["self"]]],[11,"default","","",218,[[],["self"]]],[11,"default","","",219,[[],["self"]]],[11,"default","","",220,[[],["self"]]],[11,"default","","",221,[[],["self"]]],[11,"default","","",222,[[],["self"]]],[11,"default","","",223,[[],["self"]]],[11,"default","","",224,[[],["self"]]],[11,"default","","",225,[[],["self"]]],[11,"default","","",226,[[],["self"]]],[11,"default","","",227,[[],["self"]]],[11,"default","","",228,[[],["self"]]],[11,"default","","",229,[[],["self"]]],[11,"default","","",230,[[],["self"]]],[11,"default","","",231,[[],["self"]]],[11,"default","","",232,[[],["self"]]],[11,"default","","",233,[[],["self"]]],[11,"default","","",234,[[],["self"]]],[11,"default","","",235,[[],["self"]]],[11,"default","","",236,[[],["self"]]],[11,"default","","",237,[[],["self"]]],[11,"default","","",238,[[],["self"]]],[11,"default","","",239,[[],["self"]]],[11,"default","","",240,[[],["self"]]],[11,"default","","",241,[[],["self"]]],[11,"default","","",242,[[],["self"]]],[11,"default","","",243,[[],["self"]]],[11,"default","","",244,[[],["self"]]],[11,"default","","",245,[[],["self"]]],[11,"default","","",246,[[],["self"]]],[11,"default","","",247,[[],["self"]]],[11,"default","","",248,[[],["self"]]],[11,"default","","",249,[[],["self"]]],[11,"default","","",250,[[],["self"]]],[11,"default","","",251,[[],["self"]]],[11,"default","","",252,[[],["self"]]],[11,"default","","",253,[[],["self"]]],[11,"default","","",254,[[],["self"]]],[11,"default","","",255,[[],["self"]]],[11,"default","","",256,[[],["self"]]],[11,"default","","",257,[[],["self"]]],[11,"default","","",258,[[],["self"]]],[11,"default","","",259,[[],["self"]]],[11,"default","","",260,[[],["self"]]],[11,"default","","",261,[[],["self"]]],[11,"default","","",262,[[],["self"]]],[11,"default","","",263,[[],["self"]]],[11,"default","","",264,[[],["self"]]],[11,"default","","",265,[[],["self"]]],[11,"default","","",266,[[],["self"]]],[11,"default","","",267,[[],["self"]]],[11,"default","","",268,[[],["self"]]],[11,"default","","",269,[[],["self"]]],[11,"default","","",270,[[],["self"]]],[11,"default","","",271,[[],["self"]]],[11,"default","","",272,[[],["self"]]],[11,"default","","",273,[[],["self"]]],[11,"default","","",274,[[],["self"]]],[11,"default","","",275,[[],["self"]]],[11,"default","","",276,[[],["self"]]],[11,"default","","",277,[[],["self"]]],[11,"default","","",278,[[],["self"]]],[11,"default","","",279,[[],["self"]]],[11,"default","","",280,[[],["self"]]],[11,"default","","",281,[[],["self"]]],[11,"default","","",282,[[],["self"]]],[11,"default","syn","",56,[[],["generics"]]],[11,"default","","",54,[[],["boundlifetimes"]]],[11,"default","","",179,[[],["self"]]],[11,"default","syn::punctuated","",294,[[],["self"]]],[11,"cmp","syn","",100,[[["lifetime"],["self"]],["ordering"]]],[11,"eq","","",157,[[["member"],["self"]],["bool"]]],[11,"ne","","",157,[[["member"],["self"]],["bool"]]],[11,"eq","","",53,[[["self"]],["bool"]]],[11,"eq","","",100,[[["lifetime"],["self"]],["bool"]]],[11,"eq","syn::buffer","",291,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",291,[[["self"],["cursor"]],["bool"]]],[11,"partial_cmp","syn","",100,[[["lifetime"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","syn::token","",180,[[["self"]]]],[11,"deref","","",233,[[["self"]]]],[11,"deref","","",235,[[["self"]]]],[11,"deref","","",238,[[["self"]]]],[11,"deref","","",239,[[["self"]]]],[11,"deref","","",240,[[["self"]]]],[11,"deref","","",242,[[["self"]]]],[11,"deref","","",244,[[["self"]]]],[11,"deref","","",245,[[["self"]]]],[11,"deref","","",247,[[["self"]]]],[11,"deref","","",248,[[["self"]]]],[11,"deref","","",252,[[["self"]]]],[11,"deref","","",255,[[["self"]]]],[11,"deref","","",257,[[["self"]]]],[11,"deref","","",260,[[["self"]]]],[11,"deref","","",263,[[["self"]]]],[11,"deref","","",264,[[["self"]]]],[11,"deref","","",267,[[["self"]]]],[11,"deref","","",270,[[["self"]]]],[11,"deref","","",275,[[["self"]]]],[11,"deref","","",276,[[["self"]]]],[11,"deref","","",278,[[["self"]]]],[11,"deref","syn::parse","",300,[[["self"]]]],[11,"deref_mut","syn::token","",180,[[["self"]]]],[11,"deref_mut","","",233,[[["self"]]]],[11,"deref_mut","","",235,[[["self"]]]],[11,"deref_mut","","",238,[[["self"]]]],[11,"deref_mut","","",239,[[["self"]]]],[11,"deref_mut","","",240,[[["self"]]]],[11,"deref_mut","","",242,[[["self"]]]],[11,"deref_mut","","",244,[[["self"]]]],[11,"deref_mut","","",245,[[["self"]]]],[11,"deref_mut","","",247,[[["self"]]]],[11,"deref_mut","","",248,[[["self"]]]],[11,"deref_mut","","",252,[[["self"]]]],[11,"deref_mut","","",255,[[["self"]]]],[11,"deref_mut","","",257,[[["self"]]]],[11,"deref_mut","","",260,[[["self"]]]],[11,"deref_mut","","",263,[[["self"]]]],[11,"deref_mut","","",264,[[["self"]]]],[11,"deref_mut","","",267,[[["self"]]]],[11,"deref_mut","","",270,[[["self"]]]],[11,"deref_mut","","",275,[[["self"]]]],[11,"deref_mut","","",276,[[["self"]]]],[11,"deref_mut","","",278,[[["self"]]]],[11,"fmt","syn::parse","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",302,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",288,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",289,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",301,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",302,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",294,[[["self"],["usize"]]]],[11,"index_mut","","",294,[[["self"],["usize"]]]],[11,"hash","syn","",157,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["h"]]]],[11,"hash","","",100,[[["self"],["h"]]]],[11,"from_iter","syn::punctuated","",294,[[["intoiterator"]],["self"]]],[11,"from_iter","","",294,[[["intoiterator"]],["self"]]],[11,"description","syn","",302,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",181,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",182,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",183,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",184,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",192,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",193,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",194,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",197,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",198,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",199,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",200,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",201,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",202,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",203,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",204,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",205,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",238,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",239,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",240,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",241,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",242,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",243,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",244,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",245,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",246,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",247,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",248,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",249,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",250,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",251,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",252,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",253,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",254,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",255,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",256,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",257,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",258,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",259,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",260,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",261,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",262,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",263,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",264,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",265,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",266,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",267,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",268,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",269,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",270,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",271,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",272,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",273,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",274,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",275,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",276,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",277,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",278,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",33,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",34,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",35,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",160,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",304,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",283,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",305,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",61,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",60,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",167,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",166,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",162,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",74,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",75,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",73,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",284,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",285,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",286,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",287,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",288,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",289,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",293,[[["tokenstream"],["self"]]]],[11,"fmt","syn","",157,[[["formatter"],["self"]],["result"]]],[11,"span","","",157,[[["self"]],[["span"],["option",["span"]]]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"span","","",53,[[["self"]],[["span"],["option",["span"]]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",303,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["self"],["span"]]]],[11,"visit_abi","syn::visit","",296,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_arm","","",296,[[["arm"],["self"]]]],[11,"visit_attr_style","","",296,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",296,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg"],["self"]]]],[11,"visit_bin_op","","",296,[[["binop"],["self"]]]],[11,"visit_binding","","",296,[[["self"],["binding"]]]],[11,"visit_block","","",296,[[["self"],["block"]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes"],["self"]]]],[11,"visit_const_param","","",296,[[["self"],["constparam"]]]],[11,"visit_constraint","","",296,[[["self"],["constraint"]]]],[11,"visit_data","","",296,[[["self"],["data"]]]],[11,"visit_data_enum","","",296,[[["dataenum"],["self"]]]],[11,"visit_data_struct","","",296,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",296,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",296,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",296,[[["self"],["expr"]]]],[11,"visit_expr_array","","",296,[[["self"],["exprarray"]]]],[11,"visit_expr_assign","","",296,[[["self"],["exprassign"]]]],[11,"visit_expr_assign_op","","",296,[[["self"],["exprassignop"]]]],[11,"visit_expr_async","","",296,[[["self"],["exprasync"]]]],[11,"visit_expr_await","","",296,[[["self"],["exprawait"]]]],[11,"visit_expr_binary","","",296,[[["self"],["exprbinary"]]]],[11,"visit_expr_block","","",296,[[["self"],["exprblock"]]]],[11,"visit_expr_box","","",296,[[["self"],["exprbox"]]]],[11,"visit_expr_break","","",296,[[["exprbreak"],["self"]]]],[11,"visit_expr_call","","",296,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",296,[[["exprcast"],["self"]]]],[11,"visit_expr_closure","","",296,[[["self"],["exprclosure"]]]],[11,"visit_expr_continue","","",296,[[["self"],["exprcontinue"]]]],[11,"visit_expr_field","","",296,[[["self"],["exprfield"]]]],[11,"visit_expr_for_loop","","",296,[[["self"],["exprforloop"]]]],[11,"visit_expr_group","","",296,[[["exprgroup"],["self"]]]],[11,"visit_expr_if","","",296,[[["self"],["exprif"]]]],[11,"visit_expr_index","","",296,[[["self"],["exprindex"]]]],[11,"visit_expr_let","","",296,[[["self"],["exprlet"]]]],[11,"visit_expr_lit","","",296,[[["self"],["exprlit"]]]],[11,"visit_expr_loop","","",296,[[["self"],["exprloop"]]]],[11,"visit_expr_macro","","",296,[[["self"],["exprmacro"]]]],[11,"visit_expr_match","","",296,[[["exprmatch"],["self"]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall"],["self"]]]],[11,"visit_expr_paren","","",296,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",296,[[["self"],["exprpath"]]]],[11,"visit_expr_range","","",296,[[["self"],["exprrange"]]]],[11,"visit_expr_reference","","",296,[[["self"],["exprreference"]]]],[11,"visit_expr_repeat","","",296,[[["self"],["exprrepeat"]]]],[11,"visit_expr_return","","",296,[[["self"],["exprreturn"]]]],[11,"visit_expr_struct","","",296,[[["exprstruct"],["self"]]]],[11,"visit_expr_try","","",296,[[["exprtry"],["self"]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock"],["self"]]]],[11,"visit_expr_tuple","","",296,[[["self"],["exprtuple"]]]],[11,"visit_expr_type","","",296,[[["self"],["exprtype"]]]],[11,"visit_expr_unary","","",296,[[["self"],["exprunary"]]]],[11,"visit_expr_unsafe","","",296,[[["self"],["exprunsafe"]]]],[11,"visit_expr_while","","",296,[[["exprwhile"],["self"]]]],[11,"visit_expr_yield","","",296,[[["self"],["expryield"]]]],[11,"visit_field","","",296,[[["self"],["field"]]]],[11,"visit_field_pat","","",296,[[["fieldpat"],["self"]]]],[11,"visit_field_value","","",296,[[["self"],["fieldvalue"]]]],[11,"visit_fields","","",296,[[["self"],["fields"]]]],[11,"visit_fields_named","","",296,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",296,[[["self"],["fieldsunnamed"]]]],[11,"visit_file","","",296,[[["self"],["file"]]]],[11,"visit_fn_arg","","",296,[[["self"],["fnarg"]]]],[11,"visit_foreign_item","","",296,[[["self"],["foreignitem"]]]],[11,"visit_foreign_item_fn","","",296,[[["self"],["foreignitemfn"]]]],[11,"visit_foreign_item_macro","","",296,[[["self"],["foreignitemmacro"]]]],[11,"visit_foreign_item_static","","",296,[[["self"],["foreignitemstatic"]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype"],["self"]]]],[11,"visit_generic_argument","","",296,[[["self"],["genericargument"]]]],[11,"visit_generic_method_argument","","",296,[[["self"],["genericmethodargument"]]]],[11,"visit_generic_param","","",296,[[["self"],["genericparam"]]]],[11,"visit_generics","","",296,[[["self"],["generics"]]]],[11,"visit_ident","","",296,[[["self"],["ident"]]]],[11,"visit_impl_item","","",296,[[["implitem"],["self"]]]],[11,"visit_impl_item_const","","",296,[[["self"],["implitemconst"]]]],[11,"visit_impl_item_macro","","",296,[[["self"],["implitemmacro"]]]],[11,"visit_impl_item_method","","",296,[[["self"],["implitemmethod"]]]],[11,"visit_impl_item_type","","",296,[[["self"],["implitemtype"]]]],[11,"visit_index","","",296,[[["index"],["self"]]]],[11,"visit_item","","",296,[[["self"],["item"]]]],[11,"visit_item_const","","",296,[[["itemconst"],["self"]]]],[11,"visit_item_enum","","",296,[[["self"],["itemenum"]]]],[11,"visit_item_extern_crate","","",296,[[["self"],["itemexterncrate"]]]],[11,"visit_item_fn","","",296,[[["itemfn"],["self"]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod"],["self"]]]],[11,"visit_item_impl","","",296,[[["self"],["itemimpl"]]]],[11,"visit_item_macro","","",296,[[["itemmacro"],["self"]]]],[11,"visit_item_macro2","","",296,[[["self"],["itemmacro2"]]]],[11,"visit_item_mod","","",296,[[["itemmod"],["self"]]]],[11,"visit_item_static","","",296,[[["self"],["itemstatic"]]]],[11,"visit_item_struct","","",296,[[["itemstruct"],["self"]]]],[11,"visit_item_trait","","",296,[[["self"],["itemtrait"]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias"],["self"]]]],[11,"visit_item_type","","",296,[[["itemtype"],["self"]]]],[11,"visit_item_union","","",296,[[["self"],["itemunion"]]]],[11,"visit_item_use","","",296,[[["itemuse"],["self"]]]],[11,"visit_label","","",296,[[["self"],["label"]]]],[11,"visit_lifetime","","",296,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef"],["self"]]]],[11,"visit_lit","","",296,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",296,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",296,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",296,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",296,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",296,[[["litfloat"],["self"]]]],[11,"visit_lit_int","","",296,[[["self"],["litint"]]]],[11,"visit_lit_str","","",296,[[["self"],["litstr"]]]],[11,"visit_local","","",296,[[["self"],["local"]]]],[11,"visit_macro","","",296,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",296,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",296,[[["self"],["member"]]]],[11,"visit_meta","","",296,[[["meta"],["self"]]]],[11,"visit_meta_list","","",296,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue"],["self"]]]],[11,"visit_method_turbofish","","",296,[[["self"],["methodturbofish"]]]],[11,"visit_nested_meta","","",296,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_pat","","",296,[[["self"],["pat"]]]],[11,"visit_pat_box","","",296,[[["patbox"],["self"]]]],[11,"visit_pat_ident","","",296,[[["self"],["patident"]]]],[11,"visit_pat_lit","","",296,[[["self"],["patlit"]]]],[11,"visit_pat_macro","","",296,[[["self"],["patmacro"]]]],[11,"visit_pat_or","","",296,[[["pator"],["self"]]]],[11,"visit_pat_path","","",296,[[["self"],["patpath"]]]],[11,"visit_pat_range","","",296,[[["patrange"],["self"]]]],[11,"visit_pat_reference","","",296,[[["patreference"],["self"]]]],[11,"visit_pat_rest","","",296,[[["self"],["patrest"]]]],[11,"visit_pat_slice","","",296,[[["self"],["patslice"]]]],[11,"visit_pat_struct","","",296,[[["patstruct"],["self"]]]],[11,"visit_pat_tuple","","",296,[[["self"],["pattuple"]]]],[11,"visit_pat_tuple_struct","","",296,[[["self"],["pattuplestruct"]]]],[11,"visit_pat_type","","",296,[[["self"],["pattype"]]]],[11,"visit_pat_wild","","",296,[[["patwild"],["self"]]]],[11,"visit_path","","",296,[[["self"],["path"]]]],[11,"visit_path_arguments","","",296,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",296,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",296,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",296,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",296,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",296,[[["self"],["qself"]]]],[11,"visit_range_limits","","",296,[[["rangelimits"],["self"]]]],[11,"visit_receiver","","",296,[[["self"],["receiver"]]]],[11,"visit_return_type","","",296,[[["returntype"],["self"]]]],[11,"visit_signature","","",296,[[["self"],["signature"]]]],[11,"visit_span","","",296,[[["self"],["span"]]]],[11,"visit_stmt","","",296,[[["self"],["stmt"]]]],[11,"visit_trait_bound","","",296,[[["traitbound"],["self"]]]],[11,"visit_trait_bound_modifier","","",296,[[["self"],["traitboundmodifier"]]]],[11,"visit_trait_item","","",296,[[["self"],["traititem"]]]],[11,"visit_trait_item_const","","",296,[[["self"],["traititemconst"]]]],[11,"visit_trait_item_macro","","",296,[[["self"],["traititemmacro"]]]],[11,"visit_trait_item_method","","",296,[[["self"],["traititemmethod"]]]],[11,"visit_trait_item_type","","",296,[[["self"],["traititemtype"]]]],[11,"visit_type","","",296,[[["self"],["type"]]]],[11,"visit_type_array","","",296,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",296,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",296,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",296,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",296,[[["typeinfer"],["self"]]]],[11,"visit_type_macro","","",296,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",296,[[["self"],["typenever"]]]],[11,"visit_type_param","","",296,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",296,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",296,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",296,[[["typepath"],["self"]]]],[11,"visit_type_ptr","","",296,[[["typeptr"],["self"]]]],[11,"visit_type_reference","","",296,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",296,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject"],["self"]]]],[11,"visit_type_tuple","","",296,[[["typetuple"],["self"]]]],[11,"visit_un_op","","",296,[[["self"],["unop"]]]],[11,"visit_use_glob","","",296,[[["self"],["useglob"]]]],[11,"visit_use_group","","",296,[[["usegroup"],["self"]]]],[11,"visit_use_name","","",296,[[["self"],["usename"]]]],[11,"visit_use_path","","",296,[[["self"],["usepath"]]]],[11,"visit_use_rename","","",296,[[["self"],["userename"]]]],[11,"visit_use_tree","","",296,[[["usetree"],["self"]]]],[11,"visit_variadic","","",296,[[["self"],["variadic"]]]],[11,"visit_variant","","",296,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",296,[[["viscrate"],["self"]]]],[11,"visit_vis_public","","",296,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",296,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",296,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",296,[[["whereclause"],["self"]]]],[11,"visit_where_predicate","","",296,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["tuple_utils"] = {"doc":"A simple set of utility traits for working with tuples","i":[[8,"Append","tuple_utils","Helper trait to allow Appending of tuples",null,null],[16,"Output","","",0,null],[10,"append","","Append T onto the end of the tuple returning a new tuple…",0,[[["t"]]]],[8,"Prepend","","Helper trait to allow Perpending of tuples",null,null],[16,"Output","","",1,null],[10,"prepend","","Append T onto the start of the tuple returning a new tuple…",1,[[["t"]]]],[8,"Merge","","Helper trait that allow for merging of tuples",null,null],[16,"Output","","",2,null],[10,"merge","","merge LHS with RHS returning a new tuple that contains the…",2,[[["t"]]]],[8,"Split","","Tries to split a tuple into two tuples if the tuple is odd…",null,null],[16,"Left","","",3,null],[16,"Right","","",3,null],[10,"split","","",3,[[]]]],"p":[[8,"Append"],[8,"Prepend"],[8,"Merge"],[8,"Split"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);